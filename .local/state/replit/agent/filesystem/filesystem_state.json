{"file_contents":{"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":778},"server/middleware/validation.ts":{"content":"import { body, param, query, validationResult } from 'express-validator';\nimport { Request, Response, NextFunction } from 'express';\n\n// Custom validation error formatter\nexport const handleValidationErrors = (req: Request, res: Response, next: NextFunction) => {\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    const formattedErrors = errors.array().map(error => ({\n      field: error.type === 'field' ? error.path : 'unknown',\n      message: error.msg,\n      value: error.type === 'field' ? error.value : undefined\n    }));\n    \n    return res.status(400).json({\n      error: 'Validation failed',\n      details: formattedErrors\n    });\n  }\n  next();\n};\n\n// User validation schemas\nexport const validateUserRegistration = [\n  body('email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Please provide a valid email address'),\n  body('name')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Name must be between 2 and 50 characters'),\n  body('password')\n    .isLength({ min: 8 })\n    .withMessage('Password must be at least 8 characters long')\n    .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/)\n    .withMessage('Password must contain at least one uppercase letter, one lowercase letter, one number, and one special character'),\n  handleValidationErrors\n];\n\nexport const validateUserLogin = [\n  body('email')\n    .isEmail()\n    .normalizeEmail()\n    .withMessage('Please provide a valid email address'),\n  body('password')\n    .notEmpty()\n    .withMessage('Password is required'),\n  handleValidationErrors\n];\n\n// Challenge validation schemas\nexport const validateChallenge = [\n  body('title')\n    .trim()\n    .isLength({ min: 3, max: 100 })\n    .withMessage('Title must be between 3 and 100 characters'),\n  body('description')\n    .trim()\n    .isLength({ min: 10, max: 1000 })\n    .withMessage('Description must be between 10 and 1000 characters'),\n  body('duration')\n    .isInt({ min: 1, max: 365 })\n    .withMessage('Duration must be between 1 and 365 days'),\n  handleValidationErrors\n];\n\n// Task validation schemas\nexport const validateTask = [\n  body('title')\n    .trim()\n    .isLength({ min: 3, max: 100 })\n    .withMessage('Title must be between 3 and 100 characters'),\n  body('content')\n    .trim()\n    .isLength({ min: 10, max: 5000 })\n    .withMessage('Content must be between 10 and 5000 characters'),\n  body('dayNumber')\n    .isInt({ min: 1 })\n    .withMessage('Day number must be a positive integer'),\n  body('resourceLinks')\n    .optional()\n    .isArray()\n    .withMessage('Resource links must be an array'),\n  body('resourceLinks.*.type')\n    .optional()\n    .isIn(['video', 'document', 'link', 'practice', 'interactive', 'community'])\n    .withMessage('Invalid resource type'),\n  body('resourceLinks.*.title')\n    .optional()\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Resource title must be between 1 and 100 characters'),\n  body('resourceLinks.*.url')\n    .optional()\n    .isURL()\n    .withMessage('Resource URL must be a valid URL'),\n  handleValidationErrors\n];\n\n// Quiz validation schemas\nexport const validateQuiz = [\n  body('questions')\n    .isArray({ min: 1 })\n    .withMessage('Quiz must have at least one question'),\n  body('questions.*.question')\n    .trim()\n    .isLength({ min: 5, max: 500 })\n    .withMessage('Question must be between 5 and 500 characters'),\n  body('questions.*.options')\n    .isArray({ min: 2, max: 6 })\n    .withMessage('Each question must have 2-6 options'),\n  body('questions.*.correctAnswer')\n    .isInt({ min: 0 })\n    .withMessage('Correct answer must be a valid option index'),\n  handleValidationErrors\n];\n\n// Certification validation schemas\nexport const validateCertification = [\n  body('title')\n    .trim()\n    .isLength({ min: 3, max: 100 })\n    .withMessage('Title must be between 3 and 100 characters'),\n  body('provider')\n    .trim()\n    .isLength({ min: 2, max: 50 })\n    .withMessage('Provider must be between 2 and 50 characters'),\n  body('link')\n    .isURL()\n    .withMessage('Link must be a valid URL'),\n  handleValidationErrors\n];\n\n// Roadmap validation schemas\nexport const validateRoadmap = [\n  body('title')\n    .trim()\n    .isLength({ min: 3, max: 100 })\n    .withMessage('Title must be between 3 and 100 characters'),\n  body('description')\n    .trim()\n    .isLength({ min: 10, max: 1000 })\n    .withMessage('Description must be between 10 and 1000 characters'),\n  body('category')\n    .trim()\n    .isIn(['Programming', 'Web Development', 'Data Science', 'Artificial Intelligence', 'Cybersecurity'])\n    .withMessage('Invalid category'),\n  body('difficulty')\n    .trim()\n    .isIn(['Beginner', 'Intermediate', 'Advanced'])\n    .withMessage('Invalid difficulty level'),\n  body('estimatedDuration')\n    .isInt({ min: 1, max: 52 })\n    .withMessage('Estimated duration must be between 1 and 52 weeks'),\n  handleValidationErrors\n];\n\nexport const validateRoadmapStep = [\n  body('title')\n    .trim()\n    .isLength({ min: 3, max: 100 })\n    .withMessage('Title must be between 3 and 100 characters'),\n  body('description')\n    .trim()\n    .isLength({ min: 10, max: 1000 })\n    .withMessage('Description must be between 10 and 1000 characters'),\n  body('stepNumber')\n    .isInt({ min: 1 })\n    .withMessage('Step number must be a positive integer'),\n  body('resourceLinks')\n    .optional()\n    .isArray()\n    .withMessage('Resource links must be an array'),\n  body('isOptional')\n    .optional()\n    .isBoolean()\n    .withMessage('isOptional must be a boolean'),\n  handleValidationErrors\n];\n\n// Parameter validation\nexport const validateObjectId = [\n  param('id')\n    .isUUID()\n    .withMessage('Invalid ID format'),\n  handleValidationErrors\n];\n\n// Query validation\nexport const validatePagination = [\n  query('page')\n    .optional()\n    .isInt({ min: 1 })\n    .withMessage('Page must be a positive integer'),\n  query('limit')\n    .optional()\n    .isInt({ min: 1, max: 100 })\n    .withMessage('Limit must be between 1 and 100'),\n  handleValidationErrors\n];\n\n// Search validation\nexport const validateSearch = [\n  query('q')\n    .optional()\n    .trim()\n    .isLength({ min: 1, max: 100 })\n    .withMessage('Search query must be between 1 and 100 characters'),\n  query('category')\n    .optional()\n    .trim()\n    .isIn(['Programming', 'Web Development', 'Data Science', 'Artificial Intelligence', 'Cybersecurity'])\n    .withMessage('Invalid category'),\n  query('difficulty')\n    .optional()\n    .trim()\n    .isIn(['Beginner', 'Intermediate', 'Advanced'])\n    .withMessage('Invalid difficulty level'),\n  handleValidationErrors\n];\n\n// File upload validation\nexport const validateFileUpload = [\n  body('file')\n    .custom((value, { req }) => {\n      if (!req.file) {\n        throw new Error('File is required');\n      }\n      \n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'application/pdf'];\n      if (!allowedTypes.includes(req.file.mimetype)) {\n        throw new Error('Invalid file type. Only JPEG, PNG, GIF, and PDF files are allowed');\n      }\n      \n      const maxSize = 5 * 1024 * 1024; // 5MB\n      if (req.file.size > maxSize) {\n        throw new Error('File size must be less than 5MB');\n      }\n      \n      return true;\n    }),\n  handleValidationErrors\n];\n\n// Custom validators\nexport const validateEmail = (email: string): boolean => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\n\nexport const validatePassword = (password: string): boolean => {\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/;\n  return passwordRegex.test(password);\n};\n\nexport const sanitizeString = (str: string): string => {\n  return str.trim().replace(/[<>]/g, '');\n};\n\nexport const validateURL = (url: string): boolean => {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n};\n","size_bytes":7859},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\nimport { auth } from \"./firebase\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nasync function getAuthHeaders(): Promise<Record<string, string>> {\n  const user = auth.currentUser;\n  if (user) {\n    const token = await user.getIdToken();\n    return {\n      \"Authorization\": `Bearer ${token}`,\n    };\n  }\n  return {};\n}\n\nexport async function apiRequest<T = any>(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<T> {\n  const headers = await getAuthHeaders();\n  const res = await fetch(url, {\n    method,\n    headers: {\n      ...headers,\n      ...(data ? { \"Content-Type\": \"application/json\" } : {}),\n    },\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return await res.json();\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const headers = await getAuthHeaders();\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      headers,\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1811},"server/seed-badges.ts":{"content":"import { db } from \"./db\";\nimport { badges } from \"@shared/schema\";\n\nexport async function seedBadges() {\n  console.log(\"🌱 Seeding badges...\");\n\n  const badgeData = [\n    // Learning milestones\n    {\n      name: \"First Steps\",\n      description: \"Complete your first task\",\n      icon: \"👶\",\n      color: \"blue\",\n      xpRequired: 0,\n      category: \"milestone\",\n      isRare: false,\n    },\n    {\n      name: \"Quick Learner\",\n      description: \"Complete 5 tasks in a single day\",\n      icon: \"⚡\",\n      color: \"yellow\",\n      xpRequired: 50,\n      category: \"achievement\",\n      isRare: false,\n    },\n    {\n      name: \"Knowledge Seeker\",\n      description: \"Complete 10 tasks\",\n      icon: \"🔍\",\n      color: \"green\",\n      xpRequired: 100,\n      category: \"milestone\",\n      isRare: false,\n    },\n    {\n      name: \"Dedicated Student\",\n      description: \"Complete 25 tasks\",\n      icon: \"📚\",\n      color: \"purple\",\n      xpRequired: 250,\n      category: \"milestone\",\n      isRare: false,\n    },\n    {\n      name: \"Learning Champion\",\n      description: \"Complete 50 tasks\",\n      icon: \"🏆\",\n      color: \"gold\",\n      xpRequired: 500,\n      category: \"milestone\",\n      isRare: true,\n    },\n\n    // Streak badges\n    {\n      name: \"Getting Started\",\n      description: \"Maintain a 3-day learning streak\",\n      icon: \"🔥\",\n      color: \"orange\",\n      xpRequired: 30,\n      category: \"streak\",\n      isRare: false,\n    },\n    {\n      name: \"Consistent Learner\",\n      description: \"Maintain a 7-day learning streak\",\n      icon: \"🔥🔥\",\n      color: \"red\",\n      xpRequired: 70,\n      category: \"streak\",\n      isRare: false,\n    },\n    {\n      name: \"Unstoppable\",\n      description: \"Maintain a 30-day learning streak\",\n      icon: \"🔥🔥🔥\",\n      color: \"red\",\n      xpRequired: 300,\n      category: \"streak\",\n      isRare: true,\n    },\n\n    // Quiz performance\n    {\n      name: \"Perfect Score\",\n      description: \"Get 100% on a quiz\",\n      icon: \"💯\",\n      color: \"gold\",\n      xpRequired: 0,\n      category: \"performance\",\n      isRare: false,\n    },\n    {\n      name: \"Quiz Master\",\n      description: \"Get perfect scores on 5 quizzes\",\n      icon: \"🧠\",\n      color: \"purple\",\n      xpRequired: 0,\n      category: \"performance\",\n      isRare: true,\n    },\n\n    // Challenge completion\n    {\n      name: \"Challenge Conqueror\",\n      description: \"Complete your first challenge\",\n      icon: \"🎯\",\n      color: \"blue\",\n      xpRequired: 100,\n      category: \"challenge\",\n      isRare: false,\n    },\n    {\n      name: \"Multi-Challenge Master\",\n      description: \"Complete 3 different challenges\",\n      icon: \"🎖️\",\n      color: \"gold\",\n      xpRequired: 300,\n      category: \"challenge\",\n      isRare: true,\n    },\n\n    // Roadmap progress\n    {\n      name: \"Roadmap Explorer\",\n      description: \"Start your first roadmap\",\n      icon: \"🗺️\",\n      color: \"blue\",\n      xpRequired: 0,\n      category: \"roadmap\",\n      isRare: false,\n    },\n    {\n      name: \"Pathfinder\",\n      description: \"Complete 25% of a roadmap\",\n      icon: \"🧭\",\n      color: \"green\",\n      xpRequired: 50,\n      category: \"roadmap\",\n      isRare: false,\n    },\n    {\n      name: \"Journey Master\",\n      description: \"Complete 50% of a roadmap\",\n      icon: \"🏔️\",\n      color: \"purple\",\n      xpRequired: 100,\n      category: \"roadmap\",\n      isRare: false,\n    },\n    {\n      name: \"Roadmap Legend\",\n      description: \"Complete an entire roadmap\",\n      icon: \"🏆\",\n      color: \"gold\",\n      xpRequired: 500,\n      category: \"roadmap\",\n      isRare: true,\n    },\n\n    // Special achievements\n    {\n      name: \"Early Bird\",\n      description: \"Complete a task before 8 AM\",\n      icon: \"🌅\",\n      color: \"yellow\",\n      xpRequired: 0,\n      category: \"special\",\n      isRare: false,\n    },\n    {\n      name: \"Night Owl\",\n      description: \"Complete a task after 10 PM\",\n      icon: \"🦉\",\n      color: \"purple\",\n      xpRequired: 0,\n      category: \"special\",\n      isRare: false,\n    },\n    {\n      name: \"Weekend Warrior\",\n      description: \"Complete tasks on both weekend days\",\n      icon: \"⚔️\",\n      color: \"orange\",\n      xpRequired: 0,\n      category: \"special\",\n      isRare: false,\n    },\n    {\n      name: \"Speed Learner\",\n      description: \"Complete a task in under 5 minutes\",\n      icon: \"⚡\",\n      color: \"yellow\",\n      xpRequired: 0,\n      category: \"special\",\n      isRare: true,\n    },\n    {\n      name: \"Deep Thinker\",\n      description: \"Spend over 30 minutes on a single task\",\n      icon: \"🤔\",\n      color: \"blue\",\n      xpRequired: 0,\n      category: \"special\",\n      isRare: false,\n    },\n  ];\n\n  try {\n    // Clear existing badges\n    await db.delete(badges);\n    console.log(\"🗑️ Cleared existing badges\");\n\n    // Insert new badges\n    await db.insert(badges).values(badgeData);\n    console.log(`✅ Seeded ${badgeData.length} badges`);\n\n    return badgeData.length;\n  } catch (error) {\n    console.error(\"❌ Error seeding badges:\", error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  seedBadges()\n    .then(() => {\n      console.log(\"🎉 Badge seeding completed!\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"💥 Badge seeding failed:\", error);\n      process.exit(1);\n    });\n}\n","size_bytes":5368},"server/middleware/cache.ts":{"content":"import { Request, Response, NextFunction } from 'express';\nimport { logger } from './logger';\n\n// Simple in-memory cache (for development)\n// In production, use Redis\nclass MemoryCache {\n  private cache: Map<string, { data: any; expiry: number }> = new Map();\n  \n  set(key: string, data: any, ttl: number = 300000) { // 5 minutes default\n    const expiry = Date.now() + ttl;\n    this.cache.set(key, { data, expiry });\n  }\n  \n  get(key: string): any | null {\n    const item = this.cache.get(key);\n    if (!item) return null;\n    \n    if (Date.now() > item.expiry) {\n      this.cache.delete(key);\n      return null;\n    }\n    \n    return item.data;\n  }\n  \n  delete(key: string) {\n    this.cache.delete(key);\n  }\n  \n  clear() {\n    this.cache.clear();\n  }\n  \n  size() {\n    return this.cache.size;\n  }\n}\n\nconst memoryCache = new MemoryCache();\n\n// Cache middleware\nexport const cacheMiddleware = (ttl: number = 300000) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    // Only cache GET requests\n    if (req.method !== 'GET') {\n      return next();\n    }\n    \n    // Generate cache key\n    const cacheKey = `${req.method}:${req.originalUrl}:${req.query ? JSON.stringify(req.query) : ''}`;\n    \n    // Check cache\n    const cachedData = memoryCache.get(cacheKey);\n    if (cachedData) {\n      logger.debug('Cache hit', { key: cacheKey });\n      return res.json(cachedData);\n    }\n    \n    // Override res.json to cache response\n    const originalJson = res.json;\n    res.json = function(body: any) {\n      // Only cache successful responses\n      if (res.statusCode === 200) {\n        memoryCache.set(cacheKey, body, ttl);\n        logger.debug('Cache set', { key: cacheKey, ttl });\n      }\n      \n      return originalJson.call(this, body);\n    };\n    \n    next();\n  };\n};\n\n// Cache invalidation middleware\nexport const cacheInvalidation = (pattern: string) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    // Override res.json to invalidate cache\n    const originalJson = res.json;\n    res.json = function(body: any) {\n      // Invalidate cache after successful operations\n      if (res.statusCode >= 200 && res.statusCode < 300) {\n        // This is a simplified version - in production, use Redis pattern matching\n        memoryCache.clear();\n        logger.debug('Cache invalidated', { pattern });\n      }\n      \n      return originalJson.call(this, body);\n    };\n    \n    next();\n  };\n};\n\n// Cache statistics\nexport const cacheStats = (req: Request, res: Response) => {\n  res.json({\n    size: memoryCache.size(),\n    timestamp: new Date().toISOString()\n  });\n};\n\n// Clear cache endpoint\nexport const clearCache = (req: Request, res: Response) => {\n  memoryCache.clear();\n  logger.info('Cache cleared manually');\n  res.json({ message: 'Cache cleared successfully' });\n};\n\n// Cache for specific routes\nexport const userCache = cacheMiddleware(600000); // 10 minutes\nexport const challengeCache = cacheMiddleware(300000); // 5 minutes\nexport const roadmapCache = cacheMiddleware(900000); // 15 minutes\nexport const certificationCache = cacheMiddleware(1800000); // 30 minutes\n\n// Cache invalidation for specific operations\nexport const invalidateUserCache = cacheInvalidation('user');\nexport const invalidateChallengeCache = cacheInvalidation('challenge');\nexport const invalidateRoadmapCache = cacheInvalidation('roadmap');\n","size_bytes":3369},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/StreakCalendar.tsx":{"content":"interface StreakCalendarProps {\n  activeDays: number[];\n  totalDays: number;\n}\n\nexport function StreakCalendar({ activeDays, totalDays }: StreakCalendarProps) {\n  const days = Array.from({ length: totalDays }, (_, i) => i + 1);\n  \n  return (\n    <div className=\"flex flex-wrap gap-2\">\n      {days.map((day) => {\n        const isActive = activeDays.includes(day);\n        return (\n          <div\n            key={day}\n            className={`w-8 h-8 rounded-md flex items-center justify-center text-xs font-medium transition-colors ${\n              isActive\n                ? \"bg-primary text-primary-foreground\"\n                : \"bg-muted text-muted-foreground\"\n            }`}\n            data-testid={`day-${day}`}\n          >\n            {day}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","size_bytes":804},"server/seed-api.ts":{"content":"import fetch from 'node-fetch';\n\nconst API_BASE = 'http://localhost:5000/api';\n\nasync function seedDatabase() {\n  console.log(\"🌱 Starting database seeding via API...\");\n\n  try {\n    // Create admin user\n    console.log(\"👤 Creating admin user...\");\n    const adminResponse = await fetch(`${API_BASE}/admin/create-admin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: 'admin@lumoraed.com',\n        password: 'Admin@123'\n      })\n    });\n\n    if (adminResponse.ok) {\n      const adminData = await adminResponse.json() as { user: { email: string } };\n      console.log(\"✅ Admin user created:\", adminData.user.email);\n    } else {\n      console.log(\"ℹ️ Admin user may already exist or error occurred\");\n    }\n\n    console.log(\"🎉 Database seeding completed!\");\n    console.log(\"\\n📊 Summary:\");\n    console.log(`- Admin credentials: admin@lumoraed.com / Admin@123`);\n    console.log(`- You can now login as admin and create challenges through the admin panel`);\n\n  } catch (error) {\n    console.error(\"❌ Error seeding database:\", error);\n    console.log(\"💡 Make sure the server is running on port 5000\");\n    throw error;\n  }\n}\n\n// Run the seeding if this file is executed directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  seedDatabase()\n    .then(() => {\n      console.log(\"✅ Seeding completed\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"❌ Seeding failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { seedDatabase };\n","size_bytes":1588},"client/src/__tests__/components.test.tsx":{"content":"import React from 'react';\nimport { render } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { ThemeProvider } from '@/contexts/ThemeContext';\nimport { AuthProvider } from '@/contexts/AuthContext';\nimport { AppSidebar } from '@/components/AppSidebar';\nimport { MetricCard } from '@/components/MetricCard';\nimport { ProgressRing } from '@/components/ProgressRing';\nimport { Home } from 'lucide-react';\n\n// Mock Firebase\njest.mock('@/lib/firebase', () => ({\n  auth: {\n    onAuthStateChanged: jest.fn(),\n    signOut: jest.fn()\n  }\n}));\n\n// Test wrapper component\nconst TestWrapper: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        retry: false,\n      },\n    },\n  });\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <AuthProvider>\n          {children}\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n};\n\ndescribe('Components', () => {\n  describe('AppSidebar', () => {\n    it('renders navigation items', () => {\n      const { getByText } = render(\n        <TestWrapper>\n          <AppSidebar />\n        </TestWrapper>\n      );\n      \n      expect(getByText('Dashboard')).toBeInTheDocument();\n      expect(getByText('Challenges')).toBeInTheDocument();\n      expect(getByText('Roadmaps')).toBeInTheDocument();\n      expect(getByText('Certifications')).toBeInTheDocument();\n    });\n  });\n  \n  describe('MetricCard', () => {\n    it('renders metric card with title and value', () => {\n      const { getByText } = render(\n        <TestWrapper>\n          <MetricCard\n            title=\"Test Metric\"\n            value=\"100\"\n            icon={Home}\n            description=\"Test description\"\n          />\n        </TestWrapper>\n      );\n      \n      expect(getByText('Test Metric')).toBeInTheDocument();\n      expect(getByText('100')).toBeInTheDocument();\n    });\n  });\n  \n  describe('ProgressRing', () => {\n    it('renders progress ring with percentage', () => {\n      const { getByText } = render(\n        <TestWrapper>\n          <ProgressRing\n            percentage={75}\n            size={100}\n            strokeWidth={8}\n          />\n        </TestWrapper>\n      );\n      \n      expect(getByText('75%')).toBeInTheDocument();\n    });\n  });\n});\n","size_bytes":2405},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/contexts/ThemeContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport function ThemeProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    const saved = localStorage.getItem(\"theme\");\n    return (saved as Theme) || \"light\";\n  });\n\n  useEffect(() => {\n    const root = document.documentElement;\n    if (theme === \"dark\") {\n      root.classList.add(\"dark\");\n    } else {\n      root.classList.remove(\"dark\");\n    }\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  const toggleTheme = () => {\n    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}\n","size_bytes":1147},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/Register.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { signInWithGoogle, signUpWithEmail } from \"@/lib/firebase\";\nimport { BookOpen } from \"lucide-react\";\n\nexport default function Register() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const handleGoogleSignUp = async () => {\n    try {\n      setLoading(true);\n      await signInWithGoogle();\n      setLocation(\"/dashboard\");\n    } catch (error: any) {\n      toast({\n        title: \"Authentication Error\",\n        description: error.message.includes(\"not configured\")\n          ? \"Firebase authentication is not configured. Please contact the administrator to set up authentication.\"\n          : error.message || \"Failed to sign up with Google\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailSignUp = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      await signUpWithEmail(email, password);\n      setLocation(\"/dashboard\");\n    } catch (error: any) {\n      toast({\n        title: \"Authentication Error\",\n        description: error.message.includes(\"not configured\")\n          ? \"Firebase authentication is not configured. Please contact the administrator to set up authentication.\"\n          : error.message || \"Failed to create account\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-primary/10 via-background to-secondary/10 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center space-y-2\">\n          <div className=\"flex justify-center mb-4\">\n            <div className=\"p-3 rounded-xl bg-primary/10\">\n              <BookOpen className=\"h-8 w-8 text-primary\" />\n            </div>\n          </div>\n          <CardTitle className=\"text-3xl font-bold\">Create Your Account</CardTitle>\n          <CardDescription className=\"text-base\">\n            Start your learning journey today\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Button\n            onClick={handleGoogleSignUp}\n            disabled={loading}\n            variant=\"outline\"\n            className=\"w-full\"\n            data-testid=\"button-google-signup\"\n          >\n            <svg className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\n              <path\n                fill=\"currentColor\"\n                d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n              />\n              <path\n                fill=\"currentColor\"\n                d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n              />\n              <path\n                fill=\"currentColor\"\n                d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n              />\n              <path\n                fill=\"currentColor\"\n                d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n              />\n            </svg>\n            Continue with Google\n          </Button>\n\n          <div className=\"relative\">\n            <div className=\"absolute inset-0 flex items-center\">\n              <span className=\"w-full border-t\" />\n            </div>\n            <div className=\"relative flex justify-center text-xs uppercase\">\n              <span className=\"bg-card px-2 text-muted-foreground\">Or continue with</span>\n            </div>\n          </div>\n\n          <form onSubmit={handleEmailSignUp} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Name</Label>\n              <Input\n                id=\"name\"\n                type=\"text\"\n                placeholder=\"Your name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n                data-testid=\"input-name\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"you@example.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                data-testid=\"input-email\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder=\"••••••••\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n                minLength={6}\n                data-testid=\"input-password\"\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full\" disabled={loading} data-testid=\"button-signup\">\n              {loading ? \"Creating account...\" : \"Create Account\"}\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex justify-center\">\n          <p className=\"text-sm text-muted-foreground\">\n            Already have an account?{\" \"}\n            <Button\n              variant=\"ghost\"\n              className=\"p-0 h-auto font-semibold text-primary hover:text-primary\"\n              onClick={() => setLocation(\"/login\")}\n              data-testid=\"link-login\"\n            >\n              Sign in\n            </Button>\n          </p>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":6335},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"server/utils/AppError.ts":{"content":"export class AppError extends Error {\n  public readonly statusCode: number;\n  public readonly isOperational: boolean;\n\n  constructor(message: string, statusCode: number) {\n    super(message);\n    \n    this.statusCode = statusCode;\n    this.isOperational = true;\n\n    Error.captureStackTrace(this, this.constructor);\n  }\n}\n\n// Custom error types\nexport class ValidationError extends AppError {\n  constructor(message: string) {\n    super(message, 400);\n  }\n}\n\nexport class AuthenticationError extends AppError {\n  constructor(message: string = 'Authentication failed') {\n    super(message, 401);\n  }\n}\n\nexport class AuthorizationError extends AppError {\n  constructor(message: string = 'Access denied') {\n    super(message, 403);\n  }\n}\n\nexport class NotFoundError extends AppError {\n  constructor(message: string = 'Resource not found') {\n    super(message, 404);\n  }\n}\n\nexport class ConflictError extends AppError {\n  constructor(message: string = 'Resource already exists') {\n    super(message, 409);\n  }\n}\n\nexport class RateLimitError extends AppError {\n  constructor(message: string = 'Too many requests') {\n    super(message, 429);\n  }\n}\n\nexport class DatabaseError extends AppError {\n  constructor(message: string = 'Database operation failed') {\n    super(message, 500);\n  }\n}\n\nexport class ExternalServiceError extends AppError {\n  constructor(message: string = 'External service unavailable') {\n    super(message, 503);\n  }\n}\n","size_bytes":1433},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"server/index.ts":{"content":"import \"dotenv/config\";\nimport { createRequire } from \"module\";\nimport { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst require = createRequire(import.meta.url);\nconst express = require(\"express\");\nconst session = require(\"express-session\");\nconst MemoryStore = require(\"memorystore\")(session);\n\nconst app = express();\n\n// Set the environment for Express\napp.set(\"env\", process.env.NODE_ENV || \"development\");\n\n// Configure session middleware\napp.use(session({\n  secret: process.env.SESSION_SECRET || 'lumoraed-secret-key',\n  resave: false,\n  saveUninitialized: false,\n  store: new MemoryStore({\n    checkPeriod: 86400000 // prune expired entries every 24h\n  }),\n  cookie: {\n    secure: false, // Set to true in production with HTTPS\n    maxAge: 24 * 60 * 60 * 1000 // 24 hours\n  }\n}));\n\ndeclare module 'http' {\n  interface IncomingMessage {\n    rawBody: unknown\n  }\n}\n\n// Session data interface\ninterface SessionData {\n  userId?: string;\n  userRole?: string;\n  isAdmin?: boolean;\n}\napp.use(express.json({\n  verify: (req: any, _res: any, buf: any) => {\n    req.rawBody = buf;\n  }\n}));\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req: Request, res: Response, next: NextFunction) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson: any, ..._args: any[]) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.call(res, bodyJson);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (process.env.NODE_ENV === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"localhost\",\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":3065},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"server/reset-users.ts":{"content":"import \"dotenv/config\";\nimport { storage } from \"./storage\";\n\nasync function resetUsers() {\n  try {\n    console.log(\"🔄 Resetting all users to ensure correct roles...\");\n    \n    const allUsers = await storage.getAllUsers();\n    console.log(`Found ${allUsers.length} users to process`);\n    \n    for (const user of allUsers) {\n      console.log(`Processing user: ${user.email} (current role: ${user.role})`);\n      \n      // Only admin@lumoraed.com should be admin, all others should be students\n      const shouldBeAdmin = user.email === \"admin@lumoraed.com\";\n      const correctRole = shouldBeAdmin ? \"admin\" : \"student\";\n      \n      if (user.role !== correctRole) {\n        console.log(`🔄 Updating ${user.email}: ${user.role} → ${correctRole}`);\n        await storage.updateUser(user.id, { role: correctRole });\n        console.log(`✅ Updated ${user.email} to ${correctRole}`);\n      } else {\n        console.log(`✅ ${user.email} already has correct role: ${user.role}`);\n      }\n    }\n    \n    console.log(\"🎉 User roles reset successfully!\");\n    console.log(\"📝 Summary:\");\n    console.log(\"  - Only admin@lumoraed.com is admin\");\n    console.log(\"  - All other users are students\");\n    console.log(\"  - New Google/Firebase logins will create student users\");\n    \n    return allUsers.length;\n  } catch (error) {\n    console.error(\"❌ Error resetting users:\", error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  resetUsers()\n    .then(() => {\n      console.log(\"🎉 User reset completed!\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"💥 User reset failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { resetUsers };\n","size_bytes":1745},"server/storage.ts":{"content":"import {\n  users,\n  challenges,\n  tasks,\n  quizzes,\n  submissions,\n  userProgress,\n  certifications,\n  roadmaps,\n  roadmapSteps,\n  type User,\n  type InsertUser,\n  type Challenge,\n  type InsertChallenge,\n  type Task,\n  type InsertTask,\n  type Quiz,\n  type InsertQuiz,\n  type Submission,\n  type InsertSubmission,\n  type UserProgress,\n  type InsertUserProgress,\n  type Certification,\n  type InsertCertification,\n  type Roadmap,\n  type InsertRoadmap,\n  type RoadmapStep,\n  type InsertRoadmapStep,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, and, desc, count } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // Users\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  getUserByFirebaseUid(firebaseUid: string): Promise<User | undefined>;\n  getAllUsers(): Promise<User[]>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUser(id: string, data: Partial<User>): Promise<User>;\n\n  // Challenges\n  getAllChallenges(userId?: string): Promise<Challenge[]>;\n  getChallenge(id: string): Promise<Challenge | undefined>;\n  createChallenge(challenge: InsertChallenge): Promise<Challenge>;\n  getChallengeParticipantCount(challengeId: string): Promise<number>;\n\n  // Tasks\n  getTasksByChallenge(challengeId: string): Promise<Task[]>;\n  getTask(id: string): Promise<Task | undefined>;\n  createTask(task: InsertTask): Promise<Task>;\n\n  // Quizzes\n  getQuizByTask(taskId: string): Promise<Quiz | undefined>;\n  createQuiz(quiz: InsertQuiz): Promise<Quiz>;\n\n  // Submissions\n  getUserSubmissions(userId: string, taskId?: string): Promise<Submission[]>;\n  getSubmission(userId: string, taskId: string): Promise<Submission | undefined>;\n  createSubmission(submission: InsertSubmission): Promise<Submission>;\n  updateSubmissionStatus(id: string, status: string, score?: number): Promise<Submission>;\n\n  // User Progress\n  getUserProgress(userId: string, challengeId?: string): Promise<UserProgress[]>;\n  getProgress(userId: string, challengeId: string): Promise<UserProgress | undefined>;\n  createProgress(progress: InsertUserProgress): Promise<UserProgress>;\n  updateProgress(id: string, data: Partial<UserProgress>): Promise<UserProgress>;\n\n  // Certifications\n  getAllCertifications(): Promise<Certification[]>;\n  createCertification(cert: InsertCertification): Promise<Certification>;\n  deleteCertification(id: string): Promise<void>;\n\n  // Roadmaps\n  getAllRoadmaps(): Promise<Roadmap[]>;\n  getRoadmap(id: string): Promise<Roadmap | undefined>;\n  createRoadmap(roadmap: InsertRoadmap): Promise<Roadmap>;\n  updateRoadmap(id: string, data: Partial<Roadmap>): Promise<Roadmap>;\n  deleteRoadmap(id: string): Promise<void>;\n\n  // Roadmap Steps\n  getStepsByRoadmap(roadmapId: string): Promise<RoadmapStep[]>;\n  getRoadmapStep(id: string): Promise<RoadmapStep | undefined>;\n  createRoadmapStep(step: InsertRoadmapStep): Promise<RoadmapStep>;\n  updateRoadmapStep(id: string, data: Partial<RoadmapStep>): Promise<RoadmapStep>;\n  deleteRoadmapStep(id: string): Promise<void>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // Users\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || undefined;\n  }\n\n  async getUserByFirebaseUid(firebaseUid: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.firebaseUid, firebaseUid));\n    return user || undefined;\n  }\n\n  async getAllUsers(): Promise<User[]> {\n    return await db.select().from(users);\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db.insert(users).values(insertUser).returning();\n    return user;\n  }\n\n  async updateUser(id: string, data: Partial<User>): Promise<User> {\n    const [user] = await db.update(users).set(data).where(eq(users.id, id)).returning();\n    return user;\n  }\n\n  // Challenges\n  async getAllChallenges(): Promise<Challenge[]> {\n    return await db.select().from(challenges).orderBy(desc(challenges.createdAt));\n  }\n\n  async getChallenge(id: string): Promise<Challenge | undefined> {\n    const [challenge] = await db.select().from(challenges).where(eq(challenges.id, id));\n    return challenge || undefined;\n  }\n\n  async createChallenge(challenge: InsertChallenge): Promise<Challenge> {\n    const [newChallenge] = await db.insert(challenges).values(challenge).returning();\n    return newChallenge;\n  }\n\n  async getChallengeParticipantCount(challengeId: string): Promise<number> {\n    const result = await db\n      .select({ count: count() })\n      .from(userProgress)\n      .where(eq(userProgress.challengeId, challengeId));\n    return result[0]?.count || 0;\n  }\n\n  // Tasks\n  async getTasksByChallenge(challengeId: string): Promise<Task[]> {\n    return await db.select().from(tasks).where(eq(tasks.challengeId, challengeId));\n  }\n\n  async getTask(id: string): Promise<Task | undefined> {\n    const [task] = await db.select().from(tasks).where(eq(tasks.id, id));\n    return task || undefined;\n  }\n\n  async createTask(task: InsertTask): Promise<Task> {\n    const [newTask] = await db.insert(tasks).values(task as any).returning();\n    return newTask;\n  }\n\n  // Quizzes\n  async getQuizByTask(taskId: string): Promise<Quiz | undefined> {\n    const [quiz] = await db.select().from(quizzes).where(eq(quizzes.taskId, taskId));\n    return quiz || undefined;\n  }\n\n  async createQuiz(quiz: InsertQuiz): Promise<Quiz> {\n    const [newQuiz] = await db.insert(quizzes).values(quiz as any).returning();\n    return newQuiz;\n  }\n\n  // Submissions\n  async getUserSubmissions(userId: string, taskId?: string): Promise<Submission[]> {\n    if (taskId) {\n      return await db\n        .select()\n        .from(submissions)\n        .where(and(eq(submissions.userId, userId), eq(submissions.taskId, taskId)));\n    }\n    return await db.select().from(submissions).where(eq(submissions.userId, userId));\n  }\n\n  async getSubmission(userId: string, taskId: string): Promise<Submission | undefined> {\n    const [submission] = await db\n      .select()\n      .from(submissions)\n      .where(and(eq(submissions.userId, userId), eq(submissions.taskId, taskId)));\n    return submission || undefined;\n  }\n\n  async createSubmission(submission: InsertSubmission): Promise<Submission> {\n    const [newSubmission] = await db.insert(submissions).values(submission).returning();\n    return newSubmission;\n  }\n\n  async updateSubmissionStatus(id: string, status: string, score?: number): Promise<Submission> {\n    const [updated] = await db\n      .update(submissions)\n      .set({ status, score })\n      .where(eq(submissions.id, id))\n      .returning();\n    return updated;\n  }\n\n  // User Progress\n  async getUserProgress(userId: string, challengeId?: string): Promise<UserProgress[]> {\n    if (challengeId) {\n      return await db\n        .select()\n        .from(userProgress)\n        .where(and(eq(userProgress.userId, userId), eq(userProgress.challengeId, challengeId)));\n    }\n    return await db.select().from(userProgress).where(eq(userProgress.userId, userId));\n  }\n\n  async getProgress(userId: string, challengeId: string): Promise<UserProgress | undefined> {\n    const [progress] = await db\n      .select()\n      .from(userProgress)\n      .where(and(eq(userProgress.userId, userId), eq(userProgress.challengeId, challengeId)));\n    return progress || undefined;\n  }\n\n  async createProgress(progress: InsertUserProgress): Promise<UserProgress> {\n    const [newProgress] = await db.insert(userProgress).values(progress).returning();\n    return newProgress;\n  }\n\n  async updateProgress(id: string, data: Partial<UserProgress>): Promise<UserProgress> {\n    const [updated] = await db\n      .update(userProgress)\n      .set(data)\n      .where(eq(userProgress.id, id))\n      .returning();\n    return updated;\n  }\n\n  // Certifications\n  async getAllCertifications(): Promise<Certification[]> {\n    return await db.select().from(certifications).orderBy(desc(certifications.dateAdded));\n  }\n\n  async createCertification(cert: InsertCertification): Promise<Certification> {\n    const [newCert] = await db.insert(certifications).values(cert).returning();\n    return newCert;\n  }\n\n  async deleteCertification(id: string): Promise<void> {\n    await db.delete(certifications).where(eq(certifications.id, id));\n  }\n\n  // Roadmaps\n  async getAllRoadmaps(): Promise<Roadmap[]> {\n    return await db.select().from(roadmaps).orderBy(desc(roadmaps.createdAt));\n  }\n\n  async getRoadmap(id: string): Promise<Roadmap | undefined> {\n    const [roadmap] = await db.select().from(roadmaps).where(eq(roadmaps.id, id));\n    return roadmap || undefined;\n  }\n\n  async createRoadmap(roadmap: InsertRoadmap): Promise<Roadmap> {\n    const [newRoadmap] = await db.insert(roadmaps).values(roadmap).returning();\n    return newRoadmap;\n  }\n\n  async updateRoadmap(id: string, data: Partial<Roadmap>): Promise<Roadmap> {\n    const [updated] = await db.update(roadmaps).set(data).where(eq(roadmaps.id, id)).returning();\n    return updated;\n  }\n\n  async deleteRoadmap(id: string): Promise<void> {\n    await db.delete(roadmaps).where(eq(roadmaps.id, id));\n  }\n\n  // Roadmap Steps\n  async getStepsByRoadmap(roadmapId: string): Promise<RoadmapStep[]> {\n    return await db.select().from(roadmapSteps).where(eq(roadmapSteps.roadmapId, roadmapId)).orderBy(roadmapSteps.stepNumber);\n  }\n\n  async getRoadmapStep(id: string): Promise<RoadmapStep | undefined> {\n    const [step] = await db.select().from(roadmapSteps).where(eq(roadmapSteps.id, id));\n    return step || undefined;\n  }\n\n  async createRoadmapStep(step: InsertRoadmapStep): Promise<RoadmapStep> {\n    const [newStep] = await db.insert(roadmapSteps).values(step as any).returning();\n    return newStep;\n  }\n\n  async updateRoadmapStep(id: string, data: Partial<RoadmapStep>): Promise<RoadmapStep> {\n    const [updated] = await db.update(roadmapSteps).set(data).where(eq(roadmapSteps.id, id)).returning();\n    return updated;\n  }\n\n  async deleteRoadmapStep(id: string): Promise<void> {\n    await db.delete(roadmapSteps).where(eq(roadmapSteps.id, id));\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":10301},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });\n","size_bytes":483},"server/check-users.ts":{"content":"import \"dotenv/config\";\nimport { storage } from \"./storage\";\n\nasync function checkUsers() {\n  try {\n    console.log(\"👥 Checking all users in database...\");\n    \n    const allUsers = await storage.getAllUsers();\n    console.log(`Found ${allUsers.length} users:`);\n    \n    allUsers.forEach((user, index) => {\n      console.log(`${index + 1}. ${user.email} - Role: ${user.role} - Firebase UID: ${user.firebaseUid}`);\n    });\n    \n    return allUsers;\n  } catch (error) {\n    console.error(\"❌ Error checking users:\", error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  checkUsers()\n    .then(() => {\n      console.log(\"🎉 User check completed!\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"💥 User check failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { checkUsers };\n","size_bytes":880},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"eslint.config.js":{"content":"import js from '@eslint/js';\nimport typescript from '@typescript-eslint/eslint-plugin';\nimport typescriptParser from '@typescript-eslint/parser';\nimport react from 'eslint-plugin-react';\nimport reactHooks from 'eslint-plugin-react-hooks';\n\nconst browserGlobals = {\n  window: 'readonly',\n  document: 'readonly',\n  navigator: 'readonly',\n  localStorage: 'readonly',\n  setTimeout: 'readonly',\n  clearTimeout: 'readonly',\n  Request: 'readonly',\n  Response: 'readonly',\n  JSX: 'readonly',\n  HTMLDivElement: 'readonly',\n  HTMLParagraphElement: 'readonly',\n  HTMLHeadingElement: 'readonly',\n  HTMLButtonElement: 'readonly',\n  HTMLSpanElement: 'readonly',\n  HTMLTableElement: 'readonly',\n  HTMLTableSectionElement: 'readonly',\n  HTMLTableRowElement: 'readonly',\n  HTMLTableCellElement: 'readonly',\n  HTMLTableCaptionElement: 'readonly',\n  HTMLUListElement: 'readonly',\n  HTMLLIElement: 'readonly',\n  HTMLAnchorElement: 'readonly',\n  HTMLInputElement: 'readonly',\n  HTMLTextAreaElement: 'readonly',\n};\n\nconst nodeGlobals = {\n  console: 'readonly',\n  process: 'readonly',\n  Buffer: 'readonly',\n  __dirname: 'readonly',\n  __filename: 'readonly',\n  module: 'readonly',\n  require: 'readonly',\n  exports: 'readonly',\n  global: 'readonly',\n};\n\nconst jestGlobals = {\n  jest: 'readonly',\n  describe: 'readonly',\n  it: 'readonly',\n  expect: 'readonly',\n  beforeAll: 'readonly',\n  afterAll: 'readonly',\n  beforeEach: 'readonly',\n  afterEach: 'readonly',\n};\n\nexport default [\n  js.configs.recommended,\n  {\n    files: ['**/*.{ts,tsx}'],\n    languageOptions: {\n      parser: typescriptParser,\n      parserOptions: {\n        ecmaVersion: 2020,\n        sourceType: 'module',\n        ecmaFeatures: { jsx: true },\n      },\n    },\n    plugins: {\n      '@typescript-eslint': typescript,\n      react,\n      'react-hooks': reactHooks,\n    },\n    rules: {\n      'no-undef': 'off',\n      // Use the TS-specific rule and disable the base rule for TS files\n      'no-unused-vars': 'off',\n      '@typescript-eslint/no-unused-vars': ['error', { argsIgnorePattern: '^_' }],\n      '@typescript-eslint/no-explicit-any': 'warn',\n      '@typescript-eslint/explicit-function-return-type': 'off',\n      '@typescript-eslint/explicit-module-boundary-types': 'off',\n      '@typescript-eslint/no-non-null-assertion': 'warn',\n      'react/react-in-jsx-scope': 'off',\n      'react/prop-types': 'off',\n      'react/display-name': 'off',\n      'no-console': ['warn', { allow: ['warn', 'error'] }],\n      'no-debugger': 'error',\n      'prefer-const': 'error',\n      'no-var': 'error',\n    },\n  },\n  {\n    files: ['client/**/*.{ts,tsx}'],\n    languageOptions: {\n      globals: { ...browserGlobals },\n    },\n    rules: {\n      '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],\n      'no-unused-vars': 'warn',\n    },\n  },\n  {\n    files: ['server/**/*.{ts,tsx}'],\n    languageOptions: {\n      globals: { ...nodeGlobals },\n    },\n    rules: {\n      'no-console': 'off',\n      '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],\n    },\n  },\n  {\n    files: ['**/__tests__/**/*.{ts,tsx,js,jsx}', '**/*.(test|spec).{ts,tsx,js,jsx}', 'jest.setup.js'],\n    languageOptions: {\n      globals: { ...jestGlobals, ...browserGlobals, ...nodeGlobals },\n    },\n    rules: {\n      'no-console': 'off',\n    },\n  },\n  {\n    files: ['server/seed*.ts', 'server/run-seed*.ts'],\n    languageOptions: {\n      globals: { ...nodeGlobals },\n    },\n    rules: {\n      'no-console': 'off',\n      '@typescript-eslint/no-unused-vars': ['warn', { argsIgnorePattern: '^_' }],\n    },\n  },\n  {\n    files: ['**/*.{js,jsx}'],\n    languageOptions: {\n      ecmaVersion: 2020,\n      sourceType: 'module',\n      globals: { ...browserGlobals, ...nodeGlobals },\n    },\n  },\n  {\n    ignores: [\n      'dist/',\n      'node_modules/',\n      'coverage/',\n      '*.config.js',\n      '*.config.ts',\n      'build/',\n      '.next/',\n      'out/',\n      'migrations/',\n    ],\n  },\n];\n","size_bytes":3926},"server/run-seed-badges.ts":{"content":"import \"dotenv/config\";\nimport { seedBadges } from \"./seed-badges\";\n\nasync function main() {\n  try {\n    await seedBadges();\n    console.log(\"🎉 Badge seeding completed successfully!\");\n  } catch (error) {\n    console.error(\"💥 Badge seeding failed:\", error);\n    process.exit(1);\n  }\n}\n\nmain();\n","size_bytes":300},"README.md":{"content":"# LumoraEd - Student Learning Platform\n\nA comprehensive full-stack web application for student learning and challenge platform built with React, Node.js, and PostgreSQL.\n\n## 🚀 Features\n\n- **Student Dashboard** - Track progress, view challenges, and monitor achievements\n- **Learning Roadmaps** - Structured learning paths for Python, Java, Full Stack Development, AI, and Data Science\n- **Challenge System** - Interactive coding challenges and quizzes\n- **Certification Tracking** - Manage and track learning certifications\n- **Admin Panel** - Comprehensive admin interface for content management\n- **Real-time Progress** - Live progress tracking and analytics\n- **Responsive Design** - Mobile-first design with dark/light theme support\n\n## 🛠️ Tech Stack\n\n### Frontend\n- **React 18** with TypeScript\n- **Vite** for build tooling\n- **TailwindCSS** for styling\n- **Radix UI** for components\n- **TanStack Query** for data fetching\n- **Wouter** for routing\n- **Firebase** for authentication\n\n### Backend\n- **Node.js** with Express\n- **TypeScript** for type safety\n- **Drizzle ORM** with PostgreSQL\n- **Firebase Admin** for authentication\n- **Winston** for logging\n- **Helmet** for security\n- **Rate limiting** and input validation\n\n### Database\n- **PostgreSQL** with Neon\n- **Redis** for caching and sessions\n\n## 📦 Installation\n\n1. **Clone the repository**\n   ```bash\n   git clone https://github.com/yourusername/lumoraed.git\n   cd lumoraed\n   ```\n\n2. **Install dependencies**\n   ```bash\n   npm install\n   ```\n\n3. **Set up environment variables**\n   ```bash\n   cp env.production.example .env\n   # Edit .env with your configuration\n   ```\n\n4. **Set up the database**\n   ```bash\n   npm run db:push\n   npm run db:seed:roadmaps\n   ```\n\n5. **Start development server**\n   ```bash\n   npm run dev\n   ```\n\n## 📁 Project Structure\n\n```\nlumoraed/\n├── client/                 # Frontend React application\n│   ├── src/\n│   │   ├── components/     # Reusable UI components\n│   │   ├── pages/         # Page components\n│   │   ├── contexts/      # React contexts\n│   │   ├── hooks/         # Custom hooks\n│   │   └── lib/           # Utilities and configurations\n├── server/                # Backend Node.js application\n│   ├── middleware/        # Express middleware\n│   ├── routes/           # API routes\n│   ├── utils/            # Server utilities\n│   └── index.ts          # Server entry point\n├── shared/               # Shared types and schemas\n└── dist/                 # Build output\n```\n\n## 🧪 Testing\n\n```bash\n# Run all tests\nnpm test\n\n# Run tests in watch mode\nnpm run test:watch\n\n# Run tests with coverage\nnpm run test:coverage\n\n# Run E2E tests\nnpm run test:e2e\n```\n\n## 🔧 Development Scripts\n\n```bash\nnpm run dev              # Start development server\nnpm run build            # Build for production\nnpm run lint             # Run ESLint\nnpm run lint:fix         # Fix ESLint issues\nnpm run db:push          # Push database schema\nnpm run db:seed:roadmaps # Seed roadmaps data\n```\n\n## 🔒 Security Features\n\n- **Input Validation** - Sanitize and validate all inputs\n- **XSS Protection** - Prevent cross-site scripting\n- **Security Headers** - Comprehensive security headers\n- **Session Security** - Secure session management\n- **Authentication** - Firebase-based authentication\n\n## 📊 Performance Features\n\n- **Compression** - Gzip compression for responses\n- **Database Optimization** - Connection pooling and query optimization\n- **Lazy Loading** - Code splitting and lazy loading\n\n## 🤝 Contributing\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add some amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## 📄 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## 🆘 Support\n\nIf you have any questions or need help, please:\n\n1. Check the [Issues](https://github.com/yourusername/lumoraed/issues) page\n2. Create a new issue if your problem isn't already reported\n3. Join our community discussions\n\n---\n\nMade with ❤️ by the LumoraEd team","size_bytes":4281},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"server/run-seed.ts":{"content":"import \"dotenv/config\";\nimport { seedDatabase } from \"./seed\";\n\nasync function runSeed() {\n  console.log(\"🌱 Starting comprehensive database seeding...\");\n  try {\n    await seedDatabase();\n    console.log(\"✅ Comprehensive seeding completed successfully!\");\n  } catch (error) {\n    console.error(\"❌ Seeding failed:\", error);\n    process.exit(1);\n  }\n}\n\nrunSeed();\n","size_bytes":369},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/pages/Challenges.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Calendar, Users, Clock } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\nimport type { Challenge, UserProgress } from \"@shared/schema\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ChallengeWithProgress extends Challenge {\n  enrolled?: boolean;\n  participantCount: number;\n  progress?: UserProgress;\n}\n\nexport default function Challenges() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n\n  const { data: challenges, isLoading } = useQuery<ChallengeWithProgress[]>({\n    queryKey: [\"/api/challenges\"],\n  });\n\n  const enrollMutation = useMutation({\n    mutationFn: (challengeId: string) =>\n      apiRequest(\"POST\", `/api/challenges/${challengeId}/enroll`, {}),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/challenges\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/dashboard\"] });\n      toast({\n        title: \"Enrolled successfully\",\n        description: \"You can now start this challenge\",\n      });\n    },\n    onError: () => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to enroll in challenge\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading challenges...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-4xl font-bold tracking-tight\">Challenges</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          Choose a challenge and start your learning journey\n        </p>\n      </div>\n\n      {challenges && challenges.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {challenges.map((challenge) => (\n            <Card\n              key={challenge.id}\n              className=\"flex flex-col hover-elevate cursor-pointer\"\n              onClick={() => setLocation(`/challenges/${challenge.id}`)}\n              data-testid={`challenge-card-${challenge.id}`}\n            >\n              <CardHeader>\n                <div className=\"flex items-start justify-between gap-2 mb-2\">\n                  <CardTitle className=\"text-xl\">{challenge.title}</CardTitle>\n                  {challenge.enrolled && (\n                    <Badge variant=\"default\" data-testid={`badge-enrolled-${challenge.id}`}>\n                      Enrolled\n                    </Badge>\n                  )}\n                </div>\n                <CardDescription className=\"line-clamp-2\">\n                  {challenge.description}\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-1\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span>{challenge.duration} days</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Users className=\"h-4 w-4\" />\n                    <span>{challenge.participantCount} participants</span>\n                  </div>\n                  {challenge.progress && (\n                    <div className=\"mt-4\">\n                      <div className=\"flex justify-between text-sm mb-2\">\n                        <span className=\"text-muted-foreground\">Progress</span>\n                        <span className=\"font-medium\">\n                          {Math.round((challenge.progress.completedDays / challenge.duration) * 100)}%\n                        </span>\n                      </div>\n                      <div className=\"h-2 bg-muted rounded-full overflow-hidden\">\n                        <div\n                          className=\"h-full bg-primary transition-all duration-300\"\n                          style={{\n                            width: `${(challenge.progress.completedDays / challenge.duration) * 100}%`,\n                          }}\n                        />\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n              <CardFooter>\n                {challenge.enrolled ? (\n                  <Button\n                    className=\"w-full\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      setLocation(`/challenges/${challenge.id}`);\n                    }}\n                    data-testid={`button-continue-${challenge.id}`}\n                  >\n                    Continue Learning\n                  </Button>\n                ) : (\n                  <Button\n                    className=\"w-full\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      enrollMutation.mutate(challenge.id);\n                    }}\n                    disabled={enrollMutation.isPending}\n                    data-testid={`button-enroll-${challenge.id}`}\n                  >\n                    {enrollMutation.isPending ? \"Enrolling...\" : \"Enroll Now\"}\n                  </Button>\n                )}\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <Clock className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n            <p className=\"text-muted-foreground mb-4\">No challenges available yet</p>\n            <p className=\"text-sm text-muted-foreground\">\n              Check back soon for new learning challenges\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":6211},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"server/fix-user-roles.ts":{"content":"import \"dotenv/config\";\nimport { storage } from \"./storage\";\n\nasync function fixUserRoles() {\n  try {\n    console.log(\"🔧 Checking and fixing user roles...\");\n    \n    const allUsers = await storage.getAllUsers();\n    console.log(`Found ${allUsers.length} users in database`);\n    \n    for (const user of allUsers) {\n      console.log(`User: ${user.email} - Current role: ${user.role}`);\n      \n      // Only admin@lumoraed.com should be admin, all others should be students\n      const shouldBeAdmin = user.email === \"admin@lumoraed.com\";\n      const correctRole = shouldBeAdmin ? \"admin\" : \"student\";\n      \n      if (user.role !== correctRole) {\n        console.log(`⚠️  Fixing ${user.email}: ${user.role} → ${correctRole}`);\n        await storage.updateUser(user.id, { role: correctRole });\n        console.log(`✅ Updated ${user.email} to ${correctRole}`);\n      } else {\n        console.log(`✅ ${user.email} already has correct role: ${user.role}`);\n      }\n    }\n    \n    console.log(\"🎉 User roles fixed successfully!\");\n    return allUsers.length;\n  } catch (error) {\n    console.error(\"❌ Error fixing user roles:\", error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  fixUserRoles()\n    .then(() => {\n      console.log(\"🎉 User role fixing completed!\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"💥 User role fixing failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { fixUserRoles };\n","size_bytes":1517},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/pages/TaskDetail.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { ArrowLeft, CheckCircle2, XCircle, ExternalLink, FileText, Video, Link as LinkIcon } from \"lucide-react\";\nimport type { Task, Quiz, Submission } from \"@shared/schema\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface TaskDetailData {\n  task: Task;\n  quiz?: Quiz;\n  submission?: Submission;\n}\n\nexport default function TaskDetail() {\n  const [, params] = useRoute(\"/tasks/:id\");\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const taskId = params?.id;\n\n  const [quizStarted, setQuizStarted] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState<number[]>([]);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [resourcesViewed, setResourcesViewed] = useState<Set<number>>(new Set());\n  const [learningTime, setLearningTime] = useState(0);\n  const [startTime] = useState(Date.now());\n\n  const { data, isLoading } = useQuery<TaskDetailData>({\n    queryKey: [\"/api/tasks\", taskId],\n    enabled: !!taskId,\n  });\n\n  const completeTaskMutation = useMutation({\n    mutationFn: () => {\n      const learningTime = Math.floor((Date.now() - startTime) / 1000);\n      return apiRequest(\"POST\", `/api/tasks/${taskId}/complete`, {\n        learningTime,\n        resourcesViewed: Array.from(resourcesViewed),\n        quizScore: quizCompleted ? score : null,\n      });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/tasks\", taskId] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/challenges\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/dashboard\"] });\n      toast({\n        title: \"Task completed!\",\n        description: \"Well done! Move on to the next task.\",\n      });\n    },\n  });\n\n  const submitQuizMutation = useMutation({\n    mutationFn: (answers: number[]) =>\n      apiRequest(\"POST\", `/api/tasks/${taskId}/quiz/submit`, { answers }),\n    onSuccess: (result: { score: number; totalQuestions: number }) => {\n      setScore(result.score);\n      setQuizCompleted(true);\n      queryClient.invalidateQueries({ queryKey: [\"/api/tasks\", taskId] });\n      toast({\n        title: \"Quiz submitted!\",\n        description: `You scored ${result.score} out of ${result.totalQuestions}`,\n      });\n    },\n  });\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[currentQuestion] = answerIndex;\n    setSelectedAnswers(newAnswers);\n  };\n\n  const handleResourceClick = (index: number) => {\n    setResourcesViewed(prev => new Set([...prev, index]));\n  };\n\n  const canCompleteTask = () => {\n    if (!data?.task) return false;\n    \n    // Must have viewed at least 50% of resources or spent minimum learning time\n    const minResources = Math.ceil((data.task.resourceLinks?.length || 0) * 0.5);\n    const minLearningTime = 30; // 30 seconds minimum\n    \n    const hasViewedEnoughResources = resourcesViewed.size >= minResources;\n    const hasSpentEnoughTime = Math.floor((Date.now() - startTime) / 1000) >= minLearningTime;\n    \n    // If there's a quiz, it must be completed\n    if (data.quiz && !quizCompleted) return false;\n    \n    return hasViewedEnoughResources || hasSpentEnoughTime;\n  };\n\n  const handleNextQuestion = () => {\n    if (data?.quiz && currentQuestion < data.quiz.questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      submitQuizMutation.mutate(selectedAnswers);\n    }\n  };\n\n  const getResourceIcon = (type: string) => {\n    switch (type.toLowerCase()) {\n      case \"pdf\":\n        return FileText;\n      case \"video\":\n        return Video;\n      default:\n        return LinkIcon;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading task...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-muted-foreground\">Task not found</p>\n        <Button onClick={() => setLocation(\"/challenges\")} className=\"mt-4\">\n          Back to Challenges\n        </Button>\n      </div>\n    );\n  }\n\n  const { task, quiz, submission } = data;\n  const isCompleted = submission?.status === \"completed\";\n\n  return (\n    <div className=\"max-w-4xl mx-auto space-y-8\">\n      <div>\n        <Button\n          variant=\"ghost\"\n          onClick={() => setLocation(-1)}\n          className=\"mb-4\"\n          data-testid=\"button-back\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back\n        </Button>\n        <div className=\"flex items-start justify-between gap-4\">\n          <div>\n            <div className=\"flex items-center gap-2 mb-2\">\n              <Badge variant=\"outline\">Day {task.dayNumber}</Badge>\n              {isCompleted && <Badge variant=\"default\">Completed</Badge>}\n            </div>\n            <h1 className=\"text-4xl font-bold tracking-tight\">{task.title}</h1>\n          </div>\n        </div>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Task Content</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"prose prose-neutral dark:prose-invert max-w-none\">\n            <p className=\"text-base leading-relaxed whitespace-pre-wrap\">{task.content}</p>\n          </div>\n\n          {task.resourceLinks && task.resourceLinks.length > 0 && (\n            <div className=\"mt-6 space-y-2\">\n              <h3 className=\"font-semibold mb-3\">Resources</h3>\n              <div className=\"space-y-2\">\n                {task.resourceLinks.map((resource, index) => {\n                  const Icon = getResourceIcon(resource.type);\n                  return (\n                    <a\n                      key={index}\n                      href={resource.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      onClick={() => handleResourceClick(index)}\n                      className={`flex items-center gap-3 p-3 border rounded-lg hover-elevate transition-all ${\n                        resourcesViewed.has(index) \n                          ? 'border-green-500 bg-green-50 dark:bg-green-900/20' \n                          : 'border-border'\n                      }`}\n                      data-testid={`resource-${index}`}\n                    >\n                      <Icon className=\"h-5 w-5 text-primary\" />\n                      <div className=\"flex-1\">\n                        <p className=\"font-medium\">{resource.title}</p>\n                        <p className=\"text-sm text-muted-foreground\">{resource.type}</p>\n                      </div>\n                      <div className=\"flex items-center gap-2\">\n                        {resourcesViewed.has(index) && (\n                          <span className=\"text-xs text-green-600 font-medium\">✓ Viewed</span>\n                        )}\n                        <ExternalLink className=\"h-4 w-4 text-muted-foreground\" />\n                      </div>\n                    </a>\n                  );\n                })}\n              </div>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {quiz && !isCompleted && (\n        <Card>\n          <CardHeader>\n            <CardTitle>Knowledge Check</CardTitle>\n            <CardDescription>\n              Complete the quiz to test your understanding\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {!quizStarted && !quizCompleted ? (\n              <div className=\"text-center py-8\">\n                <p className=\"text-muted-foreground mb-4\">\n                  Ready to test your knowledge? This quiz has {quiz.questions.length} questions.\n                </p>\n                <Button onClick={() => setQuizStarted(true)} data-testid=\"button-start-quiz\">\n                  Start Quiz\n                </Button>\n              </div>\n            ) : quizCompleted ? (\n              <div className=\"text-center py-8 space-y-4\">\n                <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-primary/10 mb-4\">\n                  <CheckCircle2 className=\"h-8 w-8 text-primary\" />\n                </div>\n                <h3 className=\"text-2xl font-bold\">Quiz Completed!</h3>\n                <p className=\"text-muted-foreground\">\n                  You scored {score} out of {quiz.questions.length}\n                </p>\n                <p className=\"text-sm text-muted-foreground\">\n                  {score === quiz.questions.length\n                    ? \"Perfect score! Excellent work!\"\n                    : score >= quiz.questions.length * 0.7\n                    ? \"Great job! You've passed the quiz.\"\n                    : \"Keep practicing to improve your score.\"}\n                </p>\n                {!isCompleted && (\n                  <div className=\"space-y-4\">\n                    {!canCompleteTask() && (\n                      <div className=\"text-sm text-amber-600 bg-amber-50 dark:bg-amber-900/20 p-3 rounded-lg\">\n                        <p className=\"font-medium\">Complete the learning requirements:</p>\n                        <ul className=\"mt-1 space-y-1\">\n                          {data?.task.resourceLinks && data.task.resourceLinks.length > 0 && (\n                            <li>• View at least {Math.ceil(data.task.resourceLinks.length * 0.5)} resources</li>\n                          )}\n                          <li>• Spend at least 30 seconds learning</li>\n                          {data?.quiz && <li>• Complete the quiz</li>}\n                        </ul>\n                      </div>\n                    )}\n                    <Button\n                      onClick={() => completeTaskMutation.mutate()}\n                      disabled={completeTaskMutation.isPending || !canCompleteTask()}\n                      data-testid=\"button-complete-task\"\n                    >\n                      {completeTaskMutation.isPending ? \"Completing...\" : \"Mark as Complete\"}\n                    </Button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"space-y-6\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span className=\"text-muted-foreground\">\n                      Question {currentQuestion + 1} of {quiz.questions.length}\n                    </span>\n                    <span className=\"font-medium\">\n                      {Math.round(((currentQuestion + 1) / quiz.questions.length) * 100)}%\n                    </span>\n                  </div>\n                  <Progress\n                    value={((currentQuestion + 1) / quiz.questions.length) * 100}\n                  />\n                </div>\n\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-xl font-semibold\">\n                    {quiz.questions[currentQuestion].question}\n                  </h3>\n                  <div className=\"space-y-3\">\n                    {quiz.questions[currentQuestion].options.map((option, index) => (\n                      <button\n                        key={index}\n                        onClick={() => handleAnswerSelect(index)}\n                        className={`w-full text-left p-4 border-2 rounded-lg transition-all hover-elevate ${\n                          selectedAnswers[currentQuestion] === index\n                            ? \"border-primary bg-primary/5\"\n                            : \"border-border\"\n                        }`}\n                        data-testid={`option-${index}`}\n                      >\n                        <div className=\"flex items-center gap-3\">\n                          <div\n                            className={`w-5 h-5 rounded-full border-2 flex items-center justify-center ${\n                              selectedAnswers[currentQuestion] === index\n                                ? \"border-primary bg-primary\"\n                                : \"border-muted-foreground\"\n                            }`}\n                          >\n                            {selectedAnswers[currentQuestion] === index && (\n                              <div className=\"w-2 h-2 rounded-full bg-primary-foreground\" />\n                            )}\n                          </div>\n                          <span className=\"flex-1\">{option}</span>\n                        </div>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex justify-end\">\n                  <Button\n                    onClick={handleNextQuestion}\n                    disabled={selectedAnswers[currentQuestion] === undefined || submitQuizMutation.isPending}\n                    data-testid=\"button-next-question\"\n                  >\n                    {currentQuestion === quiz.questions.length - 1\n                      ? submitQuizMutation.isPending\n                        ? \"Submitting...\"\n                        : \"Submit Quiz\"\n                      : \"Next Question\"}\n                  </Button>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {!quiz && !isCompleted && (\n        <div className=\"space-y-4\">\n          {!canCompleteTask() && (\n            <div className=\"text-sm text-amber-600 bg-amber-50 dark:bg-amber-900/20 p-3 rounded-lg\">\n              <p className=\"font-medium\">Complete the learning requirements:</p>\n              <ul className=\"mt-1 space-y-1\">\n                {data?.task.resourceLinks && data.task.resourceLinks.length > 0 && (\n                  <li>• View at least {Math.ceil(data.task.resourceLinks.length * 0.5)} resources</li>\n                )}\n                <li>• Spend at least 30 seconds learning</li>\n              </ul>\n            </div>\n          )}\n          <div className=\"flex justify-center\">\n            <Button\n              onClick={() => completeTaskMutation.mutate()}\n              disabled={completeTaskMutation.isPending || !canCompleteTask()}\n              size=\"lg\"\n              data-testid=\"button-complete-task-no-quiz\"\n            >\n              {completeTaskMutation.isPending ? \"Completing...\" : \"Mark as Complete\"}\n            </Button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":14956},"client/src/components/ProgressRing.tsx":{"content":"interface ProgressRingProps {\n  percentage: number;\n  size?: number;\n  strokeWidth?: number;\n}\n\nexport function ProgressRing({ percentage, size = 120, strokeWidth = 8 }: ProgressRingProps) {\n  const radius = (size - strokeWidth) / 2;\n  const circumference = radius * 2 * Math.PI;\n  const offset = circumference - (percentage / 100) * circumference;\n\n  return (\n    <div className=\"relative inline-flex items-center justify-center\">\n      <svg width={size} height={size} className=\"transform -rotate-90\">\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"hsl(var(--muted))\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n        />\n        <circle\n          cx={size / 2}\n          cy={size / 2}\n          r={radius}\n          stroke=\"hsl(var(--primary))\"\n          strokeWidth={strokeWidth}\n          fill=\"none\"\n          strokeDasharray={circumference}\n          strokeDashoffset={offset}\n          strokeLinecap=\"round\"\n          className=\"transition-all duration-500 ease-out\"\n        />\n      </svg>\n      <div className=\"absolute inset-0 flex items-center justify-center\">\n        <span className=\"text-2xl font-bold\">{Math.round(percentage)}%</span>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1253},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"server/routes.ts":{"content":"import type { Express, Request, Response, NextFunction } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertChallengeSchema, insertTaskSchema, insertCertificationSchema, insertRoadmapSchema, insertRoadmapStepSchema } from \"@shared/schema\";\nimport { verifyIdToken } from \"./firebase-admin\";\n\n// Extend Express Request interface to include session\ndeclare global {\n  namespace Express {\n    interface Request {\n      session?: {\n        userId?: string;\n        userRole?: string;\n        isAdmin?: boolean;\n        destroy?: (callback: (err?: any) => void) => void;\n      };\n    }\n  }\n}\n\n// Middleware to verify user is authenticated (supports both Firebase and session auth)\nasync function authMiddleware(req: Request, res: Response, next: NextFunction) {\n  try {\n    // Check for session-based authentication first (for admin users)\n    if (req.session && req.session.userId) {\n      console.log(\"Auth middleware - using session authentication for user:\", req.session.userId);\n      req.userId = req.session.userId;\n      return next();\n    }\n\n    // Fall back to Firebase token authentication\n    const authHeader = req.headers.authorization;\n    if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n      return res.status(401).json({ error: \"Unauthorized - No token provided\" });\n    }\n\n    const token = authHeader.split(\"Bearer \")[1];\n    const decodedToken = await verifyIdToken(token);\n    \n    console.log(\"Auth middleware - decoded token UID:\", decodedToken.uid);\n    \n    // For development, if we're using the mock UID, try to find any user\n    let user;\n    if (decodedToken.uid === \"dev-user-123\") {\n      // For development, try to find a student user first, then create one if none exists\n      const allUsers = await storage.getAllUsers();\n      let studentUser = allUsers.find(u => u.role === \"student\");\n      \n      if (!studentUser) {\n        // Create a student user for development\n        console.log(\"Auth middleware - creating student user for development\");\n        studentUser = await storage.createUser({\n          email: \"student@lumoraed.com\",\n          name: \"Development Student\",\n          firebaseUid: \"dev-user-123\",\n          role: \"student\"\n        });\n      }\n      \n      user = studentUser;\n      console.log(\"Auth middleware - using user for development:\", user ? `${user.role} user` : \"No user found\");\n    } else if (decodedToken.uid === \"admin-user-123\") {\n      // Handle admin user specifically\n      user = await storage.getUserByFirebaseUid(\"admin-user-123\");\n      console.log(\"Auth middleware - using admin user:\", user ? \"Yes\" : \"No\");\n    } else {\n      // Get user from database by Firebase UID\n      user = await storage.getUserByFirebaseUid(decodedToken.uid);\n    }\n    \n    console.log(\"Auth middleware - user found:\", user ? \"Yes\" : \"No\");\n    \n    if (!user) {\n      console.log(\"Auth middleware - User not found for UID:\", decodedToken.uid);\n      return res.status(401).json({ error: \"User not found\" });\n    }\n    \n    req.userId = user.id;\n    next();\n  } catch (error) {\n    console.error(\"Auth middleware error:\", error);\n    return res.status(401).json({ error: \"Unauthorized - Invalid token\" });\n  }\n}\n\n// Middleware to verify user is admin\nasync function adminMiddleware(req: Request, res: Response, next: NextFunction) {\n  const user = await storage.getUser(req.userId!);\n  if (!user || user.role !== \"admin\") {\n    return res.status(403).json({ error: \"Forbidden\" });\n  }\n  next();\n}\n\ndeclare global {\n  namespace Express {\n    interface Request {\n      userId?: string;\n    }\n  }\n}\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Create admin user endpoint (for development)\n  app.post(\"/api/admin/create-admin\", async (req, res) => {\n    try {\n      const { email, password } = req.body;\n      \n      if (email !== \"admin@lumoraed.com\" || password !== \"Admin@123\") {\n        return res.status(401).json({ error: \"Invalid admin credentials\" });\n      }\n\n      // Check if admin user already exists\n      let adminUser = await storage.getUserByEmail(\"admin@lumoraed.com\");\n      \n      if (!adminUser) {\n        // Create admin user\n        adminUser = await storage.createUser({\n          email: \"admin@lumoraed.com\",\n          name: \"Admin User\",\n          firebaseUid: \"admin-user-123\",\n          role: \"admin\"\n        });\n      } else {\n        // Update existing user to admin\n        adminUser = await storage.updateUser(adminUser.id, { role: \"admin\" });\n      }\n\n      // Set admin session\n      if (req.session) {\n        req.session.userId = adminUser.id;\n        req.session.userRole = \"admin\";\n        req.session.isAdmin = true;\n      }\n\n      res.json({ message: \"Admin user created/updated successfully\", user: adminUser });\n    } catch (error: any) {\n      console.error(\"Create admin error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Logout endpoint\n  app.post(\"/api/auth/logout\", (req, res) => {\n    if (req.session?.destroy) {\n      req.session.destroy((_err?: any) => {\n        if (_err) {\n          console.error(\"Session destruction error:\", _err);\n          return res.status(500).json({ error: \"Could not log out\" });\n        }\n        res.json({ message: \"Logged out successfully\" });\n      });\n    } else {\n      res.json({ message: \"Logged out successfully\" });\n    }\n  });\n\n  // Student login endpoint\n  app.post(\"/api/auth/student-login\", async (req, res) => {\n    try {\n      const { email, name } = req.body;\n\n      if (!email) {\n        return res.status(400).json({ error: \"Email is required\" });\n      }\n\n      // Check if user exists by email\n      let user = await storage.getUserByEmail(email);\n\n      if (!user) {\n        // Create new student user\n        user = await storage.createUser({\n          email: email,\n          name: name || email.split(\"@\")[0],\n          firebaseUid: `student-${Date.now()}`, // Generate unique ID for students\n          role: \"student\",\n        });\n      }\n\n      // Set up session for the student\n      if (req.session) {\n        req.session.userId = user.id;\n        req.session.userRole = user.role;\n        req.session.isAdmin = false;\n      }\n\n      res.json(user);\n    } catch (error: any) {\n      console.error(\"Student login error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Auth endpoints (for Firebase integration)\n  app.post(\"/api/auth/verify\", async (req, res) => {\n    try {\n      const { email, name, firebaseUid } = req.body;\n\n      // For development, if no Firebase UID is provided, use the mock one\n      const actualFirebaseUid = firebaseUid || \"dev-user-123\";\n\n      // Check if user exists by Firebase UID\n      let user = await storage.getUserByFirebaseUid(actualFirebaseUid);\n\n      if (!user) {\n        // Check by email\n        user = await storage.getUserByEmail(email);\n\n        if (!user) {\n          // Create new user - only admin@lumoraed.com should be admin, all others are students\n          const isAdminEmail = email === \"admin@lumoraed.com\";\n          const userRole = isAdminEmail ? \"admin\" : \"student\";\n          \n          console.log(`Creating new user: ${email} with role: ${userRole}`);\n          \n          user = await storage.createUser({\n            email: email || \"dev@example.com\",\n            name: name || \"Development User\",\n            firebaseUid: actualFirebaseUid,\n            role: userRole,\n          });\n        } else {\n          // Update existing user with Firebase UID if they don't have one\n          if (!user.firebaseUid) {\n            user = await storage.updateUser(user.id, { firebaseUid: actualFirebaseUid });\n          }\n        }\n      }\n\n      // Set up session for the user (both admin and student)\n      if (req.session) {\n        req.session.userId = user.id;\n        req.session.userRole = user.role;\n        req.session.isAdmin = user.role === \"admin\";\n      }\n\n      res.json(user);\n    } catch (error: any) {\n      console.error(\"Auth error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Dashboard endpoint\n  app.get(\"/api/dashboard\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const user = await storage.getUser(userId);\n      \n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n\n      // Return user information for role-based dashboard rendering\n      console.log(`Dashboard API - User: ${user.email}, Role: ${user.role}`);\n      \n      res.json({\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        role: user.role,\n        firebaseUid: user.firebaseUid,\n        createdAt: user.createdAt,\n      });\n    } catch (error: any) {\n      console.error(\"Dashboard error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Challenges endpoints\n  app.get(\"/api/challenges\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const allChallenges = await storage.getAllChallenges();\n      const userProgress = await storage.getUserProgress(userId);\n      const progressMap = new Map(userProgress.map((p) => [p.challengeId, p]));\n\n      const challengesWithProgress = await Promise.all(\n        allChallenges.map(async (challenge) => {\n          const participantCount = await storage.getChallengeParticipantCount(challenge.id);\n          const progress = progressMap.get(challenge.id);\n          return {\n            ...challenge,\n            enrolled: !!progress,\n            participantCount,\n            progress,\n          };\n        })\n      );\n\n      res.json(challengesWithProgress);\n    } catch (error: any) {\n      console.error(\"Challenges error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/challenges/:id\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const { id } = req.params;\n\n      const challenge = await storage.getChallenge(id);\n      if (!challenge) {\n        return res.status(404).json({ error: \"Challenge not found\" });\n      }\n\n      const tasks = await storage.getTasksByChallenge(id);\n      const progress = await storage.getProgress(userId, id);\n      const submissions = await storage.getUserSubmissions(userId);\n\n      res.json({\n        challenge,\n        tasks,\n        progress,\n        submissions: submissions.filter((s) => tasks.some((t) => t.id === s.taskId)),\n      });\n    } catch (error: any) {\n      console.error(\"Challenge detail error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/challenges/:id/enroll\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const { id } = req.params;\n\n      // Check if already enrolled\n      const existing = await storage.getProgress(userId, id);\n      if (existing) {\n        return res.json(existing);\n      }\n\n      const progress = await storage.createProgress({\n        userId,\n        challengeId: id,\n        completedDays: 0,\n        streakCount: 0,\n        lastActivityDate: null,\n      });\n\n      res.json(progress);\n    } catch (error: any) {\n      console.error(\"Enroll error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Tasks endpoints\n  app.get(\"/api/tasks/:id\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const { id } = req.params;\n\n      const task = await storage.getTask(id);\n      if (!task) {\n        return res.status(404).json({ error: \"Task not found\" });\n      }\n\n      const quiz = await storage.getQuizByTask(id);\n      const submission = await storage.getSubmission(userId, id);\n\n      res.json({\n        task,\n        quiz,\n        submission,\n      });\n    } catch (error: any) {\n      console.error(\"Task detail error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/tasks/:id/complete\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const { id } = req.params;\n\n      const task = await storage.getTask(id);\n      if (!task) {\n        return res.status(404).json({ error: \"Task not found\" });\n      }\n\n      // Check if already completed\n      let submission = await storage.getSubmission(userId, id);\n      if (submission && submission.status === \"completed\") {\n        return res.json(submission);\n      }\n\n      if (!submission) {\n        submission = await storage.createSubmission({\n          userId,\n          taskId: id,\n          status: \"completed\",\n          score: null,\n        });\n      } else {\n        submission = await storage.updateSubmissionStatus(submission.id, \"completed\");\n      }\n\n      // Update progress\n      const progress = await storage.getProgress(userId, task.challengeId);\n      if (progress && task.dayNumber > progress.completedDays) {\n        const now = new Date();\n        const lastActivity = progress.lastActivityDate ? new Date(progress.lastActivityDate) : null;\n        const isConsecutive =\n          lastActivity &&\n          now.getTime() - lastActivity.getTime() < 48 * 60 * 60 * 1000 &&\n          now.getDate() !== lastActivity.getDate();\n\n        await storage.updateProgress(progress.id, {\n          completedDays: task.dayNumber,\n          streakCount: isConsecutive ? progress.streakCount + 1 : 1,\n          lastActivityDate: now,\n        });\n      }\n\n      res.json(submission);\n    } catch (error: any) {\n      console.error(\"Complete task error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/tasks/:id/quiz/submit\", authMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const { id } = req.params;\n      const { answers } = req.body;\n\n      const quiz = await storage.getQuizByTask(id);\n      if (!quiz) {\n        return res.status(404).json({ error: \"Quiz not found\" });\n      }\n\n      let score = 0;\n      quiz.questions.forEach((q, index) => {\n        if (answers[index] === q.correctAnswer) {\n          score++;\n        }\n      });\n\n      let submission = await storage.getSubmission(userId, id);\n      if (!submission) {\n        submission = await storage.createSubmission({\n          userId,\n          taskId: id,\n          status: \"completed\",\n          score,\n        });\n      } else {\n        submission = await storage.updateSubmissionStatus(submission.id, \"completed\", score);\n      }\n\n      res.json({ score, totalQuestions: quiz.questions.length });\n    } catch (error: any) {\n      console.error(\"Quiz submit error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Certifications endpoints\n  app.get(\"/api/certifications\", async (req, res) => {\n    try {\n      const certifications = await storage.getAllCertifications();\n      res.json(certifications);\n    } catch (error: any) {\n      console.error(\"Certifications error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Admin endpoints\n  app.get(\"/api/admin/challenges\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const challenges = await storage.getAllChallenges();\n      res.json(challenges);\n    } catch (error: any) {\n      console.error(\"Admin challenges error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/admin/challenges\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const validated = insertChallengeSchema.parse({ ...req.body, createdBy: userId });\n      const challenge = await storage.createChallenge(validated);\n      res.json(challenge);\n    } catch (error: any) {\n      console.error(\"Create challenge error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/admin/challenges/:id/tasks\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const validated = insertTaskSchema.parse({ ...req.body, challengeId: id });\n      const task = await storage.createTask(validated);\n      res.json(task);\n    } catch (error: any) {\n      console.error(\"Create task error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/admin/certifications\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const certifications = await storage.getAllCertifications();\n      res.json(certifications);\n    } catch (error: any) {\n      console.error(\"Admin certifications error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/admin/certifications\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const validated = insertCertificationSchema.parse(req.body);\n      const certification = await storage.createCertification(validated);\n      res.json(certification);\n    } catch (error: any) {\n      console.error(\"Create certification error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/admin/certifications/:id\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      await storage.deleteCertification(id);\n      res.json({ success: true });\n    } catch (error: any) {\n      console.error(\"Delete certification error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Roadmaps endpoints\n  app.get(\"/api/roadmaps\", async (req, res) => {\n    try {\n      const roadmaps = await storage.getAllRoadmaps();\n      res.json(roadmaps);\n    } catch (error: any) {\n      console.error(\"Roadmaps error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.get(\"/api/roadmaps/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const roadmap = await storage.getRoadmap(id);\n      if (!roadmap) {\n        return res.status(404).json({ error: \"Roadmap not found\" });\n      }\n      const steps = await storage.getStepsByRoadmap(id);\n      res.json({ roadmap, steps });\n    } catch (error: any) {\n      console.error(\"Roadmap detail error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Admin roadmap endpoints\n  app.get(\"/api/admin/roadmaps\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const roadmaps = await storage.getAllRoadmaps();\n      res.json(roadmaps);\n    } catch (error: any) {\n      console.error(\"Admin roadmaps error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  app.post(\"/api/admin/roadmaps\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const userId = req.userId!;\n      const validated = insertRoadmapSchema.parse({ ...req.body, createdBy: userId });\n      const roadmap = await storage.createRoadmap(validated);\n      res.json(roadmap);\n    } catch (error: any) {\n      console.error(\"Create roadmap error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.put(\"/api/admin/roadmaps/:id\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const roadmap = await storage.updateRoadmap(id, req.body);\n      res.json(roadmap);\n    } catch (error: any) {\n      console.error(\"Update roadmap error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/admin/roadmaps/:id\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      await storage.deleteRoadmap(id);\n      res.json({ success: true });\n    } catch (error: any) {\n      console.error(\"Delete roadmap error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  // Roadmap steps endpoints\n  app.post(\"/api/admin/roadmaps/:id/steps\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const validated = insertRoadmapStepSchema.parse({ ...req.body, roadmapId: id });\n      const step = await storage.createRoadmapStep(validated);\n      res.json(step);\n    } catch (error: any) {\n      console.error(\"Create roadmap step error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.put(\"/api/admin/roadmap-steps/:id\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      const step = await storage.updateRoadmapStep(id, req.body);\n      res.json(step);\n    } catch (error: any) {\n      console.error(\"Update roadmap step error:\", error);\n      res.status(400).json({ error: error.message });\n    }\n  });\n\n  app.delete(\"/api/admin/roadmap-steps/:id\", authMiddleware, adminMiddleware, async (req, res) => {\n    try {\n      const { id } = req.params;\n      await storage.deleteRoadmapStep(id);\n      res.json({ success: true });\n    } catch (error: any) {\n      console.error(\"Delete roadmap step error:\", error);\n      res.status(500).json({ error: error.message });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":21127},"server/vite.ts":{"content":"import { createRequire } from \"module\";\nimport { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst require = createRequire(import.meta.url);\nconst express = require(\"express\");\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"..\", \"dist\", \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2393},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"server/middleware/logger.ts":{"content":"import winston from 'winston';\nimport path from 'path';\n\n// Define log levels\nconst levels = {\n  error: 0,\n  warn: 1,\n  info: 2,\n  http: 3,\n  debug: 4,\n};\n\n// Define colors for each level\nconst colors = {\n  error: 'red',\n  warn: 'yellow',\n  info: 'green',\n  http: 'magenta',\n  debug: 'white',\n};\n\n// Tell winston that you want to link the colors\nwinston.addColors(colors);\n\n// Define which transports the logger must use\nconst transports: winston.transport[] = [\n  // Console transport\n  new winston.transports.Console({\n    format: winston.format.combine(\n      winston.format.timestamp({ format: 'YYYY-MM-DD HH:mm:ss:ms' }),\n      winston.format.colorize({ all: true }),\n      winston.format.printf(\n        (info) => `${info.timestamp} ${info.level}: ${info.message}`\n      )\n    ),\n  }),\n];\n\n// Add file transports in production\nif (process.env.NODE_ENV === 'production') {\n  // Create logs directory if it doesn't exist\n  const fs = require('fs');\n  const logsDir = path.join(process.cwd(), 'logs');\n  if (!fs.existsSync(logsDir)) {\n    fs.mkdirSync(logsDir, { recursive: true });\n  }\n\n  // Error log file\n  transports.push(\n    new winston.transports.File({\n      filename: path.join(logsDir, 'error.log'),\n      level: 'error',\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n      ),\n    })\n  );\n\n  // Combined log file\n  transports.push(\n    new winston.transports.File({\n      filename: path.join(logsDir, 'combined.log'),\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n      ),\n    })\n  );\n\n  // HTTP log file\n  transports.push(\n    new winston.transports.File({\n      filename: path.join(logsDir, 'http.log'),\n      level: 'http',\n      format: winston.format.combine(\n        winston.format.timestamp(),\n        winston.format.json()\n      ),\n    })\n  );\n}\n\n// Create the logger\nexport const logger = winston.createLogger({\n  level: process.env.NODE_ENV === 'development' ? 'debug' : 'warn',\n  levels,\n  transports,\n  exitOnError: false,\n});\n\n// Create a stream object for Morgan\nexport const morganStream = {\n  write: (message: string) => {\n    logger.http(message.trim());\n  },\n};\n\n// Custom log functions\nexport const logError = (error: Error, context?: any) => {\n  logger.error('Error occurred:', {\n    message: error.message,\n    stack: error.stack,\n    context,\n    timestamp: new Date().toISOString()\n  });\n};\n\nexport const logInfo = (message: string, meta?: any) => {\n  logger.info(message, {\n    meta,\n    timestamp: new Date().toISOString()\n  });\n};\n\nexport const logWarning = (message: string, meta?: any) => {\n  logger.warn(message, {\n    meta,\n    timestamp: new Date().toISOString()\n  });\n};\n\nexport const logDebug = (message: string, meta?: any) => {\n  logger.debug(message, {\n    meta,\n    timestamp: new Date().toISOString()\n  });\n};\n\n// Security logging\nexport const logSecurityEvent = (event: string, details: any) => {\n  logger.warn('Security Event:', {\n    event,\n    details,\n    timestamp: new Date().toISOString(),\n    level: 'security'\n  });\n};\n\n// Performance logging\nexport const logPerformance = (operation: string, duration: number, meta?: any) => {\n  logger.info('Performance Metric:', {\n    operation,\n    duration: `${duration}ms`,\n    meta,\n    timestamp: new Date().toISOString(),\n    level: 'performance'\n  });\n};\n\n// Database logging\nexport const logDatabaseOperation = (operation: string, table: string, duration?: number) => {\n  logger.debug('Database Operation:', {\n    operation,\n    table,\n    duration: duration ? `${duration}ms` : undefined,\n    timestamp: new Date().toISOString()\n  });\n};\n\n// API logging\nexport const logAPIRequest = (method: string, url: string, statusCode: number, duration: number, ip: string) => {\n  logger.http('API Request:', {\n    method,\n    url,\n    statusCode,\n    duration: `${duration}ms`,\n    ip,\n    timestamp: new Date().toISOString()\n  });\n};\n\n// User activity logging\nexport const logUserActivity = (userId: string, activity: string, details?: any) => {\n  logger.info('User Activity:', {\n    userId,\n    activity,\n    details,\n    timestamp: new Date().toISOString()\n  });\n};\n\n// System health logging\nexport const logSystemHealth = (component: string, status: 'healthy' | 'degraded' | 'unhealthy', details?: any) => {\n  const level = status === 'healthy' ? 'info' : status === 'degraded' ? 'warn' : 'error';\n  logger[level]('System Health:', {\n    component,\n    status,\n    details,\n    timestamp: new Date().toISOString()\n  });\n};\n\n// Export default logger\nexport default logger;\n","size_bytes":4588},"types/xss-clean.d.ts":{"content":"declare module 'xss-clean' {\n  function xss(): (req: any, res: any, next: any) => void;\n  export = xss;\n}\n","size_bytes":106},"server/seed-simple.ts":{"content":"// Simple seeding script that works without database\nconsole.log(\"🌱 LumoraEd Database Seeding Instructions\");\nconsole.log(\"\");\nconsole.log(\"📋 To set up your LumoraEd application:\");\nconsole.log(\"\");\nconsole.log(\"1. 🔧 Configure your database:\");\nconsole.log(\"   - Set up a PostgreSQL database\");\nconsole.log(\"   - Create a .env file with DATABASE_URL\");\nconsole.log(\"   - Run: npm run db:push\");\nconsole.log(\"\");\nconsole.log(\"2. 👤 Admin credentials are already configured:\");\nconsole.log(\"   - Email: admin@lumoraed.com\");\nconsole.log(\"   - Password: Admin@123\");\nconsole.log(\"\");\nconsole.log(\"3. 🚀 Start the application:\");\nconsole.log(\"   - Run: npm run dev\");\nconsole.log(\"   - Visit: http://localhost:5000\");\nconsole.log(\"   - Login with admin credentials\");\nconsole.log(\"   - Go to Admin panel to create challenges\");\nconsole.log(\"\");\nconsole.log(\"4. 📚 Create sample challenges:\");\nconsole.log(\"   - Use the Admin panel to create challenges\");\nconsole.log(\"   - Add tasks to each challenge\");\nconsole.log(\"   - Add certifications\");\nconsole.log(\"\");\nconsole.log(\"✅ Setup complete! The admin user will be created automatically on first login.\");\nconsole.log(\"\");\nconsole.log(\"💡 The application includes:\");\nconsole.log(\"   - Admin authentication system\");\nconsole.log(\"   - Challenge creation and management\");\nconsole.log(\"   - Task system with resource links\");\nconsole.log(\"   - User progress tracking\");\nconsole.log(\"   - Certification management\");\nconsole.log(\"   - Student enrollment system\");\n","size_bytes":1527},"client/src/pages/Admin.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Plus, Trash2, BookOpen, Trophy, Map } from \"lucide-react\";\nimport type { Challenge, Certification, Task, Roadmap } from \"@shared/schema\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nexport default function Admin() {\n  const { toast } = useToast();\n  const [newChallenge, setNewChallenge] = useState({ title: \"\", description: \"\", duration: \"\" });\n  const [newCert, setNewCert] = useState({ title: \"\", provider: \"\", link: \"\" });\n  const [newRoadmap, setNewRoadmap] = useState({ title: \"\", description: \"\", category: \"\" });\n  const [selectedChallenge, setSelectedChallenge] = useState<string>(\"\");\n  const [newTask, setNewTask] = useState({\n    dayNumber: \"\",\n    title: \"\",\n    content: \"\",\n    resourceLinks: \"\",\n  });\n\n  const { data: challenges } = useQuery<Challenge[]>({\n    queryKey: [\"/api/admin/challenges\"],\n  });\n\n  const { data: certifications } = useQuery<Certification[]>({\n    queryKey: [\"/api/admin/certifications\"],\n  });\n\n  const { data: roadmaps } = useQuery<Roadmap[]>({\n    queryKey: [\"/api/admin/roadmaps\"],\n  });\n\n  const createChallengeMutation = useMutation({\n    mutationFn: (data: any) =>\n      apiRequest(\"POST\", \"/api/admin/challenges\", data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/challenges\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/challenges\"] });\n      setNewChallenge({ title: \"\", description: \"\", duration: \"\" });\n      toast({ title: \"Challenge created successfully\" });\n    },\n  });\n\n  const createCertMutation = useMutation({\n    mutationFn: (data: any) =>\n      apiRequest(\"POST\", \"/api/admin/certifications\", data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/certifications\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/certifications\"] });\n      setNewCert({ title: \"\", provider: \"\", link: \"\" });\n      toast({ title: \"Certification added successfully\" });\n    },\n  });\n\n  const createTaskMutation = useMutation({\n    mutationFn: (data: any) =>\n      apiRequest(\"POST\", `/api/admin/challenges/${selectedChallenge}/tasks`, data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/challenges\"] });\n      setNewTask({ dayNumber: \"\", title: \"\", content: \"\", resourceLinks: \"\" });\n      toast({ title: \"Task created successfully\" });\n    },\n  });\n\n  const deleteCertMutation = useMutation({\n    mutationFn: (id: string) =>\n      apiRequest(\"DELETE\", `/api/admin/certifications/${id}`, {}),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/certifications\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/certifications\"] });\n      toast({ title: \"Certification deleted\" });\n    },\n  });\n\n  const createRoadmapMutation = useMutation({\n    mutationFn: (data: any) =>\n      apiRequest(\"POST\", \"/api/admin/roadmaps\", data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/roadmaps\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/roadmaps\"] });\n      setNewRoadmap({ title: \"\", description: \"\", category: \"\" });\n      toast({ title: \"Roadmap created successfully\" });\n    },\n  });\n\n  const handleCreateChallenge = (e: React.FormEvent) => {\n    e.preventDefault();\n    createChallengeMutation.mutate({\n      ...newChallenge,\n      duration: parseInt(newChallenge.duration),\n    });\n  };\n\n  const handleCreateCert = (e: React.FormEvent) => {\n    e.preventDefault();\n    createCertMutation.mutate(newCert);\n  };\n\n  const handleCreateTask = (e: React.FormEvent) => {\n    e.preventDefault();\n    const resourceLinks = newTask.resourceLinks\n      ? newTask.resourceLinks.split(\"\\n\").filter(Boolean).map((line) => {\n          const [type, title, url] = line.split(\"|\").map((s) => s.trim());\n          return { type, title, url };\n        })\n      : [];\n\n    createTaskMutation.mutate({\n      challengeId: selectedChallenge,\n      dayNumber: parseInt(newTask.dayNumber),\n      title: newTask.title,\n      content: newTask.content,\n      resourceLinks: resourceLinks.length > 0 ? resourceLinks : null,\n    });\n  };\n\n  const handleCreateRoadmap = (e: React.FormEvent) => {\n    e.preventDefault();\n    createRoadmapMutation.mutate(newRoadmap);\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-4xl font-bold tracking-tight\">Admin Panel</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          Manage challenges, tasks, and certifications\n        </p>\n      </div>\n\n      <Tabs defaultValue=\"challenges\" className=\"space-y-6\">\n        <TabsList>\n          <TabsTrigger value=\"challenges\">Challenges</TabsTrigger>\n          <TabsTrigger value=\"roadmaps\">Roadmaps</TabsTrigger>\n          <TabsTrigger value=\"certifications\">Certifications</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"challenges\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Create New Challenge</CardTitle>\n              <CardDescription>Add a new learning challenge for students</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleCreateChallenge} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"title\">Challenge Title</Label>\n                  <Input\n                    id=\"title\"\n                    placeholder=\"e.g., 50 Days of Python\"\n                    value={newChallenge.title}\n                    onChange={(e) => setNewChallenge({ ...newChallenge, title: e.target.value })}\n                    required\n                    data-testid=\"input-challenge-title\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Textarea\n                    id=\"description\"\n                    placeholder=\"Describe the challenge...\"\n                    value={newChallenge.description}\n                    onChange={(e) => setNewChallenge({ ...newChallenge, description: e.target.value })}\n                    required\n                    data-testid=\"input-challenge-description\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"duration\">Duration (days)</Label>\n                  <Input\n                    id=\"duration\"\n                    type=\"number\"\n                    placeholder=\"30\"\n                    value={newChallenge.duration}\n                    onChange={(e) => setNewChallenge({ ...newChallenge, duration: e.target.value })}\n                    required\n                    data-testid=\"input-challenge-duration\"\n                  />\n                </div>\n                <Button type=\"submit\" disabled={createChallengeMutation.isPending} data-testid=\"button-create-challenge\">\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  {createChallengeMutation.isPending ? \"Creating...\" : \"Create Challenge\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Add Tasks to Challenge</CardTitle>\n              <CardDescription>Create daily tasks for an existing challenge</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleCreateTask} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"challenge\">Select Challenge</Label>\n                  <select\n                    id=\"challenge\"\n                    className=\"w-full px-3 py-2 border rounded-lg bg-background\"\n                    value={selectedChallenge}\n                    onChange={(e) => setSelectedChallenge(e.target.value)}\n                    required\n                    data-testid=\"select-challenge\"\n                  >\n                    <option value=\"\">Choose a challenge...</option>\n                    {challenges?.map((challenge) => (\n                      <option key={challenge.id} value={challenge.id}>\n                        {challenge.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"dayNumber\">Day Number</Label>\n                  <Input\n                    id=\"dayNumber\"\n                    type=\"number\"\n                    placeholder=\"1\"\n                    value={newTask.dayNumber}\n                    onChange={(e) => setNewTask({ ...newTask, dayNumber: e.target.value })}\n                    required\n                    data-testid=\"input-task-day\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"taskTitle\">Task Title</Label>\n                  <Input\n                    id=\"taskTitle\"\n                    placeholder=\"e.g., Introduction to Variables\"\n                    value={newTask.title}\n                    onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n                    required\n                    data-testid=\"input-task-title\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"content\">Task Content</Label>\n                  <Textarea\n                    id=\"content\"\n                    placeholder=\"Describe what the student should learn or do...\"\n                    value={newTask.content}\n                    onChange={(e) => setNewTask({ ...newTask, content: e.target.value })}\n                    required\n                    rows={4}\n                    data-testid=\"input-task-content\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"resources\">Resource Links (optional)</Label>\n                  <Textarea\n                    id=\"resources\"\n                    placeholder=\"Format: type|title|url (one per line)&#10;Example:&#10;video|Python Tutorial|https://example.com&#10;pdf|Python Cheatsheet|https://example.com/pdf\"\n                    value={newTask.resourceLinks}\n                    onChange={(e) => setNewTask({ ...newTask, resourceLinks: e.target.value })}\n                    rows={3}\n                    data-testid=\"input-task-resources\"\n                  />\n                </div>\n                <Button type=\"submit\" disabled={!selectedChallenge || createTaskMutation.isPending} data-testid=\"button-create-task\">\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  {createTaskMutation.isPending ? \"Creating...\" : \"Create Task\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {challenges && challenges.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Existing Challenges</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {challenges.map((challenge) => (\n                    <div\n                      key={challenge.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                      data-testid={`admin-challenge-${challenge.id}`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <BookOpen className=\"h-5 w-5 text-primary\" />\n                        <div>\n                          <p className=\"font-semibold\">{challenge.title}</p>\n                          <p className=\"text-sm text-muted-foreground\">\n                            {challenge.duration} days\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"roadmaps\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Create New Roadmap</CardTitle>\n              <CardDescription>Add a new learning roadmap for students</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleCreateRoadmap} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"roadmapTitle\">Roadmap Title</Label>\n                  <Input\n                    id=\"roadmapTitle\"\n                    placeholder=\"e.g., Python Developer Roadmap\"\n                    value={newRoadmap.title}\n                    onChange={(e) => setNewRoadmap({ ...newRoadmap, title: e.target.value })}\n                    required\n                    data-testid=\"input-roadmap-title\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"roadmapDescription\">Description</Label>\n                  <Textarea\n                    id=\"roadmapDescription\"\n                    placeholder=\"Describe the roadmap and learning path...\"\n                    value={newRoadmap.description}\n                    onChange={(e) => setNewRoadmap({ ...newRoadmap, description: e.target.value })}\n                    required\n                    data-testid=\"input-roadmap-description\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"roadmapCategory\">Category</Label>\n                  <Input\n                    id=\"roadmapCategory\"\n                    placeholder=\"e.g., Programming, Data Science, Web Development\"\n                    value={newRoadmap.category}\n                    onChange={(e) => setNewRoadmap({ ...newRoadmap, category: e.target.value })}\n                    required\n                    data-testid=\"input-roadmap-category\"\n                  />\n                </div>\n                <Button type=\"submit\" disabled={createRoadmapMutation.isPending} data-testid=\"button-create-roadmap\">\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  {createRoadmapMutation.isPending ? \"Creating...\" : \"Create Roadmap\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {roadmaps && roadmaps.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Existing Roadmaps</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {roadmaps.map((roadmap) => (\n                    <div\n                      key={roadmap.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                      data-testid={`admin-roadmap-${roadmap.id}`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <Map className=\"h-5 w-5 text-primary\" />\n                        <div>\n                          <p className=\"font-semibold\">{roadmap.title}</p>\n                          <p className=\"text-sm text-muted-foreground\">{roadmap.category}</p>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"certifications\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Add New Certification</CardTitle>\n              <CardDescription>Share free certification opportunities with students</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <form onSubmit={handleCreateCert} className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"certTitle\">Certification Title</Label>\n                  <Input\n                    id=\"certTitle\"\n                    placeholder=\"e.g., AWS Cloud Practitioner\"\n                    value={newCert.title}\n                    onChange={(e) => setNewCert({ ...newCert, title: e.target.value })}\n                    required\n                    data-testid=\"input-cert-title\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"provider\">Provider</Label>\n                  <Input\n                    id=\"provider\"\n                    placeholder=\"e.g., Amazon Web Services\"\n                    value={newCert.provider}\n                    onChange={(e) => setNewCert({ ...newCert, provider: e.target.value })}\n                    required\n                    data-testid=\"input-cert-provider\"\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"link\">Link</Label>\n                  <Input\n                    id=\"link\"\n                    type=\"url\"\n                    placeholder=\"https://...\"\n                    value={newCert.link}\n                    onChange={(e) => setNewCert({ ...newCert, link: e.target.value })}\n                    required\n                    data-testid=\"input-cert-link\"\n                  />\n                </div>\n                <Button type=\"submit\" disabled={createCertMutation.isPending} data-testid=\"button-create-cert\">\n                  <Plus className=\"h-4 w-4 mr-2\" />\n                  {createCertMutation.isPending ? \"Adding...\" : \"Add Certification\"}\n                </Button>\n              </form>\n            </CardContent>\n          </Card>\n\n          {certifications && certifications.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle>Existing Certifications</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-3\">\n                  {certifications.map((cert) => (\n                    <div\n                      key={cert.id}\n                      className=\"flex items-center justify-between p-4 border rounded-lg\"\n                      data-testid={`admin-cert-${cert.id}`}\n                    >\n                      <div className=\"flex items-center gap-3\">\n                        <Trophy className=\"h-5 w-5 text-primary\" />\n                        <div>\n                          <p className=\"font-semibold\">{cert.title}</p>\n                          <p className=\"text-sm text-muted-foreground\">{cert.provider}</p>\n                        </div>\n                      </div>\n                      <Button\n                        variant=\"ghost\"\n                        size=\"icon\"\n                        onClick={() => deleteCertMutation.mutate(cert.id)}\n                        disabled={deleteCertMutation.isPending}\n                        data-testid={`button-delete-cert-${cert.id}`}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n","size_bytes":19754},"client/src/pages/Dashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { MetricCard } from \"@/components/MetricCard\";\nimport { ProgressRing } from \"@/components/ProgressRing\";\nimport { BookOpen, Target, Flame, Award, Users, Settings, BarChart3, Plus } from \"lucide-react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport type { Challenge, UserProgress } from \"@shared/schema\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\n\ninterface DashboardData {\n  activeChallenges: number;\n  completionRate: number;\n  currentStreak: number;\n  totalPoints: number;\n  totalXP: number;\n  level: number;\n  badges: Array<{ id: string; name: string; icon: string; color: string; earnedAt: string }>;\n  enrolledChallenges: Array<Challenge & { progress: UserProgress }>;\n  progressHistory: Array<{ date: string; completion: number }>;\n}\n\nexport default function Dashboard() {\n  const [, setLocation] = useLocation();\n  const { user } = useAuth();\n\n  const { data: userData, isLoading } = useQuery({\n    queryKey: [\"/api/dashboard\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const mockData = userData || {\n    activeChallenges: 0,\n    completionRate: 0,\n    currentStreak: 0,\n    totalPoints: 0,\n    totalXP: 0,\n    level: 1,\n    badges: [],\n    enrolledChallenges: [],\n    progressHistory: [],\n  };\n\n  // Admin Dashboard\n  if (userData?.role === \"admin\") {\n    return (\n      <div className=\"space-y-8\">\n        <div>\n          <h1 className=\"text-4xl font-bold tracking-tight\">Admin Dashboard</h1>\n          <p className=\"text-muted-foreground mt-2\">\n            Manage challenges, tasks, and monitor student progress\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <MetricCard\n            title=\"Total Challenges\"\n            value={8}\n            icon={BookOpen}\n            description=\"Created challenges\"\n          />\n          <MetricCard\n            title=\"Total Tasks\"\n            value={70}\n            icon={Target}\n            description=\"Learning tasks\"\n          />\n          <MetricCard\n            title=\"Active Students\"\n            value={0}\n            icon={Users}\n            description=\"Currently enrolled\"\n          />\n          <MetricCard\n            title=\"Certifications\"\n            value={19}\n            icon={Award}\n            description=\"Available certifications\"\n          />\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Quick Actions</CardTitle>\n              <CardDescription>Common admin tasks</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <Button \n                onClick={() => setLocation(\"/admin\")} \n                className=\"w-full justify-start\"\n                data-testid=\"button-manage-challenges\"\n              >\n                <Settings className=\"h-4 w-4 mr-2\" />\n                Manage Challenges & Tasks\n              </Button>\n              <Button \n                onClick={() => setLocation(\"/certifications\")} \n                variant=\"outline\" \n                className=\"w-full justify-start\"\n                data-testid=\"button-manage-certifications\"\n              >\n                <Award className=\"h-4 w-4 mr-2\" />\n                Manage Certifications\n              </Button>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>System Overview</CardTitle>\n              <CardDescription>Platform statistics</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Platform Status</span>\n                  <span className=\"text-sm font-medium text-green-600\">Active</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Database</span>\n                  <span className=\"text-sm font-medium text-green-600\">Connected</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Authentication</span>\n                  <span className=\"text-sm font-medium text-green-600\">Session-based</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Activity</CardTitle>\n            <CardDescription>Latest platform activity</CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-center py-8\">\n              <BarChart3 className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n              <p className=\"text-muted-foreground\">No recent activity</p>\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                Activity will appear here as students enroll and complete challenges\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  // Student Dashboard\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-4xl font-bold tracking-tight\">Student Dashboard</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          Track your progress and continue your learning journey\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <MetricCard\n          title=\"Level\"\n          value={mockData.level}\n          icon={Award}\n          description={`${mockData.totalXP} XP`}\n        />\n        <MetricCard\n          title=\"Active Challenges\"\n          value={mockData.activeChallenges}\n          icon={BookOpen}\n          description=\"Currently enrolled\"\n        />\n        <MetricCard\n          title=\"Current Streak\"\n          value={mockData.currentStreak}\n          icon={Flame}\n          description=\"Days in a row\"\n        />\n        <MetricCard\n          title=\"Badges Earned\"\n          value={mockData.badges.length}\n          icon={Award}\n          description=\"Achievements unlocked\"\n        />\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle>Progress Over Time</CardTitle>\n            <CardDescription>Your learning activity in the past 30 days</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {mockData.progressHistory.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={mockData.progressHistory}>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n                  <XAxis\n                    dataKey=\"date\"\n                    stroke=\"hsl(var(--muted-foreground))\"\n                    fontSize={12}\n                  />\n                  <YAxis\n                    stroke=\"hsl(var(--muted-foreground))\"\n                    fontSize={12}\n                  />\n                  <Tooltip\n                    contentStyle={{\n                      backgroundColor: \"hsl(var(--popover))\",\n                      border: \"1px solid hsl(var(--border))\",\n                      borderRadius: \"8px\",\n                    }}\n                  />\n                  <Line\n                    type=\"monotone\"\n                    dataKey=\"completion\"\n                    stroke=\"hsl(var(--primary))\"\n                    strokeWidth={2}\n                    dot={{ fill: \"hsl(var(--primary))\", r: 4 }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-[300px] flex items-center justify-center text-muted-foreground\">\n                <div className=\"text-center\">\n                  <Target className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                  <p>No progress data yet</p>\n                  <p className=\"text-sm mt-1\">Start a challenge to see your progress</p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Recent Badges</CardTitle>\n            <CardDescription>Your latest achievements</CardDescription>\n          </CardHeader>\n          <CardContent>\n            {mockData.badges.length > 0 ? (\n              <div className=\"space-y-3\">\n                {mockData.badges.slice(0, 3).map((badge) => (\n                  <div key={badge.id} className=\"flex items-center gap-3 p-3 border rounded-lg\">\n                    <div className=\"text-2xl\">{badge.icon}</div>\n                    <div className=\"flex-1\">\n                      <p className=\"font-medium\">{badge.name}</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        Earned {new Date(badge.earnedAt).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n                {mockData.badges.length > 3 && (\n                  <p className=\"text-sm text-muted-foreground text-center\">\n                    +{mockData.badges.length - 3} more badges\n                  </p>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center py-8\">\n                <Award className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n                <p className=\"text-muted-foreground\">No badges yet</p>\n                <p className=\"text-sm text-muted-foreground mt-1\">\n                  Complete challenges to earn your first badge!\n                </p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Active Challenges</CardTitle>\n          <CardDescription>Continue where you left off</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {mockData.enrolledChallenges.length > 0 ? (\n            <div className=\"space-y-4\">\n              {mockData.enrolledChallenges.map((challenge) => (\n                <div\n                  key={challenge.id}\n                  className=\"flex items-center justify-between p-4 border rounded-lg hover-elevate active-elevate-2 cursor-pointer\"\n                  onClick={() => setLocation(`/challenges/${challenge.id}`)}\n                  data-testid={`challenge-${challenge.id}`}\n                >\n                  <div className=\"flex-1\">\n                    <h3 className=\"font-semibold text-lg\">{challenge.title}</h3>\n                    <p className=\"text-sm text-muted-foreground mt-1\">\n                      Day {challenge.progress.completedDays} of {challenge.duration}\n                    </p>\n                  </div>\n                  <div className=\"flex items-center gap-4\">\n                    <div className=\"text-right\">\n                      <p className=\"text-sm font-medium\">\n                        {Math.round((challenge.progress.completedDays / challenge.duration) * 100)}%\n                      </p>\n                      <p className=\"text-xs text-muted-foreground\">Complete</p>\n                    </div>\n                    <Button data-testid={`button-continue-${challenge.id}`}>Continue</Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div className=\"text-center py-12\">\n              <BookOpen className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n              <p className=\"text-muted-foreground mb-4\">\n                You haven't enrolled in any challenges yet\n              </p>\n              <Button onClick={() => setLocation(\"/challenges\")} data-testid=\"button-browse-challenges\">\n                Browse Challenges\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":12594},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/AppSidebar.tsx":{"content":"import { Home, BookOpen, Trophy, Bell, Settings, Shield, Map } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\nimport {\n  Sidebar,\n  SidebarContent,\n  SidebarGroup,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarMenu,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarFooter,\n} from \"@/components/ui/sidebar\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Button } from \"@/components/ui/button\";\n\nconst menuItems = [\n  {\n    title: \"Dashboard\",\n    url: \"/dashboard\",\n    icon: Home,\n  },\n  {\n    title: \"Challenges\",\n    url: \"/challenges\",\n    icon: BookOpen,\n  },\n  {\n    title: \"Roadmaps\",\n    url: \"/roadmaps\",\n    icon: Map,\n  },\n  {\n    title: \"Certifications\",\n    url: \"/certifications\",\n    icon: Trophy,\n  },\n];\n\nconst adminItems = [\n  {\n    title: \"Admin Panel\",\n    url: \"/admin\",\n    icon: Shield,\n  },\n];\n\nexport function AppSidebar() {\n  const [location, setLocation] = useLocation();\n  const { user, signOut } = useAuth();\n\n  const handleNavigation = (url: string) => {\n    setLocation(url);\n  };\n\n  return (\n    <Sidebar>\n      <SidebarContent>\n        <SidebarGroup>\n          <SidebarGroupLabel className=\"text-xl font-bold text-primary px-4 py-6\">\n            LumoraEd\n          </SidebarGroupLabel>\n          <SidebarGroupContent>\n            <SidebarMenu>\n              {menuItems.map((item) => (\n                <SidebarMenuItem key={item.title}>\n                  <SidebarMenuButton\n                    onClick={() => handleNavigation(item.url)}\n                    isActive={location === item.url}\n                    data-testid={`link-${item.title.toLowerCase()}`}\n                  >\n                    <item.icon className=\"h-5 w-5\" />\n                    <span>{item.title}</span>\n                  </SidebarMenuButton>\n                </SidebarMenuItem>\n              ))}\n            </SidebarMenu>\n          </SidebarGroupContent>\n        </SidebarGroup>\n\n        {user?.role === \"admin\" && (\n          <SidebarGroup>\n            <SidebarGroupLabel>Administration</SidebarGroupLabel>\n            <SidebarGroupContent>\n              <SidebarMenu>\n                {adminItems.map((item) => (\n                  <SidebarMenuItem key={item.title}>\n                    <SidebarMenuButton\n                      onClick={() => handleNavigation(item.url)}\n                      isActive={location === item.url}\n                      data-testid={`link-${item.title.toLowerCase().replace(\" \", \"-\")}`}\n                    >\n                      <item.icon className=\"h-5 w-5\" />\n                      <span>{item.title}</span>\n                    </SidebarMenuButton>\n                  </SidebarMenuItem>\n                ))}\n              </SidebarMenu>\n            </SidebarGroupContent>\n          </SidebarGroup>\n        )}\n      </SidebarContent>\n\n      <SidebarFooter>\n        <SidebarMenu>\n          <SidebarMenuItem>\n            <div className=\"flex items-center gap-3 px-4 py-3\">\n              <Avatar>\n                <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                  {user?.name?.charAt(0).toUpperCase() || \"U\"}\n                </AvatarFallback>\n              </Avatar>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium truncate\">{user?.name}</p>\n                <p className=\"text-xs text-muted-foreground truncate\">{user?.email}</p>\n              </div>\n            </div>\n          </SidebarMenuItem>\n          <SidebarMenuItem>\n            <SidebarMenuButton onClick={signOut} data-testid=\"button-signout\">\n              <Settings className=\"h-5 w-5\" />\n              <span>Sign Out</span>\n            </SidebarMenuButton>\n          </SidebarMenuItem>\n        </SidebarMenu>\n      </SidebarFooter>\n    </Sidebar>\n  );\n}\n","size_bytes":3830},"client/src/components/MetricCard.tsx":{"content":"import { Card } from \"@/components/ui/card\";\nimport { LucideIcon } from \"lucide-react\";\n\ninterface MetricCardProps {\n  title: string;\n  value: string | number;\n  icon: LucideIcon;\n  description?: string;\n}\n\nexport function MetricCard({ title, value, icon: Icon, description }: MetricCardProps) {\n  return (\n    <Card className=\"p-6\">\n      <div className=\"flex items-center justify-between gap-4\">\n        <div className=\"flex-1\">\n          <p className=\"text-sm font-medium text-muted-foreground\">{title}</p>\n          <p className=\"text-3xl font-bold mt-2\">{value}</p>\n          {description && (\n            <p className=\"text-xs text-muted-foreground mt-1\">{description}</p>\n          )}\n        </div>\n        <div className=\"p-3 rounded-lg bg-primary/10\">\n          <Icon className=\"h-6 w-6 text-primary\" />\n        </div>\n      </div>\n    </Card>\n  );\n}\n","size_bytes":861},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"server/middleware/errorHandler.ts":{"content":"import { Request, Response, NextFunction } from 'express';\nimport { logger } from './logger.js';\nimport { AppError } from '../utils/AppError';\n\n// Custom error interface\nexport interface CustomError extends Error {\n  statusCode?: number;\n  isOperational?: boolean;\n  code?: string;\n  keyValue?: any;\n  errors?: any;\n}\n\n// Global error handler\nexport const globalErrorHandler = (\n  err: CustomError,\n  req: Request,\n  res: Response,\n  _next: NextFunction\n) => {\n  let error = { ...err };\n  error.message = err.message;\n\n  // Log error\n  logger.error('Error occurred:', {\n    error: err.message,\n    stack: err.stack,\n    url: req.url,\n    method: req.method,\n    ip: req.ip,\n    userAgent: req.get('User-Agent'),\n    timestamp: new Date().toISOString()\n  });\n\n  // Mongoose bad ObjectId\n  if (err.name === 'CastError') {\n    const message = 'Resource not found';\n    error = new AppError(message, 404);\n  }\n\n  // Mongoose duplicate key\n  if (err.code === '11000') {\n    const value = err.keyValue ? Object.values(err.keyValue)[0] : 'unknown';\n    const message = `Duplicate field value: ${value}. Please use another value.`;\n    error = new AppError(message, 400);\n  }\n\n  // Mongoose validation error\n  if (err.name === 'ValidationError') {\n    const errors = err.errors ? Object.values(err.errors).map((val: any) => val.message) : [];\n    const message = `Invalid input data: ${errors.join('. ')}`;\n    error = new AppError(message, 400);\n  }\n\n  // JWT errors\n  if (err.name === 'JsonWebTokenError') {\n    const message = 'Invalid token. Please log in again.';\n    error = new AppError(message, 401);\n  }\n\n  if (err.name === 'TokenExpiredError') {\n    const message = 'Your token has expired. Please log in again.';\n    error = new AppError(message, 401);\n  }\n\n  // Firebase auth errors\n  if (err.message.includes('Firebase')) {\n    const message = 'Authentication failed. Please try again.';\n    error = new AppError(message, 401);\n  }\n\n  // Database connection errors\n  if (err.message.includes('ECONNREFUSED')) {\n    const message = 'Database connection failed. Please try again later.';\n    error = new AppError(message, 503);\n  }\n\n  // Rate limiting errors\n  if (err.message.includes('Too many requests')) {\n    const message = 'Too many requests. Please try again later.';\n    error = new AppError(message, 429);\n  }\n\n  // Send error response\n  sendErrorResponse(error, req, res);\n};\n\n// Send error response\nconst sendErrorResponse = (err: AppError | CustomError, req: Request, res: Response) => {\n  // Check if response has already been sent\n  if (res.headersSent) {\n    return;\n  }\n\n  // Operational, trusted error: send message to client\n  if (err.isOperational) {\n    res.status(err.statusCode || 500).json({\n      success: false,\n      error: err.message,\n      ...(process.env.NODE_ENV === 'development' && { stack: err.stack })\n    });\n  } else {\n    // Programming or other unknown error: don't leak error details\n    logger.error('Programming error:', err);\n\n    res.status(500).json({\n      success: false,\n      error: process.env.NODE_ENV === 'production' \n        ? 'Something went wrong!' \n        : err.message\n    });\n  }\n};\n\n// Handle unhandled promise rejections\nexport const handleUnhandledRejection = () => {\n  process.on('unhandledRejection', (err: Error) => {\n    logger.error('Unhandled Promise Rejection:', err);\n    process.exit(1);\n  });\n};\n\n// Handle uncaught exceptions\nexport const handleUncaughtException = () => {\n  process.on('uncaughtException', (err: Error) => {\n    logger.error('Uncaught Exception:', err);\n    process.exit(1);\n  });\n};\n\n// Async error wrapper\nexport const asyncHandler = (fn: Function) => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    Promise.resolve(fn(req, res, next)).catch(next);\n  };\n};\n\n// 404 handler\nexport const notFoundHandler = (req: Request, res: Response, next: NextFunction) => {\n  const error = new AppError(`Not found - ${req.originalUrl}`, 404);\n  next(error);\n};\n\n// Validation error handler\nexport const handleValidationError = (errors: any[]) => {\n  const message = errors.map(error => error.msg).join('. ');\n  return new AppError(message, 400);\n};\n\n// Database error handler\nexport const handleDatabaseError = (err: any) => {\n  if (err.code === '23505') { // PostgreSQL unique violation\n    return new AppError('Duplicate entry. Please use a different value.', 400);\n  }\n  if (err.code === '23503') { // PostgreSQL foreign key violation\n    return new AppError('Referenced resource not found.', 400);\n  }\n  if (err.code === '23502') { // PostgreSQL not null violation\n    return new AppError('Required field is missing.', 400);\n  }\n  return new AppError('Database operation failed.', 500);\n};\n\n// Network error handler\nexport const handleNetworkError = (err: any) => {\n  if (err.code === 'ECONNREFUSED') {\n    return new AppError('Service unavailable. Please try again later.', 503);\n  }\n  if (err.code === 'ETIMEDOUT') {\n    return new AppError('Request timeout. Please try again.', 408);\n  }\n  return new AppError('Network error occurred.', 500);\n};\n\n// File upload error handler\nexport const handleFileUploadError = (err: any) => {\n  if (err.code === 'LIMIT_FILE_SIZE') {\n    return new AppError('File too large. Maximum size is 5MB.', 400);\n  }\n  if (err.code === 'LIMIT_UNEXPECTED_FILE') {\n    return new AppError('Unexpected file field.', 400);\n  }\n  return new AppError('File upload failed.', 500);\n};\n","size_bytes":5414},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, timestamp, jsonb, boolean } from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Users table - stores user information and authentication data\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: text(\"email\").notNull().unique(),\n  name: text(\"name\").notNull(),\n  role: text(\"role\").notNull().default(\"student\"),\n  firebaseUid: text(\"firebase_uid\").unique(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Challenges table - stores learning challenges\nexport const challenges = pgTable(\"challenges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  duration: integer(\"duration\").notNull(),\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Tasks table - daily tasks within challenges\nexport const tasks = pgTable(\"tasks\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  challengeId: varchar(\"challenge_id\").notNull().references(() => challenges.id, { onDelete: \"cascade\" }),\n  dayNumber: integer(\"day_number\").notNull(),\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  resourceLinks: jsonb(\"resource_links\").$type<Array<{ type: string; url: string; title: string }>>(),\n});\n\n// Quizzes table - quizzes for tasks\nexport const quizzes = pgTable(\"quizzes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  taskId: varchar(\"task_id\").notNull().references(() => tasks.id, { onDelete: \"cascade\" }),\n  questions: jsonb(\"questions\").notNull().$type<Array<{\n    question: string;\n    options: string[];\n    correctAnswer: number;\n  }>>(),\n});\n\n// Submissions table - student task submissions\nexport const submissions = pgTable(\"submissions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  taskId: varchar(\"task_id\").notNull().references(() => tasks.id),\n  status: text(\"status\").notNull().default(\"pending\"),\n  score: integer(\"score\"),\n  submittedAt: timestamp(\"submitted_at\").defaultNow().notNull(),\n});\n\n// User progress table - tracks user progress in challenges\nexport const userProgress = pgTable(\"user_progress\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id),\n  challengeId: varchar(\"challenge_id\").notNull().references(() => challenges.id, { onDelete: \"cascade\" }),\n  completedDays: integer(\"completed_days\").notNull().default(0),\n  streakCount: integer(\"streak_count\").notNull().default(0),\n  lastActivityDate: timestamp(\"last_activity_date\"),\n  enrolledAt: timestamp(\"enrolled_at\").defaultNow().notNull(),\n});\n\n// Certifications table - free certification alerts\nexport const certifications = pgTable(\"certifications\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  provider: text(\"provider\").notNull(),\n  link: text(\"link\").notNull(),\n  dateAdded: timestamp(\"date_added\").defaultNow().notNull(),\n});\n\n// Roadmaps table - learning roadmaps\nexport const roadmaps = pgTable(\"roadmaps\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  category: text(\"category\").notNull(),\n  difficulty: text(\"difficulty\").notNull(),\n  estimatedDuration: integer(\"estimated_duration\").notNull(), // in weeks\n  createdBy: varchar(\"created_by\").notNull().references(() => users.id),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Roadmap steps table - individual steps in a roadmap\nexport const roadmapSteps = pgTable(\"roadmap_steps\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  roadmapId: varchar(\"roadmap_id\").notNull().references(() => roadmaps.id, { onDelete: \"cascade\" }),\n  stepNumber: integer(\"step_number\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  resourceLinks: jsonb(\"resource_links\").$type<Array<{ type: string; url: string; title: string }>>(),\n  isOptional: boolean(\"is_optional\").notNull().default(false),\n  xpReward: integer(\"xp_reward\").default(10),\n});\n\n// User XP and Achievements\nexport const userXP = pgTable(\"user_xp\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  totalXP: integer(\"total_xp\").default(0).notNull(),\n  level: integer(\"level\").default(1).notNull(),\n  streakCount: integer(\"streak_count\").default(0).notNull(),\n  lastActivityDate: timestamp(\"last_activity_date\"),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n  updatedAt: timestamp(\"updated_at\").defaultNow().notNull(),\n});\n\nexport const badges = pgTable(\"badges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  name: text(\"name\").notNull(),\n  description: text(\"description\").notNull(),\n  icon: text(\"icon\").notNull(),\n  color: text(\"color\").notNull(),\n  xpRequired: integer(\"xp_required\").default(0),\n  category: text(\"category\").notNull(),\n  isRare: boolean(\"is_rare\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\nexport const userBadges = pgTable(\"user_badges\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  badgeId: varchar(\"badge_id\").notNull().references(() => badges.id, { onDelete: \"cascade\" }),\n  earnedAt: timestamp(\"earned_at\").defaultNow().notNull(),\n});\n\nexport const xpTransactions = pgTable(\"xp_transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").notNull().references(() => users.id, { onDelete: \"cascade\" }),\n  amount: integer(\"amount\").notNull(),\n  source: text(\"source\").notNull(), // 'task_completion', 'quiz_perfect', 'streak', 'challenge_completion'\n  sourceId: text(\"source_id\"), // ID of the task, quiz, challenge, etc.\n  description: text(\"description\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow().notNull(),\n});\n\n// Relations\nexport const usersRelations = relations(users, ({ many }) => ({\n  challenges: many(challenges),\n  submissions: many(submissions),\n  progress: many(userProgress),\n}));\n\nexport const challengesRelations = relations(challenges, ({ one, many }) => ({\n  creator: one(users, {\n    fields: [challenges.createdBy],\n    references: [users.id],\n  }),\n  tasks: many(tasks),\n  userProgress: many(userProgress),\n}));\n\nexport const tasksRelations = relations(tasks, ({ one, many }) => ({\n  challenge: one(challenges, {\n    fields: [tasks.challengeId],\n    references: [challenges.id],\n  }),\n  quiz: one(quizzes),\n  submissions: many(submissions),\n}));\n\nexport const quizzesRelations = relations(quizzes, ({ one }) => ({\n  task: one(tasks, {\n    fields: [quizzes.taskId],\n    references: [tasks.id],\n  }),\n}));\n\nexport const submissionsRelations = relations(submissions, ({ one }) => ({\n  user: one(users, {\n    fields: [submissions.userId],\n    references: [users.id],\n  }),\n  task: one(tasks, {\n    fields: [submissions.taskId],\n    references: [tasks.id],\n  }),\n}));\n\nexport const userProgressRelations = relations(userProgress, ({ one }) => ({\n  user: one(users, {\n    fields: [userProgress.userId],\n    references: [users.id],\n  }),\n  challenge: one(challenges, {\n    fields: [userProgress.challengeId],\n    references: [challenges.id],\n  }),\n}));\n\nexport const roadmapsRelations = relations(roadmaps, ({ one, many }) => ({\n  creator: one(users, {\n    fields: [roadmaps.createdBy],\n    references: [users.id],\n  }),\n  steps: many(roadmapSteps),\n}));\n\nexport const roadmapStepsRelations = relations(roadmapSteps, ({ one }) => ({\n  roadmap: one(roadmaps, {\n    fields: [roadmapSteps.roadmapId],\n    references: [roadmaps.id],\n  }),\n}));\n\nexport const userXPRelations = relations(userXP, ({ one }) => ({\n  user: one(users, {\n    fields: [userXP.userId],\n    references: [users.id],\n  }),\n}));\n\nexport const userBadgesRelations = relations(userBadges, ({ one }) => ({\n  user: one(users, {\n    fields: [userBadges.userId],\n    references: [users.id],\n  }),\n  badge: one(badges, {\n    fields: [userBadges.badgeId],\n    references: [badges.id],\n  }),\n}));\n\nexport const xpTransactionsRelations = relations(xpTransactions, ({ one }) => ({\n  user: one(users, {\n    fields: [xpTransactions.userId],\n    references: [users.id],\n  }),\n}));\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertChallengeSchema = createInsertSchema(challenges).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertTaskSchema = createInsertSchema(tasks).omit({\n  id: true,\n});\n\nexport const insertQuizSchema = createInsertSchema(quizzes).omit({\n  id: true,\n});\n\nexport const insertSubmissionSchema = createInsertSchema(submissions).omit({\n  id: true,\n  submittedAt: true,\n});\n\nexport const insertUserProgressSchema = createInsertSchema(userProgress).omit({\n  id: true,\n  enrolledAt: true,\n});\n\nexport const insertCertificationSchema = createInsertSchema(certifications).omit({\n  id: true,\n  dateAdded: true,\n});\n\nexport const insertRoadmapSchema = createInsertSchema(roadmaps).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertRoadmapStepSchema = createInsertSchema(roadmapSteps).omit({\n  id: true,\n});\n\nexport const insertUserXPSchema = createInsertSchema(userXP).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport const insertBadgeSchema = createInsertSchema(badges).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertUserBadgeSchema = createInsertSchema(userBadges).omit({\n  id: true,\n  earnedAt: true,\n});\n\nexport const insertXPTransactionSchema = createInsertSchema(xpTransactions).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Types\nexport type User = typeof users.$inferSelect;\nexport type InsertUser = z.infer<typeof insertUserSchema>;\n\nexport type Challenge = typeof challenges.$inferSelect;\nexport type InsertChallenge = z.infer<typeof insertChallengeSchema>;\n\nexport type Task = typeof tasks.$inferSelect;\nexport type InsertTask = z.infer<typeof insertTaskSchema>;\n\nexport type Quiz = typeof quizzes.$inferSelect;\nexport type InsertQuiz = z.infer<typeof insertQuizSchema>;\n\nexport type Submission = typeof submissions.$inferSelect;\nexport type InsertSubmission = z.infer<typeof insertSubmissionSchema>;\n\nexport type UserProgress = typeof userProgress.$inferSelect;\nexport type InsertUserProgress = z.infer<typeof insertUserProgressSchema>;\n\nexport type Certification = typeof certifications.$inferSelect;\nexport type InsertCertification = z.infer<typeof insertCertificationSchema>;\n\nexport type Roadmap = typeof roadmaps.$inferSelect;\nexport type InsertRoadmap = z.infer<typeof insertRoadmapSchema>;\n\nexport type RoadmapStep = typeof roadmapSteps.$inferSelect;\nexport type InsertRoadmapStep = z.infer<typeof insertRoadmapStepSchema>;\n\nexport type UserXP = typeof userXP.$inferSelect;\nexport type InsertUserXP = z.infer<typeof insertUserXPSchema>;\n\nexport type Badge = typeof badges.$inferSelect;\nexport type InsertBadge = z.infer<typeof insertBadgeSchema>;\n\nexport type UserBadge = typeof userBadges.$inferSelect;\nexport type InsertUserBadge = z.infer<typeof insertUserBadgeSchema>;\n\nexport type XPTransaction = typeof xpTransactions.$inferSelect;\nexport type InsertXPTransaction = z.infer<typeof insertXPTransactionSchema>;\n","size_bytes":11785},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"jest.setup.js":{"content":"// Jest setup file\nimport '@testing-library/jest-dom';\n\n// Mock environment variables\nprocess.env.NODE_ENV = 'test';\nprocess.env.DATABASE_URL = 'postgresql://test:test@localhost:5432/lumoraed_test';\nprocess.env.FIREBASE_PROJECT_ID = 'test-project';\nprocess.env.FIREBASE_PRIVATE_KEY = 'test-key';\nprocess.env.FIREBASE_CLIENT_EMAIL = 'test@test.com';\n\n// Mock Firebase Admin\njest.mock('./server/firebase-admin', () => ({\n  verifyIdToken: jest.fn().mockResolvedValue({ uid: 'test-uid' })\n}));\n\n// Mock database\njest.mock('./server/db', () => ({\n  db: {\n    select: jest.fn().mockReturnThis(),\n    from: jest.fn().mockReturnThis(),\n    where: jest.fn().mockReturnThis(),\n    insert: jest.fn().mockReturnThis(),\n    values: jest.fn().mockReturnThis(),\n    returning: jest.fn().mockResolvedValue([{ id: 'test-id' }]),\n    update: jest.fn().mockReturnThis(),\n    set: jest.fn().mockReturnThis(),\n    delete: jest.fn().mockReturnThis()\n  }\n}));\n\n// Mock storage\njest.mock('./server/storage', () => ({\n  storage: {\n    getUser: jest.fn(),\n    getUserByEmail: jest.fn(),\n    createUser: jest.fn(),\n    getAllChallenges: jest.fn(),\n    createChallenge: jest.fn(),\n    getAllRoadmaps: jest.fn(),\n    createRoadmap: jest.fn(),\n    getAllCertifications: jest.fn(),\n    createCertification: jest.fn()\n  }\n}));\n\n// Global test utilities\nglobal.testUtils = {\n  createMockUser: () => ({\n    id: 'test-user-id',\n    email: 'test@example.com',\n    name: 'Test User',\n    role: 'student',\n    firebaseUid: 'test-firebase-uid',\n    createdAt: new Date()\n  }),\n  \n  createMockChallenge: () => ({\n    id: 'test-challenge-id',\n    title: 'Test Challenge',\n    description: 'Test Description',\n    duration: 30,\n    createdBy: 'test-user-id',\n    createdAt: new Date()\n  }),\n  \n  createMockRoadmap: () => ({\n    id: 'test-roadmap-id',\n    title: 'Test Roadmap',\n    description: 'Test Description',\n    category: 'Programming',\n    difficulty: 'Beginner',\n    estimatedDuration: 8,\n    createdBy: 'test-user-id',\n    createdAt: new Date()\n  })\n};\n\n// Console error suppression for tests\nconst originalError = console.error;\nbeforeAll(() => {\n  console.error = (...args) => {\n    if (\n      typeof args[0] === 'string' &&\n      args[0].includes('Warning: ReactDOM.render is no longer supported')\n    ) {\n      return;\n    }\n    originalError.call(console, ...args);\n  };\n});\n\nafterAll(() => {\n  console.error = originalError;\n});\n","size_bytes":2403},"server/run-seed-roadmaps.ts":{"content":"import \"dotenv/config\";\nimport { seedRoadmaps } from \"./seed-roadmaps\";\n\nasync function runSeedRoadmaps() {\n  console.log(\"🚀 Starting roadmap seeding process...\");\n  \n  try {\n    await seedRoadmaps();\n    console.log(\"✅ Roadmap seeding completed successfully!\");\n  } catch (error) {\n    console.error(\"❌ Roadmap seeding failed:\", error);\n    process.exit(1);\n  }\n}\n\nrunSeedRoadmaps();\n","size_bytes":392},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/App.tsx":{"content":"import { Switch, Route, Redirect } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { SidebarProvider, SidebarTrigger } from \"@/components/ui/sidebar\";\nimport { AppSidebar } from \"@/components/AppSidebar\";\nimport { AuthProvider, useAuth } from \"@/contexts/AuthContext\";\nimport { ThemeProvider } from \"@/contexts/ThemeContext\";\nimport { ThemeToggle } from \"@/components/ThemeToggle\";\nimport NotFound from \"@/pages/not-found\";\nimport LandingPage from \"@/pages/LandingPage\";\nimport Login from \"@/pages/Login\";\nimport Register from \"@/pages/Register\";\nimport Dashboard from \"@/pages/Dashboard\";\nimport Challenges from \"@/pages/Challenges\";\nimport ChallengeDetail from \"@/pages/ChallengeDetail\";\nimport TaskDetail from \"@/pages/TaskDetail\";\nimport Certifications from \"@/pages/Certifications\";\nimport Roadmaps from \"@/pages/Roadmaps\";\nimport RoadmapDetail from \"@/pages/RoadmapDetail\";\nimport Admin from \"@/pages/Admin\";\n\nfunction ProtectedRoute({ component: Component }: { component: () => JSX.Element }) {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return <Component />;\n}\n\nfunction AuthenticatedLayout() {\n  const { user } = useAuth();\n  const style = {\n    \"--sidebar-width\": \"16rem\",\n    \"--sidebar-width-icon\": \"3rem\",\n  };\n\n  return (\n    <SidebarProvider style={style as React.CSSProperties}>\n      <div className=\"flex h-screen w-full\">\n        <AppSidebar />\n        <div className=\"flex flex-col flex-1 overflow-hidden\">\n          <header className=\"flex items-center justify-between p-4 border-b bg-background sticky top-0 z-10\">\n            <SidebarTrigger data-testid=\"button-sidebar-toggle\" />\n            <ThemeToggle />\n          </header>\n          <main className=\"flex-1 overflow-auto p-6\">\n            <Switch>\n              <Route path=\"/dashboard\" component={() => <ProtectedRoute component={Dashboard} />} />\n              <Route path=\"/challenges\" component={() => <ProtectedRoute component={Challenges} />} />\n              <Route path=\"/challenges/:id\" component={() => <ProtectedRoute component={ChallengeDetail} />} />\n              <Route path=\"/tasks/:id\" component={() => <ProtectedRoute component={TaskDetail} />} />\n              <Route path=\"/roadmaps\" component={() => <ProtectedRoute component={Roadmaps} />} />\n              <Route path=\"/roadmaps/:id\" component={() => <ProtectedRoute component={RoadmapDetail} />} />\n              <Route path=\"/certifications\" component={() => <ProtectedRoute component={Certifications} />} />\n              {user?.role === \"admin\" && (\n                <Route path=\"/admin\" component={() => <ProtectedRoute component={Admin} />} />\n              )}\n              <Route component={NotFound} />\n            </Switch>\n          </main>\n        </div>\n      </div>\n    </SidebarProvider>\n  );\n}\n\nfunction Router() {\n  const { user, loading } = useAuth();\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n      return (\n        <Switch>\n          <Route path=\"/\" component={LandingPage} />\n          <Route path=\"/login\">{user ? <Redirect to=\"/dashboard\" /> : <Login />}</Route>\n          <Route path=\"/register\">{user ? <Redirect to=\"/dashboard\" /> : <Register />}</Route>\n          <Route>{user ? <AuthenticatedLayout /> : <Redirect to=\"/login\" />}</Route>\n        </Switch>\n      );\n}\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <AuthProvider>\n          <TooltipProvider>\n            <Toaster />\n            <Router />\n          </TooltipProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n","size_bytes":4475},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/pages/Login.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { signInWithGoogle, signInWithEmail } from \"@/lib/firebase\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { BookOpen, Shield } from \"lucide-react\";\n\nexport default function Login() {\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const { checkSessionAuth } = useAuth();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [isAdminLogin, setIsAdminLogin] = useState(false);\n\n  const handleGoogleSignIn = async () => {\n    try {\n      setLoading(true);\n      await signInWithGoogle();\n      setLocation(\"/dashboard\");\n    } catch (error: any) {\n      toast({\n        title: \"Authentication Error\",\n        description: error.message.includes(\"not configured\") \n          ? \"Firebase authentication is not configured. Please contact the administrator to set up authentication.\"\n          : error.message || \"Failed to sign in with Google\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleEmailSignIn = async (e: React.FormEvent) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      \n      if (isAdminLogin) {\n        // Handle admin login\n        if (email === \"admin@lumoraed.com\" && password === \"Admin@123\") {\n          const response = await fetch(\"/api/admin/create-admin\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\", // Important for session cookies\n            body: JSON.stringify({ email, password }),\n          });\n          \n          if (response.ok) {\n            const data = await response.json();\n            toast({\n              title: \"Admin Access Granted\",\n              description: \"You can now access the admin dashboard.\",\n            });\n            // Trigger session check to update auth context\n            await checkSessionAuth();\n            setLocation(\"/admin\");\n          } else {\n            const errorData = await response.json();\n            toast({\n              title: \"Admin Login Failed\",\n              description: errorData.error || \"Invalid admin credentials.\",\n              variant: \"destructive\",\n            });\n          }\n        } else {\n          toast({\n            title: \"Invalid Admin Credentials\",\n            description: \"Please check your email and password.\",\n            variant: \"destructive\",\n          });\n        }\n      } else {\n        // Handle regular user login - create or authenticate student\n        try {\n          const response = await fetch(\"/api/auth/student-login\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            credentials: \"include\",\n            body: JSON.stringify({ \n              email, \n              name: email.split(\"@\")[0] // Use email prefix as name\n            }),\n          });\n          \n          if (response.ok) {\n            const userData = await response.json();\n            toast({\n              title: \"Welcome!\",\n              description: `Welcome ${userData.name}! You're logged in as a student.`,\n            });\n            // Trigger session check to update auth context\n            await checkSessionAuth();\n            setLocation(\"/dashboard\");\n          } else {\n            const errorData = await response.json();\n            toast({\n              title: \"Login Failed\",\n              description: errorData.error || \"Unable to authenticate. Please try again.\",\n              variant: \"destructive\",\n            });\n          }\n        } catch (error) {\n          toast({\n            title: \"Authentication Error\",\n            description: \"Failed to authenticate. Please try again.\",\n            variant: \"destructive\",\n          });\n        }\n      }\n    } catch (error: any) {\n      toast({\n        title: \"Authentication Error\",\n        description: error.message.includes(\"not configured\")\n          ? \"Firebase authentication is not configured. Please contact the administrator to set up authentication.\"\n          : error.message || \"Failed to sign in\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-primary/10 via-background to-secondary/10 p-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"text-center space-y-2\">\n          <div className=\"flex justify-center mb-4\">\n            <div className={`p-3 rounded-xl ${isAdminLogin ? 'bg-red-500/10' : 'bg-primary/10'}`}>\n              {isAdminLogin ? (\n                <Shield className=\"h-8 w-8 text-red-500\" />\n              ) : (\n                <BookOpen className=\"h-8 w-8 text-primary\" />\n              )}\n            </div>\n          </div>\n          <CardTitle className=\"text-3xl font-bold\">\n            {isAdminLogin ? \"Admin Access\" : \"Welcome to LumoraEd\"}\n          </CardTitle>\n          <CardDescription className=\"text-base\">\n            {isAdminLogin \n              ? \"Enter admin credentials to manage challenges and tasks\"\n              : \"Enter your email to access student learning features\"\n            }\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {!isAdminLogin && (\n            <Button\n              onClick={handleGoogleSignIn}\n              disabled={loading}\n              variant=\"outline\"\n              className=\"w-full\"\n              data-testid=\"button-google-signin\"\n            >\n              <svg className=\"h-5 w-5 mr-2\" viewBox=\"0 0 24 24\">\n                <path\n                  fill=\"currentColor\"\n                  d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"\n                />\n                <path\n                  fill=\"currentColor\"\n                  d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"\n                />\n              </svg>\n              Continue with Google\n            </Button>\n          )}\n\n          {!isAdminLogin && (\n            <div className=\"relative\">\n              <div className=\"absolute inset-0 flex items-center\">\n                <span className=\"w-full border-t\" />\n              </div>\n              <div className=\"relative flex justify-center text-xs uppercase\">\n                <span className=\"bg-card px-2 text-muted-foreground\">Or continue with</span>\n              </div>\n            </div>\n          )}\n\n          <form onSubmit={handleEmailSignIn} className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"email\">Email</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder={isAdminLogin ? \"admin@lumoraed.com\" : \"you@example.com\"}\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n                data-testid=\"input-email\"\n              />\n            </div>\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"password\">Password {!isAdminLogin && \"(Optional)\"}</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                placeholder={isAdminLogin ? \"••••••••\" : \"Leave empty for student login\"}\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required={isAdminLogin}\n                data-testid=\"input-password\"\n              />\n            </div>\n            <Button type=\"submit\" className=\"w-full\" disabled={loading} data-testid=\"button-signin\">\n              {loading \n                ? (isAdminLogin ? \"Accessing...\" : \"Signing in...\") \n                : (isAdminLogin ? \"Access Admin Dashboard\" : \"Access Student Dashboard\")\n              }\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col items-center space-y-2\">\n          <Button\n            variant=\"ghost\"\n            className=\"text-sm text-muted-foreground hover:text-foreground\"\n            onClick={() => setIsAdminLogin(!isAdminLogin)}\n          >\n            {isAdminLogin ? \"← Back to User Login\" : \"Admin Access\"}\n          </Button>\n          {!isAdminLogin && (\n            <p className=\"text-sm text-muted-foreground\">\n              Don't have an account?{\" \"}\n              <Button\n                variant=\"ghost\"\n                className=\"p-0 h-auto font-semibold text-primary hover:text-primary\"\n                onClick={() => setLocation(\"/register\")}\n                data-testid=\"link-register\"\n              >\n                Sign up\n              </Button>\n            </p>\n          )}\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":9844},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/pages/ChallengeDetail.tsx":{"content":"import { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { StreakCalendar } from \"@/components/StreakCalendar\";\nimport { ArrowLeft, CheckCircle2, Circle, ExternalLink, FileText, Video, Link as LinkIcon } from \"lucide-react\";\nimport type { Challenge, Task, UserProgress, Submission } from \"@shared/schema\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ChallengeDetailData {\n  challenge: Challenge;\n  tasks: Task[];\n  progress?: UserProgress;\n  submissions: Submission[];\n}\n\nexport default function ChallengeDetail() {\n  const [, params] = useRoute(\"/challenges/:id\");\n  const [, setLocation] = useLocation();\n  const { toast } = useToast();\n  const challengeId = params?.id;\n\n  const { data, isLoading } = useQuery<ChallengeDetailData>({\n    queryKey: [\"/api/challenges\", challengeId],\n    enabled: !!challengeId,\n  });\n\n  const completeTaskMutation = useMutation({\n    mutationFn: (taskId: string) =>\n      apiRequest(\"POST\", `/api/tasks/${taskId}/complete`, {}),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/challenges\", challengeId] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/dashboard\"] });\n      toast({\n        title: \"Task completed!\",\n        description: \"Great job! Keep up the momentum.\",\n      });\n    },\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading challenge...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!data) {\n    return (\n      <div className=\"text-center py-12\">\n        <p className=\"text-muted-foreground\">Challenge not found</p>\n        <Button onClick={() => setLocation(\"/challenges\")} className=\"mt-4\">\n          Back to Challenges\n        </Button>\n      </div>\n    );\n  }\n\n  const { challenge, tasks, progress, submissions } = data;\n  const completedTaskIds = new Set(\n    submissions.filter((s) => s.status === \"completed\").map((s) => s.taskId)\n  );\n\n  const getResourceIcon = (type: string) => {\n    switch (type.toLowerCase()) {\n      case \"pdf\":\n        return FileText;\n      case \"video\":\n        return Video;\n      default:\n        return LinkIcon;\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <Button\n          variant=\"ghost\"\n          onClick={() => setLocation(\"/challenges\")}\n          className=\"mb-4\"\n          data-testid=\"button-back\"\n        >\n          <ArrowLeft className=\"h-4 w-4 mr-2\" />\n          Back to Challenges\n        </Button>\n        <h1 className=\"text-4xl font-bold tracking-tight\">{challenge.title}</h1>\n        <p className=\"text-muted-foreground mt-2\">{challenge.description}</p>\n      </div>\n\n      {progress && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Your Progress</CardTitle>\n              <CardDescription>\n                Day {progress.completedDays} of {challenge.duration}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex justify-between text-sm mb-2\">\n                    <span className=\"text-muted-foreground\">Completion</span>\n                    <span className=\"font-medium\">\n                      {Math.round((progress.completedDays / challenge.duration) * 100)}%\n                    </span>\n                  </div>\n                  <div className=\"h-3 bg-muted rounded-full overflow-hidden\">\n                    <div\n                      className=\"h-full bg-primary transition-all duration-300\"\n                      style={{\n                        width: `${(progress.completedDays / challenge.duration) * 100}%`,\n                      }}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex items-center justify-between pt-2\">\n                  <div>\n                    <p className=\"text-2xl font-bold\">{progress.streakCount}</p>\n                    <p className=\"text-sm text-muted-foreground\">Day Streak</p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-2xl font-bold\">{progress.completedDays}</p>\n                    <p className=\"text-sm text-muted-foreground\">Days Completed</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Activity Calendar</CardTitle>\n              <CardDescription>Your completed days</CardDescription>\n            </CardHeader>\n            <CardContent>\n              <StreakCalendar\n                activeDays={Array.from({ length: progress.completedDays }, (_, i) => i + 1)}\n                totalDays={challenge.duration}\n              />\n            </CardContent>\n          </Card>\n        </div>\n      )}\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Daily Tasks</CardTitle>\n          <CardDescription>Complete tasks day by day to finish the challenge</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {tasks.map((task) => {\n              const isCompleted = completedTaskIds.has(task.id);\n              const canAccess = !progress || task.dayNumber <= progress.completedDays + 1;\n\n              return (\n                <div\n                  key={task.id}\n                  className={`border rounded-lg p-6 space-y-4 ${\n                    canAccess ? \"hover-elevate cursor-pointer\" : \"opacity-50\"\n                  }`}\n                  onClick={() => canAccess && setLocation(`/tasks/${task.id}`)}\n                  data-testid={`task-${task.id}`}\n                >\n                  <div className=\"flex items-start justify-between gap-4\">\n                    <div className=\"flex items-start gap-4 flex-1\">\n                      <div className=\"mt-1\">\n                        {isCompleted ? (\n                          <CheckCircle2 className=\"h-6 w-6 text-primary\" data-testid={`icon-completed-${task.id}`} />\n                        ) : (\n                          <Circle className=\"h-6 w-6 text-muted-foreground\" />\n                        )}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center gap-2 mb-1\">\n                          <Badge variant=\"outline\">Day {task.dayNumber}</Badge>\n                          {isCompleted && <Badge variant=\"default\">Completed</Badge>}\n                        </div>\n                        <h3 className=\"font-semibold text-lg\">{task.title}</h3>\n                        <p className=\"text-sm text-muted-foreground mt-2 line-clamp-2\">\n                          {task.content}\n                        </p>\n                      </div>\n                    </div>\n                    {canAccess && (\n                      <Button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setLocation(`/tasks/${task.id}`);\n                        }}\n                        variant={isCompleted ? \"outline\" : \"default\"}\n                        data-testid={`button-view-task-${task.id}`}\n                      >\n                        {isCompleted ? \"Review\" : \"Start\"}\n                      </Button>\n                    )}\n                  </div>\n\n                  {task.resourceLinks && task.resourceLinks.length > 0 && (\n                    <div className=\"flex flex-wrap gap-2 pt-2\">\n                      {task.resourceLinks.map((resource, index) => {\n                        const Icon = getResourceIcon(resource.type);\n                        return (\n                          <a\n                            key={index}\n                            href={resource.url}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            onClick={(e) => e.stopPropagation()}\n                            className=\"inline-flex items-center gap-2 text-sm text-primary hover:underline\"\n                            data-testid={`resource-${task.id}-${index}`}\n                          >\n                            <Icon className=\"h-4 w-4\" />\n                            {resource.title}\n                            <ExternalLink className=\"h-3 w-3\" />\n                          </a>\n                        );\n                      })}\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":9121},"server/seed-roadmaps.ts":{"content":"import { storage } from \"./storage\";\n\nasync function seedRoadmaps() {\n  console.log(\"🗺️ Starting roadmap seeding...\");\n\n  try {\n    // Get admin user\n    const adminUser = await storage.getUserByEmail(\"admin@lumoraed.com\");\n    if (!adminUser) {\n      throw new Error(\"Admin user not found. Please run the main seed script first.\");\n    }\n\n    // 1. Python Fundamentals Roadmap (Beginner)\n    console.log(\"🐍 Creating Python Fundamentals Roadmap...\");\n    const pythonFundamentals = await storage.createRoadmap({\n      title: \"Python Fundamentals for Beginners\",\n      description: \"Start your coding journey with Python! Learn the basics of programming, data structures, and build your first projects. Perfect for complete beginners who want to learn programming in a fun and engaging way.\",\n      category: \"Programming\",\n      difficulty: \"Beginner\",\n      estimatedDuration: 8, // 8 weeks\n      createdBy: adminUser.id\n    });\n\n    const pythonFundamentalsSteps = [\n      {\n        stepNumber: 1,\n        title: \"Welcome to Python! 🐍\",\n        description: \"Set up your Python environment and write your first 'Hello World' program. Learn about variables, data types, and basic operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Setup Tutorial\", url: \"https://www.youtube.com/watch?v=kqtD5dpn9C8\" },\n          { type: \"practice\", title: \"Python Basics on Codecademy\", url: \"https://www.codecademy.com/learn/learn-python-3\" },\n          { type: \"interactive\", title: \"Python Interactive Tutorial\", url: \"https://www.learnpython.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Control the Flow 🔄\",\n        description: \"Master if/else statements, loops, and logical thinking. Learn to make decisions in your code and repeat actions efficiently.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Control Flow\", url: \"https://www.youtube.com/watch?v=AWek49wXGzI\" },\n          { type: \"practice\", title: \"CodingBat Python\", url: \"https://codingbat.com/python\" },\n          { type: \"game\", title: \"Python Challenge Game\", url: \"https://www.pythonchallenge.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Functions & Reusability ♻️\",\n        description: \"Learn to write reusable code with functions. Understand parameters, return values, and how to organize your code better.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Functions Explained\", url: \"https://www.youtube.com/watch?v=9Os0o3wzS_I\" },\n          { type: \"practice\", title: \"Function Practice on HackerRank\", url: \"https://www.hackerrank.com/domains/python/py-function\" },\n          { type: \"interactive\", title: \"Interactive Function Tutorial\", url: \"https://www.learnpython.org/en/Functions\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Data Structures - Lists & Dictionaries 📊\",\n        description: \"Master Python's powerful data structures. Learn lists, dictionaries, and when to use each one. Build your first data manipulation skills.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Data Structures\", url: \"https://www.youtube.com/watch?v=ohCDWZgNIU0\" },\n          { type: \"practice\", title: \"Data Structure Exercises\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" },\n          { type: \"interactive\", title: \"Data Structure Visualizer\", url: \"https://visualgo.net/en\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Object-Oriented Programming 🏗️\",\n        description: \"Learn classes, objects, and inheritance. Understand how to model real-world concepts in code and write more organized programs.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python OOP Tutorial\", url: \"https://www.youtube.com/watch?v=ZDa-Z5JzLYM\" },\n          { type: \"practice\", title: \"OOP Practice Problems\", url: \"https://www.hackerrank.com/domains/python/py-classes\" },\n          { type: \"interactive\", title: \"OOP Interactive Guide\", url: \"https://www.learnpython.org/en/Classes_and_Objects\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"File Handling & Error Management 📁\",\n        description: \"Learn to read and write files, handle errors gracefully, and make your programs more robust and user-friendly.\",\n        resourceLinks: [\n          { type: \"video\", title: \"File I/O in Python\", url: \"https://www.youtube.com/watch?v=Uh2ebFW8OYM\" },\n          { type: \"practice\", title: \"File Handling Exercises\", url: \"https://www.hackerrank.com/domains/python/py-io\" },\n          { type: \"interactive\", title: \"Error Handling Tutorial\", url: \"https://www.learnpython.org/en/Exception_Handling\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Your First Python Project 🚀\",\n        description: \"Build a complete Python project! Create a calculator, text analyzer, or simple game. Apply everything you've learned in a real project.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Templates\", url: \"https://github.com/topics/python-beginner-projects\" },\n          { type: \"community\", title: \"Share Your Project\", url: \"https://www.reddit.com/r/learnpython/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Next Steps & Advanced Topics 🎯\",\n        description: \"Explore advanced Python topics like web development, data science, or automation. Plan your learning path forward.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Career Paths\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Advanced Python Topics\", url: \"https://realpython.com/\" },\n          { type: \"community\", title: \"Python Community\", url: \"https://www.python.org/community/\" }\n        ],\n        isOptional: true\n      }\n    ];\n\n    for (const stepData of pythonFundamentalsSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: pythonFundamentals.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 2. Java Programming Roadmap\n    console.log(\"☕ Creating Java Programming Roadmap...\");\n    const javaProgramming = await storage.createRoadmap({\n      title: \"Java Programming Mastery\",\n      description: \"Master Java programming from basics to advanced concepts. Learn object-oriented programming, data structures, algorithms, and build enterprise-level applications. Perfect for aspiring software developers.\",\n      category: \"Programming\",\n      difficulty: \"Intermediate\",\n      estimatedDuration: 12, // 12 weeks\n      createdBy: adminUser.id\n    });\n\n    const javaProgrammingSteps = [\n      {\n        stepNumber: 1,\n        title: \"Java Environment & Basics ☕\",\n        description: \"Set up Java development environment, learn syntax, variables, data types, and write your first Java program.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Setup Guide\", url: \"https://www.youtube.com/watch?v=H3Q2QRmyYho\" },\n          { type: \"practice\", title: \"Java Basics on Codecademy\", url: \"https://www.codecademy.com/learn/learn-java\" },\n          { type: \"interactive\", title: \"Java Interactive Tutorial\", url: \"https://www.learnjavaonline.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Object-Oriented Programming 🏗️\",\n        description: \"Master classes, objects, inheritance, polymorphism, and encapsulation. Learn the core principles of OOP.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java OOP Tutorial\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"OOP Practice on HackerRank\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"interactive\", title: \"OOP Interactive Guide\", url: \"https://www.learnjavaonline.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Data Structures & Collections 📊\",\n        description: \"Learn ArrayList, LinkedList, HashMap, HashSet, and other Java collections. Master data manipulation and storage.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Collections\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Collection Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"interactive\", title: \"Collection Framework Guide\", url: \"https://docs.oracle.com/javase/tutorial/collections/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Exception Handling & File I/O 🛡️\",\n        description: \"Learn try-catch blocks, custom exceptions, file operations, and robust error handling in Java applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Exception Handling\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Exception Handling Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"interactive\", title: \"File I/O Tutorial\", url: \"https://docs.oracle.com/javase/tutorial/essential/io/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Multithreading & Concurrency ⚡\",\n        description: \"Learn Thread class, Runnable interface, synchronization, and concurrent programming concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Multithreading\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Threading Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"interactive\", title: \"Concurrency Guide\", url: \"https://docs.oracle.com/javase/tutorial/essential/concurrency/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Spring Framework 🌱\",\n        description: \"Learn Spring Boot, dependency injection, REST APIs, and modern Java web development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Spring Boot Tutorial\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Spring Boot Projects\", url: \"https://spring.io/guides\" },\n          { type: \"interactive\", title: \"Spring Framework Guide\", url: \"https://spring.io/projects/spring-framework\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Database Integration with JPA 🗄️\",\n        description: \"Learn JPA, Hibernate, database operations, and ORM concepts for enterprise applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Spring Data JPA\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"JPA Exercises\", url: \"https://spring.io/guides\" },\n          { type: \"interactive\", title: \"JPA Documentation\", url: \"https://spring.io/projects/spring-data-jpa\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Testing & Quality Assurance 🧪\",\n        description: \"Learn JUnit, Mockito, testing strategies, and ensure code quality in Java applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Testing\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://junit.org/junit5/\" },\n          { type: \"interactive\", title: \"Testing Guide\", url: \"https://junit.org/junit5/docs/current/user-guide/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Microservices & Cloud ☁️\",\n        description: \"Learn microservices architecture, Docker, cloud deployment, and modern Java development practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Microservices\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Microservices Projects\", url: \"https://spring.io/guides\" },\n          { type: \"interactive\", title: \"Cloud Deployment Guide\", url: \"https://spring.io/projects/spring-cloud\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Final Enterprise Project 🏢\",\n        description: \"Build a complete enterprise Java application with all modern features and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Enterprise Java Project\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Templates\", url: \"https://github.com/topics/java-spring-boot\" },\n          { type: \"community\", title: \"Java Community\", url: \"https://www.reddit.com/r/java/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of javaProgrammingSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: javaProgramming.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 3. Full Stack Development Roadmap\n    console.log(\"🌐 Creating Full Stack Development Roadmap...\");\n    const fullStackDev = await storage.createRoadmap({\n      title: \"Full Stack Web Development\",\n      description: \"Master both frontend and backend development! Learn HTML, CSS, JavaScript, React, Node.js, databases, and deployment. Build complete web applications from scratch.\",\n      category: \"Web Development\",\n      difficulty: \"Intermediate\",\n      estimatedDuration: 16, // 16 weeks\n      createdBy: adminUser.id\n    });\n\n    const fullStackDevSteps = [\n      {\n        stepNumber: 1,\n        title: \"Frontend Fundamentals 🎨\",\n        description: \"Learn HTML5, CSS3, JavaScript ES6+, and responsive design. Build beautiful, interactive web pages.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Development Basics\", url: \"https://www.youtube.com/watch?v=qz0aGYrrlhU\" },\n          { type: \"practice\", title: \"FreeCodeCamp Frontend\", url: \"https://www.freecodecamp.org/learn/responsive-web-design/\" },\n          { type: \"interactive\", title: \"Interactive Web Tutorial\", url: \"https://www.w3schools.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"React Development ⚛️\",\n        description: \"Master React, components, hooks, state management, and modern frontend development patterns.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"React Exercises\", url: \"https://reactjs.org/tutorial/tutorial.html\" },\n          { type: \"interactive\", title: \"React Interactive Guide\", url: \"https://reactjs.org/docs/getting-started.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Backend with Node.js 🚀\",\n        description: \"Learn Node.js, Express.js, REST APIs, and server-side JavaScript development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Node.js Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Node.js Projects\", url: \"https://expressjs.com/en/starter/installing.html\" },\n          { type: \"interactive\", title: \"Node.js Guide\", url: \"https://nodejs.org/en/docs/guides/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Database Integration 🗄️\",\n        description: \"Learn MongoDB, SQL databases, ORMs, and data persistence in web applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Database Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Database Exercises\", url: \"https://mongoosejs.com/docs/\" },\n          { type: \"interactive\", title: \"Database Guide\", url: \"https://docs.mongodb.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Authentication & Security 🔐\",\n        description: \"Learn JWT tokens, bcrypt, authentication, authorization, and web security best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Security Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Security Exercises\", url: \"https://jwt.io/introduction\" },\n          { type: \"interactive\", title: \"Security Guide\", url: \"https://owasp.org/www-project-top-ten/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"State Management & APIs 🔄\",\n        description: \"Learn Redux, API integration, data flow, and state management in complex applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Redux Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"State Management Exercises\", url: \"https://redux.js.org/tutorials/essentials/part-1-overview-concepts\" },\n          { type: \"interactive\", title: \"API Integration Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/API\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Testing & Quality 🧪\",\n        description: \"Learn Jest, React Testing Library, API testing, and ensure code quality in web applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Testing Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://testing-library.com/docs/react-testing-library/intro/\" },\n          { type: \"interactive\", title: \"Testing Guide\", url: \"https://jestjs.io/docs/getting-started\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Deployment & DevOps 🚀\",\n        description: \"Learn deployment strategies, Docker, CI/CD, and production deployment of web applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Deployment Tutorial\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Deployment Projects\", url: \"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" },\n          { type: \"interactive\", title: \"DevOps Guide\", url: \"https://docs.docker.com/get-started/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Performance Optimization ⚡\",\n        description: \"Learn frontend optimization, backend optimization, caching, and performance monitoring.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Performance Tutorial\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Optimization Exercises\", url: \"https://web.dev/performance/\" },\n          { type: \"interactive\", title: \"Performance Guide\", url: \"https://web.dev/performance/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Final Full-Stack Project 🌟\",\n        description: \"Build a complete full-stack web application with all modern features and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Full-Stack Project\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Ideas\", url: \"https://github.com/topics/full-stack\" },\n          { type: \"community\", title: \"Web Dev Community\", url: \"https://www.reddit.com/r/webdev/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of fullStackDevSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: fullStackDev.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 4. AI/ML Roadmap\n    console.log(\"🤖 Creating AI/ML Roadmap...\");\n    const aiMlRoadmap = await storage.createRoadmap({\n      title: \"Artificial Intelligence & Machine Learning\",\n      description: \"Dive into the world of AI and ML! Learn Python for data science, machine learning algorithms, deep learning, and build intelligent applications. Perfect for future AI engineers and data scientists.\",\n      category: \"Artificial Intelligence\",\n      difficulty: \"Intermediate\",\n      estimatedDuration: 20, // 20 weeks\n      createdBy: adminUser.id\n    });\n\n    const aiMlSteps = [\n      {\n        stepNumber: 1,\n        title: \"Python for Data Science 🐍\",\n        description: \"Master Python fundamentals for data science. Learn NumPy, Pandas, and data manipulation techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Data Science\", url: \"https://www.youtube.com/watch?v=LHBE6Q9XlzI\" },\n          { type: \"practice\", title: \"Kaggle Learn Python\", url: \"https://www.kaggle.com/learn/python\" },\n          { type: \"interactive\", title: \"Data Science Tutorial\", url: \"https://www.learnpython.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Data Analysis & Visualization 📊\",\n        description: \"Learn data exploration, statistical analysis, and create beautiful visualizations with Matplotlib and Seaborn.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Visualization\", url: \"https://www.youtube.com/watch?v=UO98lJQ3QGI\" },\n          { type: \"practice\", title: \"Kaggle Data Visualization\", url: \"https://www.kaggle.com/learn/data-visualization\" },\n          { type: \"interactive\", title: \"Visualization Guide\", url: \"https://seaborn.pydata.org/tutorial.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Machine Learning Fundamentals 🧠\",\n        description: \"Learn supervised vs unsupervised learning, training/testing data, and model evaluation techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"ML Introduction\", url: \"https://www.youtube.com/watch?v=ukzFI9rgwfU\" },\n          { type: \"practice\", title: \"Kaggle ML Course\", url: \"https://www.kaggle.com/learn/intro-to-machine-learning\" },\n          { type: \"interactive\", title: \"ML Guide\", url: \"https://scikit-learn.org/stable/tutorial/index.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Supervised Learning Algorithms 📈\",\n        description: \"Master linear regression, logistic regression, decision trees, and random forests for classification and regression.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Supervised Learning\", url: \"https://www.youtube.com/watch?v=8hly31xKli0\" },\n          { type: \"practice\", title: \"ML Algorithms Practice\", url: \"https://www.kaggle.com/learn/machine-learning\" },\n          { type: \"interactive\", title: \"Algorithm Guide\", url: \"https://scikit-learn.org/stable/supervised_learning.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Unsupervised Learning 🔍\",\n        description: \"Learn clustering algorithms, dimensionality reduction, and pattern discovery in unlabeled data.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Unsupervised Learning\", url: \"https://www.youtube.com/watch?v=4b5d3muHzm4\" },\n          { type: \"practice\", title: \"Clustering Exercises\", url: \"https://www.kaggle.com/learn/clustering\" },\n          { type: \"interactive\", title: \"Clustering Guide\", url: \"https://scikit-learn.org/stable/unsupervised_learning.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Deep Learning with TensorFlow 🧠\",\n        description: \"Introduction to neural networks, TensorFlow/Keras, and building deep learning models.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Deep Learning\", url: \"https://www.youtube.com/watch?v=aircAruvnKk\" },\n          { type: \"practice\", title: \"TensorFlow Tutorials\", url: \"https://www.tensorflow.org/tutorials\" },\n          { type: \"interactive\", title: \"Keras Guide\", url: \"https://keras.io/guides/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Natural Language Processing 🗣️\",\n        description: \"Learn text preprocessing, tokenization, word embeddings, and NLP applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"NLP Tutorial\", url: \"https://www.youtube.com/watch?v=oWVTO_69U4o\" },\n          { type: \"practice\", title: \"NLP Projects\", url: \"https://www.kaggle.com/learn/natural-language-processing\" },\n          { type: \"interactive\", title: \"NLP Guide\", url: \"https://www.nltk.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Computer Vision 👁️\",\n        description: \"Learn image processing, convolutional neural networks, and computer vision applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Computer Vision\", url: \"https://www.youtube.com/watch?v=aircAruvnKk\" },\n          { type: \"practice\", title: \"CV Projects\", url: \"https://www.kaggle.com/learn/computer-vision\" },\n          { type: \"interactive\", title: \"OpenCV Guide\", url: \"https://opencv.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Model Deployment & MLOps 🚀\",\n        description: \"Learn model deployment, monitoring, and MLOps practices for production AI systems.\",\n        resourceLinks: [\n          { type: \"video\", title: \"MLOps Tutorial\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Deployment Projects\", url: \"https://www.kaggle.com/learn/intro-to-deep-learning\" },\n          { type: \"interactive\", title: \"MLOps Guide\", url: \"https://ml-ops.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Final AI Project 🤖\",\n        description: \"Build a complete AI/ML project from data collection to model deployment and presentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"AI Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Projects\", url: \"https://www.kaggle.com/learn/data-science-project\" },\n          { type: \"community\", title: \"AI Community\", url: \"https://www.reddit.com/r/MachineLearning/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of aiMlSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: aiMlRoadmap.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 5. Data Science Roadmap\n    console.log(\"📊 Creating Data Science Roadmap...\");\n    const dataScienceRoadmap = await storage.createRoadmap({\n      title: \"Data Science & Analytics\",\n      description: \"Become a data scientist! Learn data analysis, statistics, machine learning, and data visualization. Master the complete data science workflow from data collection to insights.\",\n      category: \"Data Science\",\n      difficulty: \"Intermediate\",\n      estimatedDuration: 18, // 18 weeks\n      createdBy: adminUser.id\n    });\n\n    const dataScienceSteps = [\n      {\n        stepNumber: 1,\n        title: \"Data Science Environment Setup 🛠️\",\n        description: \"Set up your data science environment with Python, Jupyter notebooks, and essential libraries.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Science Setup\", url: \"https://www.youtube.com/watch?v=5JnMutdy6Fw\" },\n          { type: \"practice\", title: \"Jupyter Tutorial\", url: \"https://jupyter.org/documentation\" },\n          { type: \"interactive\", title: \"Environment Guide\", url: \"https://docs.anaconda.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Data Collection & Cleaning 🧹\",\n        description: \"Learn data collection methods, data cleaning techniques, and handling missing values.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Cleaning\", url: \"https://www.youtube.com/watch?v=8o2s9vXa0Qk\" },\n          { type: \"practice\", title: \"Data Cleaning Project\", url: \"https://www.kaggle.com/learn/data-cleaning\" },\n          { type: \"interactive\", title: \"Cleaning Guide\", url: \"https://pandas.pydata.org/docs/user_guide/missing_data.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Exploratory Data Analysis (EDA) 🔍\",\n        description: \"Master EDA techniques, data profiling, correlation analysis, and comprehensive data exploration.\",\n        resourceLinks: [\n          { type: \"video\", title: \"EDA Tutorial\", url: \"https://www.youtube.com/watch?v=xi0vhXFPegw\" },\n          { type: \"practice\", title: \"EDA Project\", url: \"https://www.kaggle.com/learn/exploratory-data-analysis\" },\n          { type: \"interactive\", title: \"EDA Guide\", url: \"https://pandas-profiling.github.io/pandas-profiling/docs/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Statistical Analysis 📈\",\n        description: \"Learn descriptive statistics, hypothesis testing, and statistical modeling techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Statistics Tutorial\", url: \"https://www.youtube.com/watch?v=xxpc-HPKN28\" },\n          { type: \"practice\", title: \"Statistical Thinking\", url: \"https://www.kaggle.com/learn/statistical-thinking\" },\n          { type: \"interactive\", title: \"Stats Guide\", url: \"https://docs.scipy.org/doc/scipy/reference/stats.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Data Visualization 📊\",\n        description: \"Master data visualization with Matplotlib, Seaborn, and Plotly. Create compelling data stories.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Visualization\", url: \"https://www.youtube.com/watch?v=UO98lJQ3QGI\" },\n          { type: \"practice\", title: \"Viz Projects\", url: \"https://www.kaggle.com/learn/data-visualization\" },\n          { type: \"interactive\", title: \"Viz Guide\", url: \"https://seaborn.pydata.org/tutorial.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Machine Learning for Data Science 🤖\",\n        description: \"Learn supervised and unsupervised learning algorithms for data science applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"ML for Data Science\", url: \"https://www.youtube.com/watch?v=ukzFI9rgwfU\" },\n          { type: \"practice\", title: \"ML Projects\", url: \"https://www.kaggle.com/learn/intro-to-machine-learning\" },\n          { type: \"interactive\", title: \"ML Guide\", url: \"https://scikit-learn.org/stable/tutorial/index.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Feature Engineering 🔧\",\n        description: \"Learn feature creation, transformation, selection, and engineering techniques for better models.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Feature Engineering\", url: \"https://www.youtube.com/watch?v=z0sJ6xV8ba0\" },\n          { type: \"practice\", title: \"Feature Engineering\", url: \"https://www.kaggle.com/learn/feature-engineering\" },\n          { type: \"interactive\", title: \"Engineering Guide\", url: \"https://scikit-learn.org/stable/modules/feature_selection.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Time Series Analysis ⏰\",\n        description: \"Learn time series data handling, forecasting, and temporal pattern analysis.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Time Series\", url: \"https://www.youtube.com/watch?v=UFuo7EHI8zc\" },\n          { type: \"practice\", title: \"Time Series Project\", url: \"https://www.kaggle.com/learn/time-series\" },\n          { type: \"interactive\", title: \"Time Series Guide\", url: \"https://pandas.pydata.org/docs/user_guide/timeseries.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Big Data & Cloud Computing ☁️\",\n        description: \"Learn big data tools, cloud platforms, and scalable data processing techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Big Data Tutorial\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Cloud Projects\", url: \"https://www.kaggle.com/learn/intro-to-deep-learning\" },\n          { type: \"interactive\", title: \"Big Data Guide\", url: \"https://spark.apache.org/docs/latest/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Final Data Science Project 📊\",\n        description: \"Complete end-to-end data science project from data collection to insights and presentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Science Project\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Project\", url: \"https://www.kaggle.com/learn/data-science-project\" },\n          { type: \"community\", title: \"Data Science Community\", url: \"https://www.reddit.com/r/datascience/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of dataScienceSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: dataScienceRoadmap.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 6. Advanced Python Roadmap\n    console.log(\"🐍 Creating Advanced Python Roadmap...\");\n    const advancedPythonRoadmap = await storage.createRoadmap({\n      title: \"Advanced Python Development\",\n      description: \"Take your Python skills to the next level! Learn advanced concepts, design patterns, performance optimization, and build enterprise-level applications. Perfect for experienced developers.\",\n      category: \"Programming\",\n      difficulty: \"Advanced\",\n      estimatedDuration: 14, // 14 weeks\n      createdBy: adminUser.id\n    });\n\n    const advancedPythonSteps = [\n      {\n        stepNumber: 1,\n        title: \"Advanced Python Features 🚀\",\n        description: \"Master decorators, generators, context managers, and advanced Python language features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Python\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Advanced Exercises\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"interactive\", title: \"Advanced Guide\", url: \"https://docs.python.org/3/tutorial/classes.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Design Patterns & Architecture 🏗️\",\n        description: \"Learn design patterns, SOLID principles, and architectural patterns for scalable Python applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Design Patterns\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Pattern Exercises\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"interactive\", title: \"Patterns Guide\", url: \"https://refactoring.guru/design-patterns\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Performance Optimization ⚡\",\n        description: \"Learn profiling, optimization techniques, memory management, and high-performance Python programming.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Performance\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Performance Exercises\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"interactive\", title: \"Optimization Guide\", url: \"https://docs.python.org/3/library/profile.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Concurrency & Parallelism 🔄\",\n        description: \"Master threading, multiprocessing, async/await, and concurrent programming in Python.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Concurrency\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Concurrency Exercises\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"interactive\", title: \"Concurrency Guide\", url: \"https://docs.python.org/3/library/asyncio.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Web Frameworks & APIs 🌐\",\n        description: \"Learn Django, FastAPI, Flask, and build scalable web applications and REST APIs.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Web Frameworks\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Web Projects\", url: \"https://docs.djangoproject.com/\" },\n          { type: \"interactive\", title: \"Framework Guide\", url: \"https://fastapi.tiangolo.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Testing & Quality Assurance 🧪\",\n        description: \"Master pytest, test-driven development, mocking, and ensure code quality in Python applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Testing\", url: \"https://www.youtube.com/watch?v=6tNS--WetLI\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://docs.pytest.org/\" },\n          { type: \"interactive\", title: \"Testing Guide\", url: \"https://docs.pytest.org/en/stable/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Package Development & Distribution 📦\",\n        description: \"Learn to create, package, and distribute Python libraries and applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Packaging\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Package Projects\", url: \"https://packaging.python.org/\" },\n          { type: \"interactive\", title: \"Packaging Guide\", url: \"https://packaging.python.org/tutorials/packaging-projects/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"DevOps & Deployment 🚀\",\n        description: \"Learn Docker, CI/CD, cloud deployment, and production deployment strategies for Python applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python DevOps\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"DevOps Projects\", url: \"https://docs.docker.com/get-started/\" },\n          { type: \"interactive\", title: \"Deployment Guide\", url: \"https://devcenter.heroku.com/articles/getting-started-with-python\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Microservices & Architecture 🏢\",\n        description: \"Learn microservices architecture, service communication, and scalable application design.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Microservices\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"Architecture Projects\", url: \"https://microservices.io/\" },\n          { type: \"interactive\", title: \"Architecture Guide\", url: \"https://microservices.io/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Final Advanced Project 🎯\",\n        description: \"Build a complete enterprise Python application with all advanced features and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Enterprise Projects\", url: \"https://github.com/topics/python-enterprise\" },\n          { type: \"community\", title: \"Python Community\", url: \"https://www.reddit.com/r/Python/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of advancedPythonSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: advancedPythonRoadmap.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 7. Web Development Roadmap\n    console.log(\"🌐 Creating Web Development Roadmap...\");\n    const webDevRoadmap = await storage.createRoadmap({\n      title: \"Modern Web Development\",\n      description: \"Master modern web development! Learn HTML5, CSS3, JavaScript, React, Vue.js, and build responsive, interactive web applications. Perfect for aspiring frontend and full-stack developers.\",\n      category: \"Web Development\",\n      difficulty: \"Beginner\",\n      estimatedDuration: 12, // 12 weeks\n      createdBy: adminUser.id\n    });\n\n    const webDevSteps = [\n      {\n        stepNumber: 1,\n        title: \"HTML5 & Semantic Markup 📝\",\n        description: \"Learn modern HTML5, semantic elements, accessibility, and create well-structured web pages.\",\n        resourceLinks: [\n          { type: \"video\", title: \"HTML5 Tutorial\", url: \"https://www.youtube.com/watch?v=qz0aGYrrlhU\" },\n          { type: \"practice\", title: \"HTML Exercises\", url: \"https://www.freecodecamp.org/learn/responsive-web-design/\" },\n          { type: \"interactive\", title: \"HTML Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/HTML\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"CSS3 & Styling 🎨\",\n        description: \"Master CSS3, flexbox, grid, animations, and create beautiful, responsive designs.\",\n        resourceLinks: [\n          { type: \"video\", title: \"CSS3 Tutorial\", url: \"https://www.youtube.com/watch?v=1Rs2ND1ryYc\" },\n          { type: \"practice\", title: \"CSS Grid Garden\", url: \"https://cssgridgarden.com/\" },\n          { type: \"interactive\", title: \"Flexbox Froggy\", url: \"https://flexboxfroggy.com/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"JavaScript Fundamentals ⚡\",\n        description: \"Learn modern JavaScript, ES6+ features, DOM manipulation, and interactive web development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Tutorial\", url: \"https://www.youtube.com/watch?v=hdI2bqOjy3c\" },\n          { type: \"practice\", title: \"JavaScript Exercises\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"interactive\", title: \"JS Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Responsive Design 📱\",\n        description: \"Learn responsive design principles, media queries, mobile-first approach, and cross-device compatibility.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Responsive Design\", url: \"https://www.youtube.com/watch?v=srvUrASLq0\" },\n          { type: \"practice\", title: \"Responsive Projects\", url: \"https://www.freecodecamp.org/learn/responsive-web-design/\" },\n          { type: \"interactive\", title: \"Responsive Guide\", url: \"https://web.dev/responsive-web-design-basics/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"React Development ⚛️\",\n        description: \"Master React, components, hooks, state management, and modern frontend development patterns.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"React Exercises\", url: \"https://reactjs.org/tutorial/tutorial.html\" },\n          { type: \"interactive\", title: \"React Guide\", url: \"https://reactjs.org/docs/getting-started.html\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Vue.js Alternative 🟢\",\n        description: \"Learn Vue.js as an alternative to React. Understand component-based architecture and modern frameworks.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Vue.js Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Vue.js Projects\", url: \"https://vuejs.org/tutorial/\" },\n          { type: \"interactive\", title: \"Vue Guide\", url: \"https://vuejs.org/guide/\" }\n        ],\n        isOptional: true\n      },\n      {\n        stepNumber: 7,\n        title: \"State Management 🔄\",\n        description: \"Learn Redux, Vuex, state management patterns, and managing complex application state.\",\n        resourceLinks: [\n          { type: \"video\", title: \"State Management\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Redux Exercises\", url: \"https://redux.js.org/tutorials/essentials/part-1-overview-concepts\" },\n          { type: \"interactive\", title: \"State Guide\", url: \"https://vuex.vuejs.org/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"API Integration 🌐\",\n        description: \"Learn REST APIs, GraphQL, fetch API, and integrating with backend services.\",\n        resourceLinks: [\n          { type: \"video\", title: \"API Integration\", url: \"https://www.youtube.com/watch?v=Oive66jrwBs\" },\n          { type: \"practice\", title: \"API Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"interactive\", title: \"API Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/API\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Testing & Quality 🧪\",\n        description: \"Learn Jest, Vue Test Utils, testing strategies, and ensure code quality in web applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Testing\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://testing-library.com/docs/react-testing-library/intro/\" },\n          { type: \"interactive\", title: \"Testing Guide\", url: \"https://jestjs.io/docs/getting-started\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Performance & Optimization ⚡\",\n        description: \"Learn web performance optimization, lazy loading, code splitting, and modern optimization techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Performance\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Performance Projects\", url: \"https://web.dev/performance/\" },\n          { type: \"interactive\", title: \"Performance Guide\", url: \"https://web.dev/performance/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 11,\n        title: \"Build Tools & Workflow 🛠️\",\n        description: \"Learn Webpack, Vite, npm, modern build tools, and development workflows.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Build Tools\", url: \"https://www.youtube.com/watch?v=MpGLUVbqoYQ\" },\n          { type: \"practice\", title: \"Build Tool Setup\", url: \"https://webpack.js.org/guides/getting-started/\" },\n          { type: \"interactive\", title: \"Vite Guide\", url: \"https://vitejs.dev/guide/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 12,\n        title: \"Final Web Project 🌟\",\n        description: \"Build a complete modern web application with all features and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Projects\", url: \"https://github.com/topics/web-development\" },\n          { type: \"community\", title: \"Web Dev Community\", url: \"https://www.reddit.com/r/webdev/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of webDevSteps) {\n      await storage.createRoadmapStep({\n        roadmapId: webDevRoadmap.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    // 8. Cybersecurity Roadmap\n    console.log(\"🔒 Creating Cybersecurity Roadmap...\");\n    const cybersecurityRoadmap = await storage.createRoadmap({\n      title: \"Cybersecurity & Ethical Hacking\",\n      description: \"Protect the digital world! Learn cybersecurity fundamentals, ethical hacking, network security, and become a cybersecurity professional. Perfect for aspiring security experts and ethical hackers.\",\n      category: \"Cybersecurity\",\n      difficulty: \"Intermediate\",\n      estimatedDuration: 16, // 16 weeks\n      createdBy: adminUser.id\n    });\n\n    const cybersecuritySteps = [\n      {\n        stepNumber: 1,\n        title: \"Cybersecurity Fundamentals 🛡️\",\n        description: \"Learn the basics of cybersecurity, threat landscape, security principles, and the CIA triad.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Cybersecurity Basics\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Security Fundamentals\", url: \"https://www.coursera.org/learn/intro-cyber-security\" },\n          { type: \"interactive\", title: \"Security Guide\", url: \"https://www.cybrary.it/course/cyber-security-fundamentals/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 2,\n        title: \"Network Security 🌐\",\n        description: \"Learn network protocols, firewalls, intrusion detection, and network security best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Network Security\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Network Exercises\", url: \"https://www.coursera.org/learn/network-security\" },\n          { type: \"interactive\", title: \"Network Guide\", url: \"https://www.cybrary.it/course/network-security/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 3,\n        title: \"Operating System Security 💻\",\n        description: \"Learn Windows and Linux security, user management, file permissions, and system hardening.\",\n        resourceLinks: [\n          { type: \"video\", title: \"OS Security\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"OS Security Labs\", url: \"https://www.coursera.org/learn/operating-system-security\" },\n          { type: \"interactive\", title: \"OS Security Guide\", url: \"https://www.cybrary.it/course/operating-system-security/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 4,\n        title: \"Web Application Security 🌐\",\n        description: \"Learn OWASP Top 10, SQL injection, XSS, CSRF, and web application security testing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web App Security\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Web Security Labs\", url: \"https://portswigger.net/web-security\" },\n          { type: \"interactive\", title: \"OWASP Guide\", url: \"https://owasp.org/www-project-top-ten/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 5,\n        title: \"Cryptography & Encryption 🔐\",\n        description: \"Learn encryption algorithms, digital signatures, certificates, and cryptographic protocols.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Cryptography Tutorial\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Crypto Exercises\", url: \"https://www.coursera.org/learn/cryptography\" },\n          { type: \"interactive\", title: \"Crypto Guide\", url: \"https://www.cybrary.it/course/cryptography/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 6,\n        title: \"Ethical Hacking & Penetration Testing 🔍\",\n        description: \"Learn ethical hacking methodologies, penetration testing, vulnerability assessment, and security testing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Ethical Hacking\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Hacking Labs\", url: \"https://www.hackthebox.eu/\" },\n          { type: \"interactive\", title: \"Hacking Guide\", url: \"https://www.cybrary.it/course/ethical-hacking/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 7,\n        title: \"Malware Analysis & Reverse Engineering 🦠\",\n        description: \"Learn malware analysis techniques, reverse engineering, and understanding malicious software.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Malware Analysis\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Malware Labs\", url: \"https://www.coursera.org/learn/malware-analysis\" },\n          { type: \"interactive\", title: \"Analysis Guide\", url: \"https://www.cybrary.it/course/malware-analysis/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 8,\n        title: \"Incident Response & Forensics 🔍\",\n        description: \"Learn digital forensics, incident response procedures, and evidence collection techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Digital Forensics\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Forensics Labs\", url: \"https://www.coursera.org/learn/digital-forensics\" },\n          { type: \"interactive\", title: \"Forensics Guide\", url: \"https://www.cybrary.it/course/digital-forensics/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 9,\n        title: \"Security Tools & Technologies 🛠️\",\n        description: \"Learn security tools, SIEM, IDS/IPS, vulnerability scanners, and security automation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Security Tools\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Tool Labs\", url: \"https://www.coursera.org/learn/security-tools\" },\n          { type: \"interactive\", title: \"Tools Guide\", url: \"https://www.cybrary.it/course/security-tools/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 10,\n        title: \"Cloud Security ☁️\",\n        description: \"Learn cloud security principles, AWS/Azure security, and cloud-native security practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Cloud Security\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Cloud Security Labs\", url: \"https://www.coursera.org/learn/cloud-security\" },\n          { type: \"interactive\", title: \"Cloud Security Guide\", url: \"https://www.cybrary.it/course/cloud-security/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 11,\n        title: \"Compliance & Risk Management 📋\",\n        description: \"Learn security frameworks, compliance standards, risk assessment, and security governance.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Risk Management\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Compliance Labs\", url: \"https://www.coursera.org/learn/risk-management\" },\n          { type: \"interactive\", title: \"Compliance Guide\", url: \"https://www.cybrary.it/course/risk-management/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 12,\n        title: \"Security Operations Center (SOC) 🏢\",\n        description: \"Learn SOC operations, threat hunting, security monitoring, and incident management.\",\n        resourceLinks: [\n          { type: \"video\", title: \"SOC Operations\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"SOC Labs\", url: \"https://www.coursera.org/learn/soc-operations\" },\n          { type: \"interactive\", title: \"SOC Guide\", url: \"https://www.cybrary.it/course/soc-operations/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 13,\n        title: \"Threat Intelligence & Analysis 🕵️\",\n        description: \"Learn threat intelligence, threat modeling, and security analysis techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Threat Intelligence\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Threat Analysis Labs\", url: \"https://www.coursera.org/learn/threat-intelligence\" },\n          { type: \"interactive\", title: \"Threat Guide\", url: \"https://www.cybrary.it/course/threat-intelligence/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 14,\n        title: \"Security Automation & Scripting 🤖\",\n        description: \"Learn security automation, Python for security, and scripting for security tasks.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Security Automation\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Automation Labs\", url: \"https://www.coursera.org/learn/security-automation\" },\n          { type: \"interactive\", title: \"Automation Guide\", url: \"https://www.cybrary.it/course/security-automation/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 15,\n        title: \"Mobile Security 📱\",\n        description: \"Learn mobile security, Android/iOS security, and mobile application security testing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Mobile Security\", url: \"https://www.youtube.com/watch?v=inWWhr5tnEA\" },\n          { type: \"practice\", title: \"Mobile Security Labs\", url: \"https://www.coursera.org/learn/mobile-security\" },\n          { type: \"interactive\", title: \"Mobile Security Guide\", url: \"https://www.cybrary.it/course/mobile-security/\" }\n        ],\n        isOptional: false\n      },\n      {\n        stepNumber: 16,\n        title: \"Final Cybersecurity Project 🛡️\",\n        description: \"Complete a comprehensive cybersecurity project demonstrating all learned skills and knowledge.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Cybersecurity Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Projects\", url: \"https://github.com/topics/cybersecurity\" },\n          { type: \"community\", title: \"Cybersecurity Community\", url: \"https://www.reddit.com/r/cybersecurity/\" }\n        ],\n        isOptional: false\n      }\n    ];\n\n    for (const stepData of cybersecuritySteps) {\n      await storage.createRoadmapStep({\n        roadmapId: cybersecurityRoadmap.id,\n        stepNumber: stepData.stepNumber,\n        title: stepData.title,\n        description: stepData.description,\n        resourceLinks: stepData.resourceLinks,\n        isOptional: stepData.isOptional\n      });\n    }\n\n    console.log(\"🎉 All roadmaps created successfully!\");\n    console.log(\"\\n📊 Summary:\");\n    console.log(\"✅ 8 comprehensive roadmaps created:\");\n    console.log(\"  1. 🐍 Python Fundamentals for Beginners (8 weeks)\");\n    console.log(\"  2. ☕ Java Programming Mastery (12 weeks)\");\n    console.log(\"  3. 🌐 Full Stack Web Development (16 weeks)\");\n    console.log(\"  4. 🤖 Artificial Intelligence & Machine Learning (20 weeks)\");\n    console.log(\"  5. 📊 Data Science & Analytics (18 weeks)\");\n    console.log(\"  6. 🐍 Advanced Python Development (14 weeks)\");\n    console.log(\"  7. 🌐 Modern Web Development (12 weeks)\");\n    console.log(\"  8. 🔒 Cybersecurity & Ethical Hacking (16 weeks)\");\n    console.log(\"\\n🚀 Features included:\");\n    console.log(\"  ✅ Gen Z-friendly content with emojis and engaging descriptions\");\n    console.log(\"  ✅ Progressive difficulty levels (Beginner → Intermediate → Advanced)\");\n    console.log(\"  ✅ Comprehensive resource links (videos, practice, interactive)\");\n    console.log(\"  ✅ Real-world projects and portfolio building\");\n    console.log(\"  ✅ Community engagement and career guidance\");\n    console.log(\"  ✅ Industry-relevant technologies and frameworks\");\n    console.log(\"\\n💡 Next steps:\");\n    console.log(\"  1. Run: npm run db:push\");\n    console.log(\"  2. Run: npm run db:seed:roadmaps\");\n    console.log(\"  3. Start the application: npm run dev\");\n    console.log(\"  4. Explore the roadmaps in the application!\");\n\n  } catch (error) {\n    console.error(\"❌ Error seeding roadmaps:\", error);\n    throw error;\n  }\n}\n\n// Run the seeding if this file is executed directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  seedRoadmaps()\n    .then(() => {\n      console.log(\"✅ Roadmap seeding completed\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"❌ Roadmap seeding failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { seedRoadmaps };","size_bytes":61694},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"server/routes/health.ts":{"content":"import { Request, Response } from 'express';\nimport { storage } from '../storage';\nimport { logger } from '../middleware/logger';\n\ninterface HealthCheck {\n  status: 'healthy' | 'degraded' | 'unhealthy';\n  timestamp: string;\n  uptime: number;\n  version: string;\n  environment: string;\n  services: {\n    database: {\n      status: 'connected' | 'disconnected' | 'error';\n      responseTime?: number;\n    };\n    memory: {\n      used: number;\n      total: number;\n      percentage: number;\n    };\n    disk: {\n      used: number;\n      total: number;\n      percentage: number;\n    };\n  };\n}\n\n// Basic health check\nexport const healthCheck = async (req: Request, res: Response) => {\n  const startTime = Date.now();\n  \n  try {\n    // Check database connection\n    const dbStartTime = Date.now();\n    await storage.getAllUsers();\n    const dbResponseTime = Date.now() - dbStartTime;\n    \n    // Get memory usage\n    const memoryUsage = process.memoryUsage();\n    const totalMemory = memoryUsage.heapTotal;\n    const usedMemory = memoryUsage.heapUsed;\n    const memoryPercentage = (usedMemory / totalMemory) * 100;\n    \n    // Get disk usage (simplified)\n    const diskUsage = {\n      used: 0, // This would need a proper disk usage library\n      total: 0,\n      percentage: 0\n    };\n    \n    const health: HealthCheck = {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      version: process.env.npm_package_version || '1.0.0',\n      environment: process.env.NODE_ENV || 'development',\n      services: {\n        database: {\n          status: 'connected',\n          responseTime: dbResponseTime\n        },\n        memory: {\n          used: usedMemory,\n          total: totalMemory,\n          percentage: memoryPercentage\n        },\n        disk: diskUsage\n      }\n    };\n    \n    // Log health check\n    logger.info('Health check performed', {\n      status: health.status,\n      responseTime: Date.now() - startTime,\n      databaseResponseTime: dbResponseTime,\n      memoryUsage: memoryPercentage\n    });\n    \n    res.status(200).json(health);\n  } catch (error) {\n    logger.error('Health check failed:', error);\n    \n    const health: HealthCheck = {\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      uptime: process.uptime(),\n      version: process.env.npm_package_version || '1.0.0',\n      environment: process.env.NODE_ENV || 'development',\n      services: {\n        database: {\n          status: 'error'\n        },\n        memory: {\n          used: process.memoryUsage().heapUsed,\n          total: process.memoryUsage().heapTotal,\n          percentage: 0\n        },\n        disk: {\n          used: 0,\n          total: 0,\n          percentage: 0\n        }\n      }\n    };\n    \n    res.status(503).json(health);\n  }\n};\n\n// Detailed health check\nexport const detailedHealthCheck = async (req: Request, res: Response) => {\n  const startTime = Date.now();\n  \n  try {\n    // Database health\n    const dbStartTime = Date.now();\n    const userCount = await storage.getAllUsers();\n    const dbResponseTime = Date.now() - dbStartTime;\n    \n    // Memory health\n    const memoryUsage = process.memoryUsage();\n    const totalMemory = memoryUsage.heapTotal;\n    const usedMemory = memoryUsage.heapUsed;\n    const memoryPercentage = (usedMemory / totalMemory) * 100;\n    \n    // CPU usage (simplified)\n    const cpuUsage = process.cpuUsage();\n    \n    // System info\n    const systemInfo = {\n      platform: process.platform,\n      arch: process.arch,\n      nodeVersion: process.version,\n      pid: process.pid,\n      uptime: process.uptime()\n    };\n    \n    const detailedHealth = {\n      status: 'healthy',\n      timestamp: new Date().toISOString(),\n      system: systemInfo,\n      services: {\n        database: {\n          status: 'connected',\n          responseTime: dbResponseTime,\n          userCount: userCount.length\n        },\n        memory: {\n          used: usedMemory,\n          total: totalMemory,\n          percentage: memoryPercentage,\n          external: memoryUsage.external,\n          rss: memoryUsage.rss\n        },\n        cpu: {\n          user: cpuUsage.user,\n          system: cpuUsage.system\n        }\n      },\n      performance: {\n        responseTime: Date.now() - startTime,\n        databaseResponseTime: dbResponseTime\n      }\n    };\n    \n    logger.info('Detailed health check performed', detailedHealth);\n    \n    res.status(200).json(detailedHealth);\n  } catch (error) {\n    logger.error('Detailed health check failed:', error);\n    res.status(503).json({\n      status: 'unhealthy',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Readiness check\nexport const readinessCheck = async (req: Request, res: Response) => {\n  try {\n    // Check if all required services are ready\n    await storage.getAllUsers();\n    \n    res.status(200).json({\n      status: 'ready',\n      timestamp: new Date().toISOString()\n    });\n  } catch (error) {\n    logger.error('Readiness check failed:', error);\n    res.status(503).json({\n      status: 'not ready',\n      error: error instanceof Error ? error.message : 'Unknown error',\n      timestamp: new Date().toISOString()\n    });\n  }\n};\n\n// Liveness check\nexport const livenessCheck = (req: Request, res: Response) => {\n  res.status(200).json({\n    status: 'alive',\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime()\n  });\n};\n\n// Metrics endpoint\nexport const metrics = (req: Request, res: Response) => {\n  const memoryUsage = process.memoryUsage();\n  const cpuUsage = process.cpuUsage();\n  \n  const metrics = {\n    timestamp: new Date().toISOString(),\n    uptime: process.uptime(),\n    memory: {\n      rss: memoryUsage.rss,\n      heapTotal: memoryUsage.heapTotal,\n      heapUsed: memoryUsage.heapUsed,\n      external: memoryUsage.external\n    },\n    cpu: {\n      user: cpuUsage.user,\n      system: cpuUsage.system\n    },\n    process: {\n      pid: process.pid,\n      version: process.version,\n      platform: process.platform,\n      arch: process.arch\n    }\n  };\n  \n  res.status(200).json(metrics);\n};\n","size_bytes":6124},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/pages/RoadmapDetail.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Clock, Target, BookOpen, ExternalLink, CheckCircle } from \"lucide-react\";\nimport type { Roadmap, RoadmapStep } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\ninterface RoadmapWithSteps {\n  roadmap: Roadmap;\n  steps: RoadmapStep[];\n}\n\nexport default function RoadmapDetail() {\n  const [, params] = useRoute(\"/roadmaps/:id\");\n  const roadmapId = params?.id;\n\n  const { data: roadmapData, isLoading } = useQuery<RoadmapWithSteps>({\n    queryKey: [`/api/roadmaps/${roadmapId}`],\n    enabled: !!roadmapId,\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading roadmap...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!roadmapData) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <BookOpen className=\"h-12 w-12 mx-auto text-muted-foreground opacity-50\" />\n          <p className=\"text-muted-foreground\">Roadmap not found</p>\n        </div>\n      </div>\n    );\n  }\n\n  const { roadmap, steps } = roadmapData;\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty.toLowerCase()) {\n      case 'beginner':\n        return 'bg-green-100 text-green-800';\n      case 'intermediate':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'advanced':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category.toLowerCase()) {\n      case 'web development':\n        return '🌐';\n      case 'data science':\n        return '📊';\n      case 'mobile development':\n        return '📱';\n      case 'devops':\n        return '⚙️';\n      case 'cybersecurity':\n        return '🔒';\n      default:\n        return '📚';\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex items-start justify-between\">\n        <div className=\"space-y-4\">\n          <div className=\"flex items-center gap-3\">\n            <span className=\"text-4xl\">{getCategoryIcon(roadmap.category)}</span>\n            <div>\n              <h1 className=\"text-4xl font-bold tracking-tight\">{roadmap.title}</h1>\n              <p className=\"text-muted-foreground mt-2\">{roadmap.description}</p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-4\">\n            <Badge className={getDifficultyColor(roadmap.difficulty)}>\n              {roadmap.difficulty}\n            </Badge>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Clock className=\"h-4 w-4\" />\n              <span>{roadmap.estimatedDuration} weeks</span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              <Target className=\"h-4 w-4\" />\n              <span>{roadmap.category}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n        <div className=\"lg:col-span-2 space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <BookOpen className=\"h-5 w-5\" />\n                Learning Path\n              </CardTitle>\n              <CardDescription>\n                Follow these steps in order to master {roadmap.title}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {steps.map((step, index) => (\n                  <div\n                    key={step.id}\n                    className=\"flex items-start gap-4 p-4 border rounded-lg hover:bg-muted/50 transition-colors\"\n                    data-testid={`roadmap-step-${step.stepNumber}`}\n                  >\n                    <div className=\"flex-shrink-0 w-8 h-8 bg-primary text-primary-foreground rounded-full flex items-center justify-center text-sm font-semibold\">\n                      {step.stepNumber}\n                    </div>\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"flex items-start justify-between\">\n                        <h3 className=\"font-semibold\">{step.title}</h3>\n                        {step.isOptional && (\n                          <Badge variant=\"outline\" className=\"text-xs\">\n                            Optional\n                          </Badge>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">\n                        {step.description}\n                      </p>\n                      {step.resourceLinks && step.resourceLinks.length > 0 && (\n                        <div className=\"space-y-2\">\n                          <p className=\"text-sm font-medium\">Resources:</p>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {step.resourceLinks.map((link, linkIndex) => (\n                              <Button\n                                key={linkIndex}\n                                variant=\"outline\"\n                                size=\"sm\"\n                                className=\"text-xs\"\n                                onClick={() => window.open(link.url, '_blank')}\n                              >\n                                <ExternalLink className=\"h-3 w-3 mr-1\" />\n                                {link.title}\n                              </Button>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Roadmap Overview</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-muted-foreground\">Total Steps</span>\n                  <span className=\"font-medium\">{steps.length}</span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-muted-foreground\">Optional Steps</span>\n                  <span className=\"font-medium\">\n                    {steps.filter(step => step.isOptional).length}\n                  </span>\n                </div>\n                <div className=\"flex justify-between text-sm\">\n                  <span className=\"text-muted-foreground\">Estimated Duration</span>\n                  <span className=\"font-medium\">{roadmap.estimatedDuration} weeks</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Progress</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between text-sm\">\n                  <span>Completed Steps</span>\n                  <span>0 / {steps.length}</span>\n                </div>\n                <Progress value={0} className=\"h-2\" />\n              </div>\n              <p className=\"text-xs text-muted-foreground\">\n                Start your learning journey by following the steps above\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":8118},"server/create-student.ts":{"content":"import \"dotenv/config\";\nimport { storage } from \"./storage\";\n\nasync function createStudentUser() {\n  try {\n    console.log(\"🎓 Creating a student user for testing...\");\n    \n    const studentUser = await storage.createUser({\n      email: \"student@lumoraed.com\",\n      name: \"Test Student\",\n      firebaseUid: \"student-test-123\",\n      role: \"student\"\n    });\n    \n    console.log(\"✅ Student user created:\", {\n      id: studentUser.id,\n      email: studentUser.email,\n      name: studentUser.name,\n      role: studentUser.role\n    });\n    \n    return studentUser;\n  } catch (error) {\n    console.error(\"❌ Error creating student user:\", error);\n    throw error;\n  }\n}\n\n// Run if called directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  createStudentUser()\n    .then(() => {\n      console.log(\"🎉 Student user creation completed!\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"💥 Student user creation failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { createStudentUser };\n","size_bytes":1038},"client/src/pages/Certifications.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Award, ExternalLink, Calendar } from \"lucide-react\";\nimport type { Certification } from \"@shared/schema\";\nimport { format } from \"date-fns\";\n\nexport default function Certifications() {\n  const { data: certifications, isLoading } = useQuery<Certification[]>({\n    queryKey: [\"/api/certifications\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading certifications...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-4xl font-bold tracking-tight\">Free Certifications</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          Discover free certification opportunities to boost your career\n        </p>\n      </div>\n\n      {certifications && certifications.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {certifications.map((cert) => (\n            <Card key={cert.id} className=\"flex flex-col\" data-testid={`cert-card-${cert.id}`}>\n              <CardHeader>\n                <div className=\"flex items-start justify-between gap-2 mb-2\">\n                  <div className=\"p-3 rounded-lg bg-primary/10\">\n                    <Award className=\"h-6 w-6 text-primary\" />\n                  </div>\n                  <Badge variant=\"secondary\">Free</Badge>\n                </div>\n                <CardTitle className=\"text-xl\">{cert.title}</CardTitle>\n                <CardDescription>{cert.provider}</CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-1 flex flex-col justify-between gap-4\">\n                <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                  <Calendar className=\"h-4 w-4\" />\n                  <span>Added {format(new Date(cert.dateAdded), \"MMM d, yyyy\")}</span>\n                </div>\n                <Button\n                  asChild\n                  className=\"w-full\"\n                  data-testid={`button-view-cert-${cert.id}`}\n                >\n                  <a href={cert.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    View Certification\n                    <ExternalLink className=\"h-4 w-4 ml-2\" />\n                  </a>\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <Award className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n            <p className=\"text-muted-foreground mb-4\">No certifications available yet</p>\n            <p className=\"text-sm text-muted-foreground\">\n              Check back soon for new certification opportunities\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":3268},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ThemeToggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useTheme } from \"@/contexts/ThemeContext\";\n\nexport function ThemeToggle() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      data-testid=\"button-theme-toggle\"\n    >\n      {theme === \"light\" ? (\n        <Moon className=\"h-5 w-5\" />\n      ) : (\n        <Sun className=\"h-5 w-5\" />\n      )}\n    </Button>\n  );\n}\n","size_bytes":503},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/pages/Roadmaps.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Clock, Users, Target, BookOpen } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\nimport type { Roadmap } from \"@shared/schema\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport default function Roadmaps() {\n  const [, setLocation] = useLocation();\n\n  const { data: roadmaps, isLoading } = useQuery<Roadmap[]>({\n    queryKey: [\"/api/roadmaps\"],\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center space-y-4\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n          <p className=\"text-muted-foreground\">Loading roadmaps...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const getDifficultyColor = (difficulty: string) => {\n    switch (difficulty.toLowerCase()) {\n      case 'beginner':\n        return 'bg-green-100 text-green-800';\n      case 'intermediate':\n        return 'bg-yellow-100 text-yellow-800';\n      case 'advanced':\n        return 'bg-red-100 text-red-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getCategoryIcon = (category: string) => {\n    switch (category.toLowerCase()) {\n      case 'web development':\n        return '🌐';\n      case 'data science':\n        return '📊';\n      case 'mobile development':\n        return '📱';\n      case 'devops':\n        return '⚙️';\n      case 'cybersecurity':\n        return '🔒';\n      default:\n        return '📚';\n    }\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h1 className=\"text-4xl font-bold tracking-tight\">Learning Roadmaps</h1>\n        <p className=\"text-muted-foreground mt-2\">\n          Structured learning paths to master new skills and technologies\n        </p>\n      </div>\n\n      {roadmaps && roadmaps.length > 0 ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {roadmaps.map((roadmap) => (\n            <Card\n              key={roadmap.id}\n              className=\"flex flex-col hover-elevate cursor-pointer\"\n              onClick={() => setLocation(`/roadmaps/${roadmap.id}`)}\n              data-testid={`roadmap-card-${roadmap.id}`}\n            >\n              <CardHeader>\n                <div className=\"flex items-start justify-between gap-2 mb-2\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-2xl\">{getCategoryIcon(roadmap.category)}</span>\n                    <CardTitle className=\"text-xl\">{roadmap.title}</CardTitle>\n                  </div>\n                  <Badge \n                    className={getDifficultyColor(roadmap.difficulty)}\n                    data-testid={`badge-difficulty-${roadmap.id}`}\n                  >\n                    {roadmap.difficulty}\n                  </Badge>\n                </div>\n                <CardDescription className=\"line-clamp-3\">\n                  {roadmap.description}\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-1\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Clock className=\"h-4 w-4\" />\n                    <span>{roadmap.estimatedDuration} weeks</span>\n                  </div>\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Target className=\"h-4 w-4\" />\n                    <span>{roadmap.category}</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <Card>\n          <CardContent className=\"text-center py-12\">\n            <BookOpen className=\"h-12 w-12 mx-auto mb-4 text-muted-foreground opacity-50\" />\n            <p className=\"text-muted-foreground mb-4\">No roadmaps available yet</p>\n            <p className=\"text-sm text-muted-foreground\">\n              Check back soon for new learning roadmaps\n            </p>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n","size_bytes":4352},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1877},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/contexts/AuthContext.tsx":{"content":"import { createContext, useContext, useState, useEffect, ReactNode } from \"react\";\nimport { auth, onAuthChange, signOut as firebaseSignOut, type FirebaseUser } from \"@/lib/firebase\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport type { User } from \"@shared/schema\";\n\ninterface AuthContextType {\n  firebaseUser: FirebaseUser | null;\n  user: User | null;\n  loading: boolean;\n  signOut: () => Promise<void>;\n  checkSessionAuth: () => Promise<boolean>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [firebaseUser, setFirebaseUser] = useState<FirebaseUser | null>(null);\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const checkSessionAuth = async () => {\n    try {\n      // Check if we have a session-based authentication\n      const response = await fetch('/api/dashboard', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      \n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n        setFirebaseUser(null); // Clear Firebase user since we're using session\n        return true;\n      }\n    } catch (error) {\n      console.log(\"No session authentication found\");\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      // First check for session-based authentication\n      const hasSession = await checkSessionAuth();\n      \n      if (!hasSession) {\n        // Fall back to Firebase authentication\n        const unsubscribe = onAuthChange(async (fbUser) => {\n          setFirebaseUser(fbUser);\n          \n          if (fbUser) {\n            try {\n              const userData = await apiRequest<User>(\"POST\", \"/api/auth/verify\", { \n                email: fbUser.email,\n                name: fbUser.displayName || fbUser.email?.split(\"@\")[0] || \"User\",\n                firebaseUid: fbUser.uid,\n              });\n              setUser(userData);\n            } catch (error) {\n              console.error(\"Error verifying user:\", error);\n              setUser(null);\n            }\n          } else {\n            setUser(null);\n          }\n          \n          setLoading(false);\n        });\n\n        return () => unsubscribe();\n      } else {\n        setLoading(false);\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const signOut = async () => {\n    try {\n      // Try session logout first\n      await fetch('/api/auth/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.log(\"Session logout failed, trying Firebase logout\");\n    }\n    \n    // Also try Firebase logout\n    await firebaseSignOut();\n    setUser(null);\n    setFirebaseUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ firebaseUser, user, loading, signOut, checkSessionAuth }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n","size_bytes":3150},"client/src/lib/firebase.ts":{"content":"import { initializeApp, type FirebaseApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup, signInWithEmailAndPassword, createUserWithEmailAndPassword, signOut as firebaseSignOut, onAuthStateChanged, User as FirebaseUser, type Auth } from \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: import.meta.env.VITE_FIREBASE_API_KEY || \"demo-api-key\",\n  authDomain: `${import.meta.env.VITE_FIREBASE_PROJECT_ID || \"demo-project\"}.firebaseapp.com`,\n  projectId: import.meta.env.VITE_FIREBASE_PROJECT_ID || \"demo-project\",\n  storageBucket: `${import.meta.env.VITE_FIREBASE_PROJECT_ID || \"demo-project\"}.firebasestorage.app`,\n  appId: import.meta.env.VITE_FIREBASE_APP_ID || \"demo-app-id\",\n};\n\n// Check if Firebase is properly configured\nconst isFirebaseConfigured = import.meta.env.VITE_FIREBASE_API_KEY && \n  import.meta.env.VITE_FIREBASE_API_KEY !== \"demo-api-key\" &&\n  import.meta.env.VITE_FIREBASE_PROJECT_ID &&\n  import.meta.env.VITE_FIREBASE_PROJECT_ID !== \"demo-project\" &&\n  import.meta.env.VITE_FIREBASE_APP_ID &&\n  import.meta.env.VITE_FIREBASE_APP_ID !== \"demo-app-id\";\n\nlet app: FirebaseApp | null = null;\nlet auth: Auth | null = null;\n\nif (isFirebaseConfigured) {\n  try {\n    app = initializeApp(firebaseConfig);\n    auth = getAuth(app);\n  } catch (error) {\n    console.error(\"Failed to initialize Firebase:\", error);\n    // Create a mock auth object for development\n    auth = null;\n  }\n} else {\n  console.warn(\"Firebase not properly configured. Using mock authentication for development.\");\n  auth = null;\n}\n\nexport { auth };\n\nconst googleProvider = new GoogleAuthProvider();\n\nexport const signInWithGoogle = async () => {\n  if (!auth) {\n    throw new Error(\"Firebase authentication is not configured. Please configure your Firebase credentials.\");\n  }\n  return signInWithPopup(auth, googleProvider);\n};\n\nexport const signInWithEmail = (email: string, password: string) => {\n  if (!auth) {\n    throw new Error(\"Firebase authentication is not configured. Please configure your Firebase credentials.\");\n  }\n  return signInWithEmailAndPassword(auth, email, password);\n};\n\nexport const signUpWithEmail = (email: string, password: string) => {\n  if (!auth) {\n    throw new Error(\"Firebase authentication is not configured. Please configure your Firebase credentials.\");\n  }\n  return createUserWithEmailAndPassword(auth, email, password);\n};\n\nexport const signOut = async () => {\n  if (!auth) {\n    return Promise.resolve();\n  }\n  return firebaseSignOut(auth);\n};\n\nexport const onAuthChange = (callback: (user: FirebaseUser | null) => void) => {\n  if (!auth) {\n    // Call callback with null user immediately if Firebase is not configured\n    callback(null);\n    return () => {}; // Return empty unsubscribe function\n  }\n  return onAuthStateChanged(auth, callback);\n};\n\nexport type { FirebaseUser };\n","size_bytes":2830},"jest.config.js":{"content":"module.exports = {\n  preset: 'ts-jest',\n  testEnvironment: 'node',\n  roots: ['<rootDir>/server', '<rootDir>/client/src'],\n  testMatch: [\n    '**/__tests__/**/*.+(ts|tsx|js)',\n    '**/*.(test|spec).+(ts|tsx|js)'\n  ],\n  transform: {\n    '^.+\\\\.(ts|tsx)$': 'ts-jest'\n  },\n  collectCoverageFrom: [\n    'server/**/*.{ts,js}',\n    'client/src/**/*.{ts,tsx}',\n    '!**/*.d.ts',\n    '!**/node_modules/**',\n    '!**/dist/**',\n    '!**/coverage/**'\n  ],\n  coverageDirectory: 'coverage',\n  coverageReporters: ['text', 'lcov', 'html'],\n  setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],\n  testTimeout: 10000,\n  moduleNameMapping: {\n    '^@/(.*)$': '<rootDir>/client/src/$1',\n    '^@shared/(.*)$': '<rootDir>/shared/$1'\n  },\n  globals: {\n    'ts-jest': {\n      tsconfig: 'tsconfig.json'\n    }\n  }\n};\n","size_bytes":787},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"server/middleware/performance.ts":{"content":"import compression from 'compression';\nimport { Request, Response, NextFunction } from 'express';\nimport { logger } from './logger.js';\n\n// Compression middleware\nexport const compressionMiddleware = compression({\n  filter: (req: Request, res: Response) => {\n    // Don't compress if the request includes a Cache-Control: no-transform directive\n    if (req.headers['cache-control'] && req.headers['cache-control'].includes('no-transform')) {\n      return false;\n    }\n    \n    // Use compression for all other requests\n    return compression.filter(req, res);\n  },\n  level: 6, // Compression level (1-9)\n  threshold: 1024, // Only compress responses larger than 1KB\n});\n\n// Response time middleware\nexport const responseTimeMiddleware = (req: Request, res: Response, next: NextFunction) => {\n  const startTime = Date.now();\n  \n  // Set response time header before response is sent\n  const originalSend = res.send;\n  res.send = function(body) {\n    const duration = Date.now() - startTime;\n    res.setHeader('X-Response-Time', `${duration}ms`);\n    return originalSend.call(this, body);\n  };\n  \n  res.on('finish', () => {\n    const duration = Date.now() - startTime;\n    \n    // Log performance metrics (without setting headers)\n    logger.info('Request completed', {\n      method: req.method,\n      url: req.url,\n      statusCode: res.statusCode,\n      responseTime: duration,\n      contentLength: res.get('Content-Length') || 0,\n      userAgent: req.get('User-Agent'),\n      ip: req.ip\n    });\n    \n    // Log slow requests\n    if (duration > 1000) {\n      logger.warn('Slow request detected', {\n        method: req.method,\n        url: req.url,\n        responseTime: duration,\n        statusCode: res.statusCode\n      });\n    }\n  });\n  \n  next();\n};\n\n// Cache control middleware\nexport const cacheControlMiddleware = (req: Request, res: Response, next: NextFunction) => {\n  // Set cache headers based on route\n  if (req.path.startsWith('/api/static/') || req.path.startsWith('/assets/')) {\n    // Static assets - cache for 1 year\n    res.setHeader('Cache-Control', 'public, max-age=31536000, immutable');\n  } else if (req.path.startsWith('/api/health') || req.path.startsWith('/api/metrics')) {\n    // Health checks - no cache\n    res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n  } else if (req.path.startsWith('/api/')) {\n    // API responses - short cache\n    res.setHeader('Cache-Control', 'private, max-age=300'); // 5 minutes\n  } else {\n    // Default - no cache\n    res.setHeader('Cache-Control', 'no-cache, no-store, must-revalidate');\n  }\n  \n  next();\n};\n\n// Request size limiter\nexport const requestSizeLimiter = (req: Request, res: Response, next: NextFunction) => {\n  const contentLength = parseInt(req.get('Content-Length') || '0');\n  const maxSize = 10 * 1024 * 1024; // 10MB\n  \n  if (contentLength > maxSize) {\n    logger.warn('Request size limit exceeded', {\n      contentLength,\n      maxSize,\n      url: req.url,\n      ip: req.ip\n    });\n    \n    return res.status(413).json({\n      error: 'Request entity too large',\n      maxSize: '10MB'\n    });\n  }\n  \n  next();\n};\n\n// Connection limiter\nexport const connectionLimiter = (req: Request, res: Response, next: NextFunction) => {\n  // Simple connection limiting based on IP\n  const ip = (req.ip || req.connection.remoteAddress || 'unknown') as string;\n  const now = Date.now();\n  \n  // This is a simplified version - in production, use Redis or similar\n  if (!global.connectionCounts) {\n    global.connectionCounts = new Map();\n  }\n  \n  const connections = global.connectionCounts.get(ip) || [];\n  const recentConnections = connections.filter((time: number) => now - time < 60000); // Last minute\n  \n  if (recentConnections.length > 10) { // Max 10 connections per minute per IP\n    logger.warn('Connection limit exceeded', {\n      ip,\n      connections: recentConnections.length,\n      url: req.url\n    });\n    \n    return res.status(429).json({\n      error: 'Too many connections',\n      retryAfter: 60\n    });\n  }\n  \n  recentConnections.push(now);\n  global.connectionCounts.set(ip, recentConnections);\n  \n  next();\n};\n\n// Memory usage monitor\nexport const memoryMonitor = (req: Request, res: Response, next: NextFunction) => {\n  const memoryUsage = process.memoryUsage();\n  const memoryPercentage = (memoryUsage.heapUsed / memoryUsage.heapTotal) * 100;\n  \n  // Log high memory usage\n  if (memoryPercentage > 80) {\n    logger.warn('High memory usage detected', {\n      memoryPercentage: memoryPercentage.toFixed(2),\n      heapUsed: memoryUsage.heapUsed,\n      heapTotal: memoryUsage.heapTotal,\n      rss: memoryUsage.rss\n    });\n  }\n  \n  // Add memory info to response headers in development\n  if (process.env.NODE_ENV === 'development') {\n    res.setHeader('X-Memory-Usage', `${memoryPercentage.toFixed(2)}%`);\n    res.setHeader('X-Heap-Used', `${Math.round(memoryUsage.heapUsed / 1024 / 1024)}MB`);\n  }\n  \n  next();\n};\n\n// Database query monitor\nexport const queryMonitor = (req: Request, res: Response, next: NextFunction) => {\n  const startTime = Date.now();\n  \n  // Override res.json to monitor response time\n  const originalJson = res.json;\n  res.json = function(body: any) {\n    const duration = Date.now() - startTime;\n    \n    // Log slow database operations\n    if (duration > 500) {\n      logger.warn('Slow database operation', {\n        method: req.method,\n        url: req.url,\n        duration,\n        statusCode: res.statusCode\n      });\n    }\n    \n    return originalJson.call(this, body);\n  };\n  \n  next();\n};\n\n// Performance metrics collector\nexport const performanceMetrics = {\n  requests: 0,\n  totalResponseTime: 0,\n  slowRequests: 0,\n  errors: 0,\n  \n  recordRequest(responseTime: number, statusCode: number) {\n    performanceMetrics.requests++;\n    performanceMetrics.totalResponseTime += responseTime;\n    \n    if (responseTime > 1000) {\n      performanceMetrics.slowRequests++;\n    }\n    \n    if (statusCode >= 400) {\n      performanceMetrics.errors++;\n    }\n  },\n  \n  getMetrics() {\n    return {\n      requests: performanceMetrics.requests,\n      averageResponseTime:\n        performanceMetrics.requests > 0\n          ? performanceMetrics.totalResponseTime / performanceMetrics.requests\n          : 0,\n      slowRequests: performanceMetrics.slowRequests,\n      errors: performanceMetrics.errors,\n      errorRate:\n        performanceMetrics.requests > 0\n          ? (performanceMetrics.errors / performanceMetrics.requests) * 100\n          : 0,\n    };\n  },\n  \n  reset() {\n    performanceMetrics.requests = 0;\n    performanceMetrics.totalResponseTime = 0;\n    performanceMetrics.slowRequests = 0;\n    performanceMetrics.errors = 0;\n  }\n};\n\n// Performance metrics middleware\nexport const performanceMetricsMiddleware = (req: Request, res: Response, next: NextFunction) => {\n  const startTime = Date.now();\n  \n  res.on('finish', () => {\n    const duration = Date.now() - startTime;\n    performanceMetrics.recordRequest(duration, res.statusCode);\n  });\n  \n  next();\n};\n\n// Global performance monitoring\ndeclare global {\n  var connectionCounts: Map<string, number[]>;\n}\n","size_bytes":7083},"server/middleware/security.ts":{"content":"import rateLimit from 'express-rate-limit';\nimport helmet from 'helmet';\n// Note: cors imported in server/index-production.ts where applied\nimport { Request, Response, NextFunction } from 'express';\nimport mongoSanitize from 'express-mongo-sanitize';\nimport hpp from 'hpp';\n\nimport xss from 'xss-clean';\n\n// Rate limiting configurations\nexport const generalLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 100, // limit each IP to 100 requests per windowMs\n  message: {\n    error: 'Too many requests from this IP, please try again later.',\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nexport const authLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 5, // limit each IP to 5 auth requests per windowMs\n  message: {\n    error: 'Too many authentication attempts, please try again later.',\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\nexport const apiLimiter = rateLimit({\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  max: 200, // limit each IP to 200 requests per windowMs\n  message: {\n    error: 'Too many API requests from this IP, please try again later.',\n  },\n  standardHeaders: true,\n  legacyHeaders: false,\n});\n\n// CORS configuration\nexport const corsOptions = {\n  origin: function (origin: string | undefined, callback: (err: Error | null, allow?: boolean) => void) {\n    // Allow requests with no origin (mobile apps, curl, etc.)\n    if (!origin) return callback(null, true);\n    \n    const allowedOrigins = [\n      'http://localhost:3000',\n      'http://localhost:5000',\n      'http://localhost:5173',\n      'https://lumoraed.com',\n      'https://www.lumoraed.com',\n      process.env.FRONTEND_URL || 'http://localhost:3000'\n    ];\n    \n    if (allowedOrigins.includes(origin)) {\n      callback(null, true);\n    } else {\n      callback(new Error('Not allowed by CORS'));\n    }\n  },\n  credentials: true,\n  optionsSuccessStatus: 200,\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization', 'X-Requested-With'],\n};\n\n// Security headers configuration\nexport const helmetConfig = helmet({\n  contentSecurityPolicy: {\n    directives: {\n      defaultSrc: [\"'self'\"],\n      styleSrc: [\"'self'\", \"'unsafe-inline'\", \"https://fonts.googleapis.com\"],\n      fontSrc: [\"'self'\", \"https://fonts.gstatic.com\"],\n      imgSrc: [\"'self'\", \"data:\", \"https:\"],\n      scriptSrc: [\"'self'\"],\n      connectSrc: [\"'self'\", \"https://api.firebase.com\"],\n      frameSrc: [\"'none'\"],\n      objectSrc: [\"'none'\"],\n      upgradeInsecureRequests: [],\n    },\n  },\n  crossOriginEmbedderPolicy: false,\n  hsts: {\n    maxAge: 31536000,\n    includeSubDomains: true,\n    preload: true\n  }\n});\n\n// Input sanitization middleware\nexport const sanitizeInput = mongoSanitize({\n  replaceWith: '_',\n  onSanitize: ({ key }: { req: Request; key: string }) => {\n    // use server logger in production; keeping silent here to avoid console usage\n  }\n});\n\n// XSS protection\nexport const xssProtection = xss();\n\n// HTTP Parameter Pollution protection\nexport const hppProtection = hpp();\n\n// Custom security middleware\nexport const securityHeaders = (req: Request, res: Response, next: NextFunction) => {\n  // Remove X-Powered-By header\n  res.removeHeader('X-Powered-By');\n  \n  // Add security headers\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  res.setHeader('X-Frame-Options', 'DENY');\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  \n  next();\n};\n\n// Request logging for security monitoring\nexport const securityLogger = (req: Request, res: Response, next: NextFunction) => {\n  const start = Date.now();\n  \n  res.on('finish', () => {\n    const duration = Date.now() - start;\n    const logData = {\n      timestamp: new Date().toISOString(),\n      method: req.method,\n      url: req.url,\n      ip: req.ip || req.connection.remoteAddress,\n      userAgent: req.get('User-Agent'),\n      statusCode: res.statusCode,\n      duration: `${duration}ms`,\n      contentLength: res.get('Content-Length') || 0\n    };\n    \n    // Log suspicious activities using logger instead of console\n    if (res.statusCode >= 400) {\n      // Use process.stderr.write to avoid header conflicts\n      process.stderr.write(`Security Warning: ${JSON.stringify(logData)}\\n`);\n    }\n    \n    // Log all requests in production\n    if (process.env.NODE_ENV === 'production') {\n      process.stdout.write(`Request: ${JSON.stringify(logData)}\\n`);\n    }\n  });\n  \n  next();\n};\n\n// IP whitelist for admin endpoints\nexport const adminIPWhitelist = (req: Request, res: Response, next: NextFunction) => {\n  const allowedIPs = [\n    '127.0.0.1',\n    '::1',\n    'localhost',\n    ...(process.env.ADMIN_IPS ? process.env.ADMIN_IPS.split(',') : [])\n  ];\n  \n  const clientIP = (req.ip || req.connection.remoteAddress || '') as string;\n  \n  if (allowedIPs.includes(clientIP)) {\n    next();\n  } else {\n    console.warn(`Unauthorized admin access attempt from IP: ${clientIP}`);\n    res.status(403).json({ error: 'Access denied' });\n  }\n};\n","size_bytes":5059},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4050},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/pages/LandingPage.tsx":{"content":"import { useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { BookOpen, Trophy, Users, Target, Star, ArrowRight, CheckCircle, Zap, Brain, Gamepad2, Sparkles, AlertTriangle } from \"lucide-react\";\n\nexport default function LandingPage() {\n  const [, setLocation] = useLocation();\n\n  // Check if Firebase is properly configured\n  const isFirebaseConfigured = import.meta.env.VITE_FIREBASE_API_KEY && \n    import.meta.env.VITE_FIREBASE_API_KEY !== \"demo-api-key\" &&\n    import.meta.env.VITE_FIREBASE_PROJECT_ID &&\n    import.meta.env.VITE_FIREBASE_PROJECT_ID !== \"demo-project\" &&\n    import.meta.env.VITE_FIREBASE_APP_ID &&\n    import.meta.env.VITE_FIREBASE_APP_ID !== \"demo-app-id\";\n\n  const features = [\n    {\n      icon: <Zap className=\"h-6 w-6\" />,\n      title: \"Daily Streaks\",\n      description: \"Build unstoppable learning habits with gamified daily challenges\"\n    },\n    {\n      icon: <Brain className=\"h-6 w-6\" />,\n      title: \"Smart Learning\",\n      description: \"AI-powered personalized paths that adapt to your learning style\"\n    },\n    {\n      icon: <Gamepad2 className=\"h-6 w-6\" />,\n      title: \"Gamified Experience\",\n      description: \"Level up, earn XP, and compete with friends in epic learning battles\"\n    },\n    {\n      icon: <Sparkles className=\"h-6 w-6\" />,\n      title: \"Instant Rewards\",\n      description: \"Get badges, certificates, and unlock achievements as you progress\"\n    }\n  ];\n\n  const stats = [\n    { label: \"Active Learners\", value: \"50K+\" },\n    { label: \"Challenges Completed\", value: \"1M+\" },\n    { label: \"Certificates Earned\", value: \"250K+\" },\n    { label: \"Success Rate\", value: \"98%\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 relative overflow-hidden\">\n      {/* Animated background elements */}\n      <div className=\"absolute inset-0 overflow-hidden\">\n        <div className=\"absolute -top-40 -right-40 w-80 h-80 bg-purple-500 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-pulse\"></div>\n        <div className=\"absolute -bottom-40 -left-40 w-80 h-80 bg-blue-500 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-pulse\"></div>\n        <div className=\"absolute top-40 left-40 w-60 h-60 bg-pink-500 rounded-full mix-blend-multiply filter blur-xl opacity-30 animate-pulse\"></div>\n        <div className=\"absolute top-1/2 right-1/4 w-40 h-40 bg-cyan-400 rounded-full mix-blend-multiply filter blur-xl opacity-20 animate-bounce\"></div>\n        {/* Floating particles */}\n        <div className=\"absolute top-1/4 left-1/4 w-2 h-2 bg-white rounded-full opacity-60 animate-ping\"></div>\n        <div className=\"absolute top-3/4 right-1/3 w-1 h-1 bg-purple-300 rounded-full opacity-80 animate-ping\" style={{ animationDelay: '1s' }}></div>\n        <div className=\"absolute top-1/2 left-1/3 w-1.5 h-1.5 bg-pink-300 rounded-full opacity-70 animate-ping\" style={{ animationDelay: '2s' }}></div>\n      </div>\n\n      {/* Navigation */}\n      <nav className=\"relative z-50 border-b border-white/20 bg-black/30 backdrop-blur-md\">\n        <div className=\"container mx-auto px-4 h-16 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3 animate-fade-in\">\n            <div className=\"p-2 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 shadow-lg\">\n              <BookOpen className=\"h-6 w-6 text-white\" />\n            </div>\n            <span className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">LumoraEd</span>\n          </div>\n              <div className=\"flex items-center space-x-4 animate-fade-in-delay\">\n                <Button variant=\"ghost\" onClick={() => setLocation(\"/login\")} className=\"text-white hover:bg-white/20 transition-all duration-300 hover:scale-105\">\n                  Sign In\n                </Button>\n                <Button onClick={() => setLocation(\"/register\")} className=\"bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white border-0 shadow-lg hover:shadow-purple-500/25 transition-all duration-300 hover:scale-105\">\n                  Get Started\n                </Button>\n              </div>\n        </div>\n      </nav>\n\n      {/* Configuration Notice */}\n      {!isFirebaseConfigured && (\n        <div className=\"relative z-40 container mx-auto px-4 py-4\">\n          <Alert className=\"bg-yellow-500/10 border-yellow-500/30 text-yellow-200\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>\n              <strong>Development Mode:</strong> Firebase authentication is not configured. \n              To enable user authentication, please configure your Firebase credentials in the environment variables.\n            </AlertDescription>\n          </Alert>\n        </div>\n      )}\n\n      {/* Hero Section */}\n      <section className=\"relative z-10 container mx-auto px-4 py-20\">\n        <div className=\"text-center space-y-8 max-w-5xl mx-auto\">\n          <Badge variant=\"secondary\" className=\"px-6 py-3 text-sm font-semibold bg-gradient-to-r from-purple-500/30 to-pink-500/30 border-purple-500/50 text-purple-200 animate-bounce\">\n            🚀 The Future of Learning is Here\n          </Badge>\n          <h1 className=\"text-6xl md:text-8xl font-black tracking-tight animate-slide-up\">\n            <span className=\"bg-gradient-to-r from-purple-400 via-pink-400 to-blue-400 bg-clip-text text-transparent\">\n              Learn Like\n            </span>\n            <br />\n            <span className=\"bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent animate-gradient\">\n              Never Before\n            </span>\n          </h1>\n          <p className=\"text-xl md:text-2xl text-gray-200 max-w-3xl mx-auto leading-relaxed animate-slide-up-delay\">\n            Join the <span className=\"text-purple-300 font-semibold\">Gen Z learning revolution</span>. \n            Master skills through epic challenges, earn sick rewards, and level up your future. \n            <span className=\"text-pink-300 font-semibold\"> No boring lectures, just pure learning magic.</span>\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-6 justify-center pt-8 animate-slide-up-delay-2\">\n            <Button size=\"lg\" onClick={() => setLocation(\"/register\")} className=\"text-xl px-12 py-6 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white border-0 shadow-2xl shadow-purple-500/25 transition-all duration-300 hover:scale-105 hover:shadow-purple-500/40\">\n              Start Your Journey\n              <ArrowRight className=\"ml-3 h-6 w-6 animate-pulse\" />\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" onClick={() => setLocation(\"/login\")} className=\"text-xl px-12 py-6 border-white/40 text-white hover:bg-white/20 backdrop-blur-sm transition-all duration-300 hover:scale-105\">\n              Sign In\n            </Button>\n          </div>\n        </div>\n      </section>\n\n      {/* Stats Section */}\n      <section className=\"relative z-10 container mx-auto px-4 py-16\">\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-8\">\n          {stats.map((stat, index) => (\n            <div key={index} className=\"text-center space-y-2 animate-fade-in-up\" style={{ animationDelay: `${index * 0.1}s` }}>\n              <div className=\"text-4xl md:text-5xl font-black bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent animate-pulse\">{stat.value}</div>\n              <div className=\"text-sm text-gray-300 font-medium\">{stat.label}</div>\n            </div>\n          ))}\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"relative z-10 container mx-auto px-4 py-20\">\n        <div className=\"text-center space-y-4 mb-16 animate-fade-in\">\n          <h2 className=\"text-4xl md:text-6xl font-black bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">Why LumoraEd is Fire 🔥</h2>\n          <p className=\"text-xl text-gray-200 max-w-3xl mx-auto\">\n            We've reimagined learning for the digital generation. No more boring textbooks, just pure learning vibes.\n          </p>\n        </div>\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          {features.map((feature, index) => (\n            <Card key={index} className=\"text-center space-y-4 bg-black/30 border-white/20 backdrop-blur-sm hover:bg-black/40 transition-all duration-500 hover:scale-105 hover:shadow-2xl hover:shadow-purple-500/20 animate-fade-in-up\" style={{ animationDelay: `${index * 0.2}s` }}>\n              <CardHeader>\n                <div className=\"mx-auto p-4 rounded-2xl bg-gradient-to-r from-purple-500/30 to-pink-500/30 w-fit hover:scale-110 transition-transform duration-300\">\n                  {feature.icon}\n                </div>\n                <CardTitle className=\"text-xl text-white\">{feature.title}</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <CardDescription className=\"text-base text-gray-200\">\n                  {feature.description}\n                </CardDescription>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n      </section>\n\n      {/* How It Works Section */}\n      <section className=\"relative z-10 container mx-auto px-4 py-20\">\n        <div className=\"bg-black/30 backdrop-blur-sm rounded-3xl p-12 border border-white/20 animate-fade-in\">\n          <div className=\"text-center space-y-4 mb-16\">\n            <h2 className=\"text-4xl md:text-6xl font-black bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">How It Works</h2>\n            <p className=\"text-xl text-gray-200 max-w-3xl mx-auto\">\n              Three simple steps to unlock your learning superpowers.\n            </p>\n          </div>\n          <div className=\"grid md:grid-cols-3 gap-12\">\n            <div className=\"text-center space-y-6 animate-fade-in-up\" style={{ animationDelay: '0.1s' }}>\n              <div className=\"mx-auto w-16 h-16 rounded-full bg-gradient-to-r from-purple-500 to-pink-500 text-white flex items-center justify-center text-2xl font-black hover:scale-110 transition-transform duration-300 shadow-lg\">\n                1\n              </div>\n              <h3 className=\"text-2xl font-bold text-white\">Sign Up</h3>\n              <p className=\"text-gray-200 text-lg\">\n                Create your account and choose your learning goals. Takes 30 seconds, we promise.\n              </p>\n            </div>\n            <div className=\"text-center space-y-6 animate-fade-in-up\" style={{ animationDelay: '0.2s' }}>\n              <div className=\"mx-auto w-16 h-16 rounded-full bg-gradient-to-r from-blue-500 to-purple-500 text-white flex items-center justify-center text-2xl font-black hover:scale-110 transition-transform duration-300 shadow-lg\">\n                2\n              </div>\n              <h3 className=\"text-2xl font-bold text-white\">Start Challenges</h3>\n              <p className=\"text-gray-200 text-lg\">\n                Jump into epic challenges and complete daily tasks. Level up your skills like a pro.\n              </p>\n            </div>\n            <div className=\"text-center space-y-6 animate-fade-in-up\" style={{ animationDelay: '0.3s' }}>\n              <div className=\"mx-auto w-16 h-16 rounded-full bg-gradient-to-r from-pink-500 to-blue-500 text-white flex items-center justify-center text-2xl font-black hover:scale-110 transition-transform duration-300 shadow-lg\">\n                3\n              </div>\n              <h3 className=\"text-2xl font-bold text-white\">Earn Rewards</h3>\n              <p className=\"text-gray-200 text-lg\">\n                Collect badges, earn certificates, and unlock achievements. Flex your skills.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"relative z-10 container mx-auto px-4 py-20\">\n        <Card className=\"max-w-5xl mx-auto text-center bg-gradient-to-r from-purple-900/60 to-pink-900/60 border-white/20 backdrop-blur-sm animate-fade-in\">\n          <CardHeader className=\"space-y-6\">\n            <CardTitle className=\"text-4xl md:text-6xl font-black bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              Ready to Level Up?\n            </CardTitle>\n            <CardDescription className=\"text-xl text-gray-200\">\n              Join thousands of learners who are already building their future. Your learning journey starts now.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-8\">\n            <div className=\"flex flex-col sm:flex-row gap-6 justify-center\">\n              <Button size=\"lg\" onClick={() => setLocation(\"/register\")} className=\"text-xl px-12 py-6 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white border-0 shadow-2xl shadow-purple-500/25 transition-all duration-300 hover:scale-105 hover:shadow-purple-500/40\">\n                Start Your Journey\n                <ArrowRight className=\"ml-3 h-6 w-6 animate-pulse\" />\n              </Button>\n              <Button size=\"lg\" variant=\"outline\" onClick={() => setLocation(\"/login\")} className=\"text-xl px-12 py-6 border-white/40 text-white hover:bg-white/20 backdrop-blur-sm transition-all duration-300 hover:scale-105\">\n                Sign In\n              </Button>\n            </div>\n            <div className=\"flex items-center justify-center space-x-2 text-sm text-gray-300\">\n              <CheckCircle className=\"h-5 w-5 text-green-400 animate-pulse\" />\n              <span>Free to start • No credit card required • Cancel anytime</span>\n            </div>\n          </CardContent>\n        </Card>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"relative z-10 border-t border-white/20 bg-black/30 backdrop-blur-md\">\n        <div className=\"container mx-auto px-4 py-12\">\n          <div className=\"flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0\">\n            <div className=\"flex items-center space-x-3 animate-fade-in\">\n              <div className=\"p-2 rounded-xl bg-gradient-to-r from-purple-500 to-pink-500 shadow-lg\">\n                <BookOpen className=\"h-6 w-6 text-white\" />\n              </div>\n              <span className=\"text-xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">LumoraEd</span>\n            </div>\n            <div className=\"text-sm text-gray-300\">\n              © 2024 LumoraEd. All rights reserved. Made with ❤️ for Gen Z learners.\n            </div>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}","size_bytes":14956},"server/firebase-admin.ts":{"content":"import admin from \"firebase-admin\";\n\n// Initialize Firebase Admin with proper configuration\nif (!admin.apps.length) {\n  const projectId = process.env.VITE_FIREBASE_PROJECT_ID;\n  \n  if (projectId && projectId !== \"demo-project\") {\n    try {\n      // Initialize with project ID for development\n      admin.initializeApp({\n        projectId: projectId,\n      });\n      console.log(\"Firebase Admin initialized with project:\", projectId);\n    } catch (error) {\n      console.error(\"Failed to initialize Firebase Admin:\", error);\n      // For development, we'll handle this gracefully\n    }\n  } else {\n    console.warn(\"Firebase Admin not initialized - no valid project ID found\");\n  }\n}\n\nexport const auth = admin.apps.length > 0 ? admin.auth() : null;\n\nexport async function verifyIdToken(token: string) {\n  // For development, if Firebase Admin is not properly initialized or fails,\n  // we'll create a mock token verification\n  if (!auth) {\n    console.warn(\"Firebase Admin not initialized - using mock token verification for development\");\n    // Return a mock decoded token for development\n    return {\n      uid: \"dev-user-123\",\n      email: \"dev@example.com\",\n      email_verified: true,\n      name: \"Development User\"\n    };\n  }\n\n  try {\n    // Verify the Firebase ID token\n    const decodedToken = await auth.verifyIdToken(token, true);\n    return decodedToken;\n  } catch (error: any) {\n    console.warn(\"Firebase token verification failed - using mock token for development:\", error.message);\n    // For development, return a mock token instead of throwing an error\n    // Use a consistent UID for development\n    return {\n      uid: \"dev-user-123\",\n      email: \"dev@example.com\",\n      email_verified: true,\n      name: \"Development User\"\n    };\n  }\n}\n","size_bytes":1759},"server/seed.ts":{"content":"import \"dotenv/config\";\nimport { storage } from \"./storage\";\n\nasync function seedDatabase() {\n  console.log(\"🌱 Starting database seeding...\");\n\n  try {\n    // Check if admin user already exists\n    let adminUser = await storage.getUserByEmail(\"admin@lumoraed.com\");\n    \n    if (!adminUser) {\n      console.log(\"👤 Creating admin user...\");\n      adminUser = await storage.createUser({\n        email: \"admin@lumoraed.com\",\n        name: \"Admin User\",\n        firebaseUid: \"admin-user-123\",\n        role: \"admin\"\n      });\n      console.log(\"✅ Admin user created:\", adminUser.email);\n    } else {\n      console.log(\"✅ Admin user already exists:\", adminUser.email);\n    }\n\n    // Create comprehensive programming challenges\n    console.log(\"📚 Creating comprehensive programming challenges...\");\n    \n    // 10-Day Challenges\n    const python10Day = await storage.createChallenge({\n      title: \"10 Days Python Bootcamp\",\n      description: \"Intensive 10-day Python programming bootcamp covering fundamentals, data structures, and basic algorithms. Perfect for beginners who want to get started quickly.\",\n      duration: 10,\n      createdBy: adminUser.id\n    });\n\n    const javascript10Day = await storage.createChallenge({\n      title: \"10 Days JavaScript Mastery\",\n      description: \"Fast-track JavaScript learning covering ES6+, DOM manipulation, async programming, and modern JavaScript features.\",\n      duration: 10,\n      createdBy: adminUser.id\n    });\n\n    // 30-Day Challenges\n    const python30Day = await storage.createChallenge({\n      title: \"30 Days Python Programming\",\n      description: \"Comprehensive Python programming course covering fundamentals, OOP, data structures, algorithms, web development with Flask/Django, and data analysis.\",\n      duration: 30,\n      createdBy: adminUser.id\n    });\n\n    const java30Day = await storage.createChallenge({\n      title: \"30 Days Java Development\",\n      description: \"Master Java programming from basics to advanced concepts including OOP, collections, multithreading, Spring framework, and enterprise development.\",\n      duration: 30,\n      createdBy: adminUser.id\n    });\n\n    const webDev30Day = await storage.createChallenge({\n      title: \"30 Days Full-Stack Web Development\",\n      description: \"Complete web development course covering HTML, CSS, JavaScript, React, Node.js, databases, and deployment. Build real projects.\",\n      duration: 30,\n      createdBy: adminUser.id\n    });\n\n    // 60-Day Challenges\n    const python60Day = await storage.createChallenge({\n      title: \"60 Days Python Data Science\",\n      description: \"Comprehensive data science program with Python covering pandas, numpy, matplotlib, scikit-learn, machine learning, deep learning, and real-world projects.\",\n      duration: 60,\n      createdBy: adminUser.id\n    });\n\n    const systemDesign60Day = await storage.createChallenge({\n      title: \"60 Days System Design & Architecture\",\n      description: \"Master system design principles, microservices, cloud architecture, scalability, databases, caching, and build production-ready systems.\",\n      duration: 60,\n      createdBy: adminUser.id\n    });\n\n    const mobileDev60Day = await storage.createChallenge({\n      title: \"60 Days Mobile App Development\",\n      description: \"Complete mobile development course covering React Native, Flutter, iOS/Android development, app store deployment, and cross-platform solutions.\",\n      duration: 60,\n      createdBy: adminUser.id\n    });\n\n    console.log(\"✅ Challenges created:\", [\n      python10Day.title, javascript10Day.title,\n      python30Day.title, java30Day.title, webDev30Day.title,\n      python60Day.title, systemDesign60Day.title, mobileDev60Day.title\n    ]);\n\n    // Create tasks for 10-Day Python Bootcamp\n    console.log(\"📝 Creating tasks for 10-Day Python Bootcamp...\");\n    const python10DayTasks = [\n      {\n        dayNumber: 1,\n        title: \"Python Setup & Basics\",\n        content: \"Set up Python environment, learn syntax, variables, data types (int, float, string, boolean), and basic operations. Practice with simple calculations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Tutorial for Beginners\", url: \"https://www.youtube.com/watch?v=kqtD5dpn9C8\" },\n          { type: \"practice\", title: \"HackerRank Python Basic\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"documentation\", title: \"Python Official Docs\", url: \"https://docs.python.org/3/tutorial/\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"Control Structures & Logic\",\n        content: \"Master if/else statements, comparison operators, logical operators, and nested conditions. Practice with real-world scenarios.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python If/Else Statements\", url: \"https://www.youtube.com/watch?v=AWek49wXGzI\" },\n          { type: \"practice\", title: \"LeetCode Easy Problems\", url: \"https://leetcode.com/problemset/all/?difficulty=Easy\" },\n          { type: \"practice\", title: \"CodingBat Python\", url: \"https://codingbat.com/python\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"Loops & Iteration\",\n        content: \"Learn for loops, while loops, range() function, break/continue statements. Practice with iteration patterns and nested loops.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Loops Tutorial\", url: \"https://www.youtube.com/watch?v=OnDr4JpUXPc\" },\n          { type: \"practice\", title: \"HackerRank Python Loops\", url: \"https://www.hackerrank.com/domains/python/py-introduction\" },\n          { type: \"practice\", title: \"LeetCode Array Problems\", url: \"https://leetcode.com/tag/array/\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"Functions & Scope\",\n        content: \"Create reusable code with functions, understand parameters, return values, scope, and lambda functions. Practice with function design.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Functions\", url: \"https://www.youtube.com/watch?v=9Os0o3wzS_I\" },\n          { type: \"practice\", title: \"HackerRank Functions\", url: \"https://www.hackerrank.com/domains/python/py-function\" },\n          { type: \"documentation\", title: \"Python Functions Guide\", url: \"https://docs.python.org/3/tutorial/controlflow.html#defining-functions\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"Data Structures - Lists & Tuples\",\n        content: \"Master Python lists, tuples, list methods, list comprehensions, slicing, and common operations. Practice with data manipulation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Lists Tutorial\", url: \"https://www.youtube.com/watch?v=ohCDWZgNIU0\" },\n          { type: \"practice\", title: \"HackerRank Lists\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" },\n          { type: \"practice\", title: \"LeetCode Array Manipulation\", url: \"https://leetcode.com/tag/array/\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"Dictionaries & Sets\",\n        content: \"Learn dictionaries, sets, dictionary methods, set operations, and when to use each data structure. Practice with key-value operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Dictionaries\", url: \"https://www.youtube.com/watch?v=daefaLgNkw0\" },\n          { type: \"practice\", title: \"HackerRank Dictionaries\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" },\n          { type: \"practice\", title: \"LeetCode Hash Table\", url: \"https://leetcode.com/tag/hash-table/\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"String Manipulation\",\n        content: \"Master string methods, formatting, regular expressions, and text processing. Practice with string algorithms and parsing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Strings\", url: \"https://www.youtube.com/watch?v=k9TUPpGqYTo\" },\n          { type: \"practice\", title: \"HackerRank Strings\", url: \"https://www.hackerrank.com/domains/python/py-strings\" },\n          { type: \"practice\", title: \"LeetCode String Problems\", url: \"https://leetcode.com/tag/string/\" }\n        ]\n      },\n      {\n        dayNumber: 8,\n        title: \"File I/O & Error Handling\",\n        content: \"Learn file operations, reading/writing files, exception handling with try/except, and best practices for file management.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python File I/O\", url: \"https://www.youtube.com/watch?v=Uh2ebFW8OYM\" },\n          { type: \"practice\", title: \"HackerRank File I/O\", url: \"https://www.hackerrank.com/domains/python/py-io\" },\n          { type: \"documentation\", title: \"Python File Operations\", url: \"https://docs.python.org/3/tutorial/inputoutput.html\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"Object-Oriented Programming\",\n        content: \"Learn classes, objects, inheritance, polymorphism, and encapsulation. Practice with OOP design principles.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python OOP\", url: \"https://www.youtube.com/watch?v=ZDa-Z5JzLYM\" },\n          { type: \"practice\", title: \"HackerRank Classes\", url: \"https://www.hackerrank.com/domains/python/py-classes\" },\n          { type: \"practice\", title: \"LeetCode OOP Problems\", url: \"https://leetcode.com/tag/object-oriented-programming/\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"Final Project & Review\",\n        content: \"Build a complete Python project combining all concepts learned. Create a calculator, text analyzer, or simple game. Review and practice.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"HackerRank Final Challenge\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"practice\", title: \"LeetCode Medium Problems\", url: \"https://leetcode.com/problemset/all/?difficulty=Medium\" }\n        ]\n      }\n    ];\n\n    for (const taskData of python10DayTasks) {\n      await storage.createTask({\n        challengeId: python10Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create tasks for 30-Day Python Programming\n    console.log(\"📝 Creating tasks for 30-Day Python Programming...\");\n    const python30DayTasks = [\n      // Week 1: Fundamentals\n      {\n        dayNumber: 1,\n        title: \"Python Environment & Setup\",\n        content: \"Set up Python development environment, learn about virtual environments, pip, and project structure. Install essential packages.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Setup Guide\", url: \"https://www.youtube.com/watch?v=YYXdXT2l-Gg\" },\n          { type: \"practice\", title: \"HackerRank Python Basic\", url: \"https://www.hackerrank.com/domains/python\" },\n          { type: \"documentation\", title: \"Python Installation\", url: \"https://docs.python.org/3/using/index.html\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"Variables, Data Types & Operations\",\n        content: \"Master Python variables, data types (int, float, string, boolean, complex), type conversion, and arithmetic operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Data Types\", url: \"https://www.youtube.com/watch?v=cQT33yu9pY8\" },\n          { type: \"practice\", title: \"LeetCode Easy Problems\", url: \"https://leetcode.com/problemset/all/?difficulty=Easy\" },\n          { type: \"practice\", title: \"HackerRank Data Types\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"Control Flow & Logic\",\n        content: \"Learn if/else statements, comparison operators, logical operators, ternary operators, and nested conditions.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Control Flow\", url: \"https://www.youtube.com/watch?v=AWek49wXGzI\" },\n          { type: \"practice\", title: \"LeetCode Conditional Problems\", url: \"https://leetcode.com/tag/conditional/\" },\n          { type: \"practice\", title: \"HackerRank Conditionals\", url: \"https://www.hackerrank.com/domains/python/py-if-else\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"Loops & Iteration\",\n        content: \"Master for loops, while loops, range(), enumerate(), zip(), break/continue, and nested loops.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Loops\", url: \"https://www.youtube.com/watch?v=OnDr4JpUXPc\" },\n          { type: \"practice\", title: \"LeetCode Loop Problems\", url: \"https://leetcode.com/tag/loop/\" },\n          { type: \"practice\", title: \"HackerRank Loops\", url: \"https://www.hackerrank.com/domains/python/py-loops\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"Functions & Scope\",\n        content: \"Create functions, understand parameters, return values, scope, lambda functions, and function decorators.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Functions\", url: \"https://www.youtube.com/watch?v=9Os0o3wzS_I\" },\n          { type: \"practice\", title: \"LeetCode Function Problems\", url: \"https://leetcode.com/tag/function/\" },\n          { type: \"practice\", title: \"HackerRank Functions\", url: \"https://www.hackerrank.com/domains/python/py-function\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"Data Structures - Lists\",\n        content: \"Master Python lists, list methods, list comprehensions, slicing, and advanced list operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Lists\", url: \"https://www.youtube.com/watch?v=ohCDWZgNIU0\" },\n          { type: \"practice\", title: \"LeetCode Array Problems\", url: \"https://leetcode.com/tag/array/\" },\n          { type: \"practice\", title: \"HackerRank Lists\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"Data Structures - Tuples & Sets\",\n        content: \"Learn tuples, sets, immutable data structures, set operations, and when to use each structure.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Tuples & Sets\", url: \"https://www.youtube.com/watch?v=daefaLgNkw0\" },\n          { type: \"practice\", title: \"LeetCode Set Problems\", url: \"https://leetcode.com/tag/set/\" },\n          { type: \"practice\", title: \"HackerRank Tuples\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" }\n        ]\n      },\n      // Week 2: Advanced Data Structures\n      {\n        dayNumber: 8,\n        title: \"Dictionaries & Hash Tables\",\n        content: \"Master dictionaries, dictionary methods, hash tables, key-value operations, and dictionary comprehensions.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Dictionaries\", url: \"https://www.youtube.com/watch?v=daefaLgNkw0\" },\n          { type: \"practice\", title: \"LeetCode Hash Table\", url: \"https://leetcode.com/tag/hash-table/\" },\n          { type: \"practice\", title: \"HackerRank Dictionaries\", url: \"https://www.hackerrank.com/domains/python/py-basic-data-types\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"String Manipulation & Regex\",\n        content: \"Master string methods, formatting, regular expressions, text processing, and string algorithms.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Strings\", url: \"https://www.youtube.com/watch?v=k9TUPpGqYTo\" },\n          { type: \"practice\", title: \"LeetCode String Problems\", url: \"https://leetcode.com/tag/string/\" },\n          { type: \"practice\", title: \"HackerRank Strings\", url: \"https://www.hackerrank.com/domains/python/py-strings\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"File I/O & Exception Handling\",\n        content: \"Learn file operations, reading/writing files, exception handling, context managers, and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python File I/O\", url: \"https://www.youtube.com/watch?v=Uh2ebFW8OYM\" },\n          { type: \"practice\", title: \"HackerRank File I/O\", url: \"https://www.hackerrank.com/domains/python/py-io\" },\n          { type: \"documentation\", title: \"Python File Operations\", url: \"https://docs.python.org/3/tutorial/inputoutput.html\" }\n        ]\n      },\n      {\n        dayNumber: 11,\n        title: \"Object-Oriented Programming\",\n        content: \"Learn classes, objects, inheritance, polymorphism, encapsulation, and OOP design principles.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python OOP\", url: \"https://www.youtube.com/watch?v=ZDa-Z5JzLYM\" },\n          { type: \"practice\", title: \"LeetCode OOP Problems\", url: \"https://leetcode.com/tag/object-oriented-programming/\" },\n          { type: \"practice\", title: \"HackerRank Classes\", url: \"https://www.hackerrank.com/domains/python/py-classes\" }\n        ]\n      },\n      {\n        dayNumber: 12,\n        title: \"Advanced OOP Concepts\",\n        content: \"Learn abstract classes, interfaces, multiple inheritance, method overriding, and design patterns.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Python OOP\", url: \"https://www.youtube.com/watch?v=ZDa-Z5JzLYM\" },\n          { type: \"practice\", title: \"LeetCode Design Patterns\", url: \"https://leetcode.com/tag/design/\" },\n          { type: \"documentation\", title: \"Python OOP Guide\", url: \"https://docs.python.org/3/tutorial/classes.html\" }\n        ]\n      },\n      {\n        dayNumber: 13,\n        title: \"Modules & Packages\",\n        content: \"Learn about modules, packages, imports, __init__.py, and how to structure large Python projects.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Modules\", url: \"https://www.youtube.com/watch?v=1u6G3oybm5M\" },\n          { type: \"practice\", title: \"HackerRank Modules\", url: \"https://www.hackerrank.com/domains/python/py-modules\" },\n          { type: \"documentation\", title: \"Python Modules Guide\", url: \"https://docs.python.org/3/tutorial/modules.html\" }\n        ]\n      },\n      {\n        dayNumber: 14,\n        title: \"Error Handling & Debugging\",\n        content: \"Master exception handling, debugging techniques, logging, and error management best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Error Handling\", url: \"https://www.youtube.com/watch?v=NIWwJbo-9_8\" },\n          { type: \"practice\", title: \"HackerRank Exceptions\", url: \"https://www.hackerrank.com/domains/python/py-exceptions\" },\n          { type: \"documentation\", title: \"Python Error Handling\", url: \"https://docs.python.org/3/tutorial/errors.html\" }\n        ]\n      },\n      // Week 3: Algorithms & Data Structures\n      {\n        dayNumber: 15,\n        title: \"Algorithm Fundamentals\",\n        content: \"Learn algorithm analysis, Big O notation, time/space complexity, and basic algorithm design patterns.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Algorithm Analysis\", url: \"https://www.youtube.com/watch?v=8hly31xKli0\" },\n          { type: \"practice\", title: \"LeetCode Algorithm Problems\", url: \"https://leetcode.com/problemset/all/\" },\n          { type: \"practice\", title: \"HackerRank Algorithms\", url: \"https://www.hackerrank.com/domains/algorithms\" }\n        ]\n      },\n      {\n        dayNumber: 16,\n        title: \"Sorting Algorithms\",\n        content: \"Master bubble sort, selection sort, insertion sort, merge sort, quick sort, and heap sort implementations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Sorting Algorithms\", url: \"https://www.youtube.com/watch?v=kPRA0W1kECg\" },\n          { type: \"practice\", title: \"LeetCode Sorting\", url: \"https://leetcode.com/tag/sorting/\" },\n          { type: \"practice\", title: \"HackerRank Sorting\", url: \"https://www.hackerrank.com/domains/algorithms/sorting\" }\n        ]\n      },\n      {\n        dayNumber: 17,\n        title: \"Searching Algorithms\",\n        content: \"Learn linear search, binary search, depth-first search (DFS), breadth-first search (BFS), and graph traversal.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Searching Algorithms\", url: \"https://www.youtube.com/watch?v=P3YID7liBug\" },\n          { type: \"practice\", title: \"LeetCode Search Problems\", url: \"https://leetcode.com/tag/binary-search/\" },\n          { type: \"practice\", title: \"HackerRank Search\", url: \"https://www.hackerrank.com/domains/algorithms/search\" }\n        ]\n      },\n      {\n        dayNumber: 18,\n        title: \"Dynamic Programming\",\n        content: \"Learn dynamic programming concepts, memoization, tabulation, and solve classic DP problems.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Dynamic Programming\", url: \"https://www.youtube.com/watch?v=oBt53YbR9Kk\" },\n          { type: \"practice\", title: \"LeetCode DP Problems\", url: \"https://leetcode.com/tag/dynamic-programming/\" },\n          { type: \"practice\", title: \"HackerRank DP\", url: \"https://www.hackerrank.com/domains/algorithms/dynamic-programming\" }\n        ]\n      },\n      {\n        dayNumber: 19,\n        title: \"Graph Algorithms\",\n        content: \"Learn graph representation, DFS, BFS, shortest path algorithms (Dijkstra), and minimum spanning trees.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Graph Algorithms\", url: \"https://www.youtube.com/watch?v=tWVWeAqZ0WU\" },\n          { type: \"practice\", title: \"LeetCode Graph Problems\", url: \"https://leetcode.com/tag/graph/\" },\n          { type: \"practice\", title: \"HackerRank Graphs\", url: \"https://www.hackerrank.com/domains/algorithms/graph\" }\n        ]\n      },\n      {\n        dayNumber: 20,\n        title: \"Tree Algorithms\",\n        content: \"Master binary trees, tree traversal (preorder, inorder, postorder), BST operations, and tree algorithms.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Tree Algorithms\", url: \"https://www.youtube.com/watch?v=9RHO6jU--GU\" },\n          { type: \"practice\", title: \"LeetCode Tree Problems\", url: \"https://leetcode.com/tag/tree/\" },\n          { type: \"practice\", title: \"HackerRank Trees\", url: \"https://www.hackerrank.com/domains/algorithms/trees\" }\n        ]\n      },\n      {\n        dayNumber: 21,\n        title: \"Linked Lists & Stacks\",\n        content: \"Learn linked list implementation, stack operations, queue operations, and their applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Linked Lists\", url: \"https://www.youtube.com/watch?v=Hj_rA0dhr2I\" },\n          { type: \"practice\", title: \"LeetCode Linked List\", url: \"https://leetcode.com/tag/linked-list/\" },\n          { type: \"practice\", title: \"HackerRank Linked Lists\", url: \"https://www.hackerrank.com/domains/algorithms/linked-lists\" }\n        ]\n      },\n      // Week 4: Web Development & Projects\n      {\n        dayNumber: 22,\n        title: \"Web Development with Flask\",\n        content: \"Learn Flask framework, routing, templates, forms, and build your first web application.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Flask Tutorial\", url: \"https://www.youtube.com/watch?v=Z1RJmh_OqeA\" },\n          { type: \"practice\", title: \"Flask Documentation\", url: \"https://flask.palletsprojects.com/\" },\n          { type: \"practice\", title: \"Build a Flask App\", url: \"https://www.youtube.com/watch?v=Z1RJmh_OqeA\" }\n        ]\n      },\n      {\n        dayNumber: 23,\n        title: \"Database Integration\",\n        content: \"Learn SQLite, database operations, ORM with SQLAlchemy, and database design principles.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Database\", url: \"https://www.youtube.com/watch?v=pd-0G0MigUA\" },\n          { type: \"practice\", title: \"SQLAlchemy Tutorial\", url: \"https://docs.sqlalchemy.org/\" },\n          { type: \"practice\", title: \"Build a Database App\", url: \"https://www.youtube.com/watch?v=pd-0G0MigUA\" }\n        ]\n      },\n      {\n        dayNumber: 24,\n        title: \"API Development\",\n        content: \"Learn REST API design, HTTP methods, JSON handling, API testing, and documentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"REST API with Flask\", url: \"https://www.youtube.com/watch?v=GMppyAP6YPE\" },\n          { type: \"practice\", title: \"Flask-RESTful\", url: \"https://flask-restful.readthedocs.io/\" },\n          { type: \"practice\", title: \"API Testing\", url: \"https://www.youtube.com/watch?v=GMppyAP6YPE\" }\n        ]\n      },\n      {\n        dayNumber: 25,\n        title: \"Data Analysis with Pandas\",\n        content: \"Learn pandas for data manipulation, data cleaning, analysis, and visualization basics.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Pandas Tutorial\", url: \"https://www.youtube.com/watch?v=vmEHCJofslg\" },\n          { type: \"practice\", title: \"Pandas Documentation\", url: \"https://pandas.pydata.org/docs/\" },\n          { type: \"practice\", title: \"Data Analysis Project\", url: \"https://www.youtube.com/watch?v=vmEHCJofslg\" }\n        ]\n      },\n      {\n        dayNumber: 26,\n        title: \"Testing & Debugging\",\n        content: \"Learn unit testing with pytest, test-driven development, debugging techniques, and code quality.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Testing\", url: \"https://www.youtube.com/watch?v=6tNS--WetLI\" },\n          { type: \"practice\", title: \"Pytest Documentation\", url: \"https://docs.pytest.org/\" },\n          { type: \"practice\", title: \"Write Tests\", url: \"https://www.youtube.com/watch?v=6tNS--WetLI\" }\n        ]\n      },\n      {\n        dayNumber: 27,\n        title: \"Package Management & Deployment\",\n        content: \"Learn pip, virtual environments, requirements.txt, and basic deployment strategies.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Deployment\", url: \"https://www.youtube.com/watch?v=YYXdXT2l-Gg\" },\n          { type: \"practice\", title: \"Deploy to Heroku\", url: \"https://devcenter.heroku.com/articles/getting-started-with-python\" },\n          { type: \"documentation\", title: \"Python Packaging\", url: \"https://packaging.python.org/\" }\n        ]\n      },\n      {\n        dayNumber: 28,\n        title: \"Advanced Python Features\",\n        content: \"Learn decorators, generators, iterators, context managers, and advanced Python concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Python\", url: \"https://www.youtube.com/watch?v=HGOBQPFzWKo\" },\n          { type: \"practice\", title: \"LeetCode Advanced\", url: \"https://leetcode.com/problemset/all/?difficulty=Hard\" },\n          { type: \"documentation\", title: \"Python Advanced\", url: \"https://docs.python.org/3/tutorial/classes.html\" }\n        ]\n      },\n      {\n        dayNumber: 29,\n        title: \"Final Project Planning\",\n        content: \"Plan and design a comprehensive Python project that demonstrates all learned concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Planning\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Git & Version Control\", url: \"https://www.youtube.com/watch?v=8JJ101D3knE\" }\n        ]\n      },\n      {\n        dayNumber: 30,\n        title: \"Final Project Implementation\",\n        content: \"Build and deploy your final Python project. Review all concepts and prepare for advanced topics.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Project Deployment\", url: \"https://www.youtube.com/watch?v=YYXdXT2l-Gg\" },\n          { type: \"practice\", title: \"Code Review\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Development\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" }\n        ]\n      }\n    ];\n\n    for (const taskData of python30DayTasks) {\n      await storage.createTask({\n        challengeId: python30Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create tasks for 60-Day Python Data Science\n    console.log(\"📝 Creating tasks for 60-Day Python Data Science...\");\n    const python60DayTasks = [\n      // Week 1: Foundation & Setup\n      {\n        dayNumber: 1,\n        title: \"Data Science Environment Setup\",\n        content: \"Set up Python data science environment with Anaconda, Jupyter notebooks, and essential libraries (pandas, numpy, matplotlib, seaborn).\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Science Setup\", url: \"https://www.youtube.com/watch?v=5JnMutdy6Fw\" },\n          { type: \"practice\", title: \"Jupyter Tutorial\", url: \"https://jupyter.org/documentation\" },\n          { type: \"documentation\", title: \"Anaconda Installation\", url: \"https://docs.anaconda.com/\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"Python Fundamentals for Data Science\",\n        content: \"Review Python basics, data types, control structures, functions, and object-oriented programming for data science applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Python for Data Science\", url: \"https://www.youtube.com/watch?v=LHBE6Q9XlzI\" },\n          { type: \"practice\", title: \"Python Data Science Basics\", url: \"https://www.kaggle.com/learn/python\" },\n          { type: \"practice\", title: \"HackerRank Python\", url: \"https://www.hackerrank.com/domains/python\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"NumPy Fundamentals\",\n        content: \"Master NumPy arrays, mathematical operations, broadcasting, array manipulation, and numerical computing foundations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"NumPy Tutorial\", url: \"https://www.youtube.com/watch?v=QUT1VHiLmmI\" },\n          { type: \"practice\", title: \"NumPy Exercises\", url: \"https://www.w3resource.com/python-exercises/numpy/\" },\n          { type: \"practice\", title: \"NumPy Practice\", url: \"https://www.kaggle.com/learn/numpy\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"Pandas DataFrames - Part 1\",\n        content: \"Learn pandas DataFrames, data loading from CSV/Excel, basic operations, indexing, and data exploration.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Pandas Tutorial\", url: \"https://www.youtube.com/watch?v=vmEHCJofslg\" },\n          { type: \"practice\", title: \"Pandas Exercises\", url: \"https://www.w3resource.com/python-exercises/pandas/\" },\n          { type: \"practice\", title: \"Kaggle Pandas\", url: \"https://www.kaggle.com/learn/pandas\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"Pandas DataFrames - Part 2\",\n        content: \"Advanced pandas operations: data cleaning, handling missing values, data transformation, and grouping operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Pandas\", url: \"https://www.youtube.com/watch?v=vmEHCJofslg\" },\n          { type: \"practice\", title: \"Data Cleaning\", url: \"https://www.kaggle.com/learn/data-cleaning\" },\n          { type: \"practice\", title: \"Pandas GroupBy\", url: \"https://pandas.pydata.org/docs/user_guide/groupby.html\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"Data Visualization with Matplotlib\",\n        content: \"Learn matplotlib for creating plots, charts, histograms, scatter plots, and basic data visualization techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Matplotlib Tutorial\", url: \"https://www.youtube.com/watch?v=UO98lJQ3QGI\" },\n          { type: \"practice\", title: \"Matplotlib Exercises\", url: \"https://www.w3resource.com/python-exercises/matplotlib/\" },\n          { type: \"practice\", title: \"Data Visualization\", url: \"https://www.kaggle.com/learn/data-visualization\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"Advanced Visualization with Seaborn\",\n        content: \"Master seaborn for statistical data visualization, heatmaps, pair plots, and advanced plotting techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Seaborn Tutorial\", url: \"https://www.youtube.com/watch?v=6GUZXDef2U0\" },\n          { type: \"practice\", title: \"Seaborn Gallery\", url: \"https://seaborn.pydata.org/examples/index.html\" },\n          { type: \"practice\", title: \"Statistical Plots\", url: \"https://seaborn.pydata.org/tutorial.html\" }\n        ]\n      },\n      // Week 2: Data Analysis & Statistics\n      {\n        dayNumber: 8,\n        title: \"Descriptive Statistics\",\n        content: \"Learn descriptive statistics, measures of central tendency, variability, distribution analysis, and statistical summaries.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Descriptive Statistics\", url: \"https://www.youtube.com/watch?v=xxpc-HPKN28\" },\n          { type: \"practice\", title: \"Statistics with Python\", url: \"https://www.kaggle.com/learn/statistical-thinking\" },\n          { type: \"practice\", title: \"Pandas Statistics\", url: \"https://pandas.pydata.org/docs/user_guide/basic.html#descriptive-statistics\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"Data Cleaning & Preprocessing\",\n        content: \"Master data cleaning techniques, handling outliers, data validation, and preprocessing for machine learning.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Cleaning\", url: \"https://www.youtube.com/watch?v=8o2s9vXa0Qk\" },\n          { type: \"practice\", title: \"Data Cleaning Project\", url: \"https://www.kaggle.com/learn/data-cleaning\" },\n          { type: \"practice\", title: \"Outlier Detection\", url: \"https://www.kaggle.com/code/nareshbhat/outlier-the-silent-killer\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"Exploratory Data Analysis (EDA)\",\n        content: \"Learn EDA techniques, data profiling, correlation analysis, and comprehensive data exploration methods.\",\n        resourceLinks: [\n          { type: \"video\", title: \"EDA Tutorial\", url: \"https://www.youtube.com/watch?v=xi0vhXFPegw\" },\n          { type: \"practice\", title: \"EDA Project\", url: \"https://www.kaggle.com/learn/exploratory-data-analysis\" },\n          { type: \"practice\", title: \"Pandas Profiling\", url: \"https://pandas-profiling.github.io/pandas-profiling/docs/\" }\n        ]\n      },\n      {\n        dayNumber: 11,\n        title: \"Feature Engineering\",\n        content: \"Learn feature creation, transformation, selection, and engineering techniques for machine learning.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Feature Engineering\", url: \"https://www.youtube.com/watch?v=z0sJ6xV8ba0\" },\n          { type: \"practice\", title: \"Feature Engineering\", url: \"https://www.kaggle.com/learn/feature-engineering\" },\n          { type: \"practice\", title: \"Feature Selection\", url: \"https://scikit-learn.org/stable/modules/feature_selection.html\" }\n        ]\n      },\n      {\n        dayNumber: 12,\n        title: \"Time Series Analysis\",\n        content: \"Learn time series data handling, decomposition, trend analysis, and seasonal patterns in data.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Time Series Analysis\", url: \"https://www.youtube.com/watch?v=UFuo7EHI8zc\" },\n          { type: \"practice\", title: \"Time Series Project\", url: \"https://www.kaggle.com/learn/time-series\" },\n          { type: \"practice\", title: \"Pandas Time Series\", url: \"https://pandas.pydata.org/docs/user_guide/timeseries.html\" }\n        ]\n      },\n      {\n        dayNumber: 13,\n        title: \"Statistical Testing\",\n        content: \"Learn hypothesis testing, t-tests, chi-square tests, ANOVA, and statistical significance testing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Statistical Testing\", url: \"https://www.youtube.com/watch?v=xxpc-HPKN28\" },\n          { type: \"practice\", title: \"SciPy Statistics\", url: \"https://docs.scipy.org/doc/scipy/reference/stats.html\" },\n          { type: \"practice\", title: \"Statistical Tests\", url: \"https://www.kaggle.com/code/nareshbhat/statistical-tests\" }\n        ]\n      },\n      {\n        dayNumber: 14,\n        title: \"Data Visualization Project\",\n        content: \"Create comprehensive data visualization projects using real datasets and advanced plotting techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Viz Project\", url: \"https://www.youtube.com/watch?v=UO98lJQ3QGI\" },\n          { type: \"practice\", title: \"Viz Project\", url: \"https://www.kaggle.com/learn/data-visualization\" },\n          { type: \"practice\", title: \"Plotly Tutorial\", url: \"https://plotly.com/python/\" }\n        ]\n      },\n      // Week 3: Machine Learning Fundamentals\n      {\n        dayNumber: 15,\n        title: \"Introduction to Machine Learning\",\n        content: \"Learn ML concepts, supervised vs unsupervised learning, training/testing data, and model evaluation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"ML Introduction\", url: \"https://www.youtube.com/watch?v=ukzFI9rgwfU\" },\n          { type: \"practice\", title: \"ML Basics\", url: \"https://www.kaggle.com/learn/intro-to-machine-learning\" },\n          { type: \"practice\", title: \"Scikit-learn Tutorial\", url: \"https://scikit-learn.org/stable/tutorial/index.html\" }\n        ]\n      },\n      {\n        dayNumber: 16,\n        title: \"Linear Regression\",\n        content: \"Master linear regression, simple and multiple regression, assumptions, and model interpretation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Linear Regression\", url: \"https://www.youtube.com/watch?v=8jazNUpO3lQ\" },\n          { type: \"practice\", title: \"Regression Project\", url: \"https://www.kaggle.com/learn/linear-regression\" },\n          { type: \"practice\", title: \"Scikit-learn Regression\", url: \"https://scikit-learn.org/stable/modules/linear_model.html\" }\n        ]\n      },\n      {\n        dayNumber: 17,\n        title: \"Logistic Regression\",\n        content: \"Learn logistic regression for classification, probability estimation, and binary classification problems.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Logistic Regression\", url: \"https://www.youtube.com/watch?v=yIYKR4sgzI8\" },\n          { type: \"practice\", title: \"Classification Project\", url: \"https://www.kaggle.com/learn/logistic-regression\" },\n          { type: \"practice\", title: \"Binary Classification\", url: \"https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\" }\n        ]\n      },\n      {\n        dayNumber: 18,\n        title: \"Decision Trees\",\n        content: \"Learn decision trees, tree construction, pruning, and interpretation of tree-based models.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Decision Trees\", url: \"https://www.youtube.com/watch?v=ZVR2Way4nwQ\" },\n          { type: \"practice\", title: \"Tree Project\", url: \"https://www.kaggle.com/learn/decision-trees\" },\n          { type: \"practice\", title: \"Scikit-learn Trees\", url: \"https://scikit-learn.org/stable/modules/tree.html\" }\n        ]\n      },\n      {\n        dayNumber: 19,\n        title: \"Random Forests\",\n        content: \"Master random forests, ensemble methods, bagging, and advanced tree-based algorithms.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Random Forests\", url: \"https://www.youtube.com/watch?v=J4Wdy0Wc_xQ\" },\n          { type: \"practice\", title: \"Ensemble Methods\", url: \"https://www.kaggle.com/learn/random-forests\" },\n          { type: \"practice\", title: \"Random Forest\", url: \"https://scikit-learn.org/stable/modules/ensemble.html#forest\" }\n        ]\n      },\n      {\n        dayNumber: 20,\n        title: \"Model Evaluation & Validation\",\n        content: \"Learn cross-validation, metrics (accuracy, precision, recall, F1), and model evaluation techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Model Evaluation\", url: \"https://www.youtube.com/watch?v=HBi-p5BqK4I\" },\n          { type: \"practice\", title: \"Model Validation\", url: \"https://www.kaggle.com/learn/model-validation\" },\n          { type: \"practice\", title: \"Evaluation Metrics\", url: \"https://scikit-learn.org/stable/modules/model_evaluation.html\" }\n        ]\n      },\n      {\n        dayNumber: 21,\n        title: \"Clustering Algorithms\",\n        content: \"Learn K-means clustering, hierarchical clustering, and unsupervised learning techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Clustering\", url: \"https://www.youtube.com/watch?v=4b5d3muHzm4\" },\n          { type: \"practice\", title: \"Clustering Project\", url: \"https://www.kaggle.com/learn/clustering\" },\n          { type: \"practice\", title: \"K-means\", url: \"https://scikit-learn.org/stable/modules/clustering.html#k-means\" }\n        ]\n      },\n      // Week 4: Advanced Machine Learning\n      {\n        dayNumber: 22,\n        title: \"Support Vector Machines\",\n        content: \"Learn SVM for classification, kernel methods, and support vector regression.\",\n        resourceLinks: [\n          { type: \"video\", title: \"SVM Tutorial\", url: \"https://www.youtube.com/watch?v=efR1C6CvhmE\" },\n          { type: \"practice\", title: \"SVM Project\", url: \"https://www.kaggle.com/learn/support-vector-machines\" },\n          { type: \"practice\", title: \"SVM Implementation\", url: \"https://scikit-learn.org/stable/modules/svm.html\" }\n        ]\n      },\n      {\n        dayNumber: 23,\n        title: \"Neural Networks with Scikit-learn\",\n        content: \"Introduction to neural networks, MLPClassifier, and basic deep learning concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Neural Networks\", url: \"https://www.youtube.com/watch?v=aircAruvnKk\" },\n          { type: \"practice\", title: \"Neural Networks\", url: \"https://www.kaggle.com/learn/intro-to-deep-learning\" },\n          { type: \"practice\", title: \"MLP\", url: \"https://scikit-learn.org/stable/modules/neural_networks.html\" }\n        ]\n      },\n      {\n        dayNumber: 24,\n        title: \"Dimensionality Reduction\",\n        content: \"Learn PCA, t-SNE, LDA, and dimensionality reduction techniques for data visualization and preprocessing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"PCA Tutorial\", url: \"https://www.youtube.com/watch?v=HMOI_lkzW08\" },\n          { type: \"practice\", title: \"Dimensionality Reduction\", url: \"https://www.kaggle.com/learn/dimensionality-reduction\" },\n          { type: \"practice\", title: \"PCA Implementation\", url: \"https://scikit-learn.org/stable/modules/decomposition.html#pca\" }\n        ]\n      },\n      {\n        dayNumber: 25,\n        title: \"Hyperparameter Tuning\",\n        content: \"Learn grid search, random search, and hyperparameter optimization techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Hyperparameter Tuning\", url: \"https://www.youtube.com/watch?v=0B5eIE_1vpU\" },\n          { type: \"practice\", title: \"Parameter Tuning\", url: \"https://www.kaggle.com/learn/parameter-tuning\" },\n          { type: \"practice\", title: \"Grid Search\", url: \"https://scikit-learn.org/stable/modules/grid_search.html\" }\n        ]\n      },\n      {\n        dayNumber: 26,\n        title: \"Model Selection & Ensemble Methods\",\n        content: \"Learn model selection, ensemble methods, voting classifiers, and advanced ensemble techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Ensemble Methods\", url: \"https://www.youtube.com/watch?v=Un9zObFjBH0\" },\n          { type: \"practice\", title: \"Ensemble Learning\", url: \"https://www.kaggle.com/learn/ensemble-methods\" },\n          { type: \"practice\", title: \"Voting Classifier\", url: \"https://scikit-learn.org/stable/modules/ensemble.html#voting-classifier\" }\n        ]\n      },\n      {\n        dayNumber: 27,\n        title: \"Deep Learning with TensorFlow/Keras\",\n        content: \"Introduction to deep learning, neural networks, and building models with TensorFlow/Keras.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Deep Learning\", url: \"https://www.youtube.com/watch?v=aircAruvnKk\" },\n          { type: \"practice\", title: \"TensorFlow Tutorial\", url: \"https://www.tensorflow.org/tutorials\" },\n          { type: \"practice\", title: \"Keras Guide\", url: \"https://keras.io/guides/\" }\n        ]\n      },\n      {\n        dayNumber: 28,\n        title: \"Natural Language Processing\",\n        content: \"Learn text preprocessing, tokenization, word embeddings, and basic NLP techniques.\",\n        resourceLinks: [\n          { type: \"video\", title: \"NLP Tutorial\", url: \"https://www.youtube.com/watch?v=oWVTO_69U4o\" },\n          { type: \"practice\", title: \"NLP Project\", url: \"https://www.kaggle.com/learn/natural-language-processing\" },\n          { type: \"practice\", title: \"NLTK Tutorial\", url: \"https://www.nltk.org/\" }\n        ]\n      },\n      {\n        dayNumber: 29,\n        title: \"Computer Vision Basics\",\n        content: \"Introduction to computer vision, image processing, and convolutional neural networks.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Computer Vision\", url: \"https://www.youtube.com/watch?v=aircAruvnKk\" },\n          { type: \"practice\", title: \"CV Project\", url: \"https://www.kaggle.com/learn/computer-vision\" },\n          { type: \"practice\", title: \"OpenCV Tutorial\", url: \"https://opencv.org/\" }\n        ]\n      },\n      {\n        dayNumber: 30,\n        title: \"Final Data Science Project\",\n        content: \"Complete end-to-end data science project from data collection to model deployment and presentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Data Science Project\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Project\", url: \"https://www.kaggle.com/learn/data-science-project\" },\n          { type: \"practice\", title: \"Project Presentation\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" }\n        ]\n      }\n    ];\n\n    for (const taskData of python60DayTasks) {\n      await storage.createTask({\n        challengeId: python60Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create tasks for 10-Day JavaScript Mastery\n    console.log(\"📝 Creating tasks for 10-Day JavaScript Mastery...\");\n    const javascript10DayTasks = [\n      {\n        dayNumber: 1,\n        title: \"JavaScript Setup & Basics\",\n        content: \"Set up JavaScript development environment, learn syntax, variables, data types, and basic operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Tutorial\", url: \"https://www.youtube.com/watch?v=hdI2bqOjy3c\" },\n          { type: \"practice\", title: \"HackerRank JavaScript\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"practice\", title: \"LeetCode Easy Problems\", url: \"https://leetcode.com/problemset/all/?difficulty=Easy\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"Functions & Scope\",\n        content: \"Learn function declarations, expressions, arrow functions, scope, closures, and higher-order functions.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Functions\", url: \"https://www.youtube.com/watch?v=N8ap4k_1QEQ\" },\n          { type: \"practice\", title: \"HackerRank Functions\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"practice\", title: \"LeetCode Function Problems\", url: \"https://leetcode.com/tag/function/\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"Objects & Arrays\",\n        content: \"Master object creation, properties, methods, array methods, destructuring, and spread operator.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Objects\", url: \"https://www.youtube.com/watch?v=PFmuCDHHpwk\" },\n          { type: \"practice\", title: \"HackerRank Arrays\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"practice\", title: \"LeetCode Array Problems\", url: \"https://leetcode.com/tag/array/\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"ES6+ Features\",\n        content: \"Learn let/const, template literals, destructuring, default parameters, and modern JavaScript features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"ES6 Tutorial\", url: \"https://www.youtube.com/watch?v=WZQc7RUAg18\" },\n          { type: \"practice\", title: \"ES6 Exercises\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"documentation\", title: \"MDN ES6 Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"DOM Manipulation\",\n        content: \"Learn DOM selection, manipulation, event handling, and creating interactive web pages.\",\n        resourceLinks: [\n          { type: \"video\", title: \"DOM Tutorial\", url: \"https://www.youtube.com/watch?v=0ik6X4DJKCc\" },\n          { type: \"practice\", title: \"DOM Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Interactive Web Pages\", url: \"https://www.youtube.com/watch?v=0ik6X4DJKCc\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"Async JavaScript\",\n        content: \"Learn callbacks, promises, async/await, and handling asynchronous operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Async JavaScript\", url: \"https://www.youtube.com/watch?v=PoRJizFvM7s\" },\n          { type: \"practice\", title: \"Promise Exercises\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"practice\", title: \"Async Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"Error Handling & Debugging\",\n        content: \"Learn try/catch blocks, error handling, debugging techniques, and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Error Handling\", url: \"https://www.youtube.com/watch?v=NIWwJbo-9_8\" },\n          { type: \"practice\", title: \"Debugging Exercises\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"documentation\", title: \"JavaScript Debugging\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide\" }\n        ]\n      },\n      {\n        dayNumber: 8,\n        title: \"Modules & Imports\",\n        content: \"Learn ES6 modules, import/export, module systems, and code organization.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Modules\", url: \"https://www.youtube.com/watch?v=s9kNnd6LO7M\" },\n          { type: \"practice\", title: \"Module Projects\", url: \"https://www.hackerrank.com/domains/javascript\" },\n          { type: \"documentation\", title: \"MDN Modules\", url: \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"APIs & Fetch\",\n        content: \"Learn HTTP requests, REST APIs, fetch API, JSON handling, and working with external data.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript APIs\", url: \"https://www.youtube.com/watch?v=Oive66jrwBs\" },\n          { type: \"practice\", title: \"API Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Fetch Exercises\", url: \"https://www.hackerrank.com/domains/javascript\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"Final JavaScript Project\",\n        content: \"Build a complete JavaScript application combining all concepts learned. Create an interactive web app.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Project\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Final Challenge\", url: \"https://www.hackerrank.com/domains/javascript\" }\n        ]\n      }\n    ];\n\n    for (const taskData of javascript10DayTasks) {\n      await storage.createTask({\n        challengeId: javascript10Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create tasks for 30-Day Java Development\n    console.log(\"📝 Creating tasks for 30-Day Java Development...\");\n    const java30DayTasks = [\n      // Week 1: Java Fundamentals\n      {\n        dayNumber: 1,\n        title: \"Java Setup & Environment\",\n        content: \"Set up Java development environment with JDK, IDE (IntelliJ/Eclipse), and understand the Java ecosystem.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Setup Guide\", url: \"https://www.youtube.com/watch?v=H3Q2QRmyYho\" },\n          { type: \"practice\", title: \"HackerRank Java\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Oracle Java Docs\", url: \"https://docs.oracle.com/en/java/\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"Java Basics & Syntax\",\n        content: \"Learn Java syntax, variables, data types, operators, and basic input/output operations.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Basics\", url: \"https://www.youtube.com/watch?v=eIrMbAQSU34\" },\n          { type: \"practice\", title: \"LeetCode Java\", url: \"https://leetcode.com/problemset/all/\" },\n          { type: \"practice\", title: \"Java Exercises\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"Control Structures\",\n        content: \"Master if/else statements, switch cases, loops (for, while, do-while), and control flow.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Control Flow\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Control Flow Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"practice\", title: \"LeetCode Problems\", url: \"https://leetcode.com/problemset/all/\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"Methods & Functions\",\n        content: \"Learn method creation, parameters, return values, method overloading, and recursion.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Methods\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Method Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"practice\", title: \"Recursion Problems\", url: \"https://leetcode.com/tag/recursion/\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"Arrays & Collections\",\n        content: \"Master arrays, ArrayList, LinkedList, and basic collection framework concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Arrays\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Array Problems\", url: \"https://leetcode.com/tag/array/\" },\n          { type: \"practice\", title: \"Collection Exercises\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"Object-Oriented Programming\",\n        content: \"Learn classes, objects, constructors, inheritance, polymorphism, and encapsulation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java OOP\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"OOP Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"practice\", title: \"Design Patterns\", url: \"https://leetcode.com/tag/design/\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"Advanced OOP Concepts\",\n        content: \"Learn abstract classes, interfaces, method overriding, and advanced OOP principles.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Java OOP\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Interface Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java OOP Guide\", url: \"https://docs.oracle.com/javase/tutorial/java/concepts/\" }\n        ]\n      },\n      // Week 2: Data Structures & Algorithms\n      {\n        dayNumber: 8,\n        title: \"String Manipulation\",\n        content: \"Master String class, StringBuilder, string methods, and text processing in Java.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Strings\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"String Problems\", url: \"https://leetcode.com/tag/string/\" },\n          { type: \"practice\", title: \"String Exercises\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"Exception Handling\",\n        content: \"Learn try/catch blocks, custom exceptions, exception hierarchy, and error handling.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Exceptions\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Exception Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java Exception Handling\", url: \"https://docs.oracle.com/javase/tutorial/essential/exceptions/\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"File I/O Operations\",\n        content: \"Learn file reading/writing, streams, serialization, and file handling in Java.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java File I/O\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"File I/O Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java I/O Guide\", url: \"https://docs.oracle.com/javase/tutorial/essential/io/\" }\n        ]\n      },\n      {\n        dayNumber: 11,\n        title: \"Collections Framework\",\n        content: \"Master ArrayList, LinkedList, HashMap, HashSet, TreeMap, and collection interfaces.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Collections\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Collection Problems\", url: \"https://leetcode.com/tag/hash-table/\" },\n          { type: \"practice\", title: \"Collection Exercises\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      },\n      {\n        dayNumber: 12,\n        title: \"Generics & Type Safety\",\n        content: \"Learn generic classes, methods, wildcards, and type safety in Java.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Generics\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Generic Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java Generics Guide\", url: \"https://docs.oracle.com/javase/tutorial/java/generics/\" }\n        ]\n      },\n      {\n        dayNumber: 13,\n        title: \"Lambda Expressions & Streams\",\n        content: \"Learn functional programming concepts, lambda expressions, and Java 8+ features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Lambda\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Lambda Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java 8 Features\", url: \"https://docs.oracle.com/javase/8/docs/api/\" }\n        ]\n      },\n      {\n        dayNumber: 14,\n        title: \"Multithreading Basics\",\n        content: \"Learn Thread class, Runnable interface, synchronization, and basic concurrency.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Threading\", url: \"https://www.youtube.com/watch?v=ldY1g6M75Xo\" },\n          { type: \"practice\", title: \"Threading Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java Concurrency\", url: \"https://docs.oracle.com/javase/tutorial/essential/concurrency/\" }\n        ]\n      },\n      // Week 3: Advanced Java & Frameworks\n      {\n        dayNumber: 15,\n        title: \"Spring Framework Introduction\",\n        content: \"Learn Spring Boot basics, dependency injection, and building REST APIs.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Spring Boot Tutorial\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Spring Boot Project\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Spring Boot Docs\", url: \"https://spring.io/projects/spring-boot\" }\n        ]\n      },\n      {\n        dayNumber: 16,\n        title: \"Spring Data JPA\",\n        content: \"Learn JPA, Hibernate, database operations, and ORM concepts with Spring.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Spring Data JPA\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"JPA Exercises\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Spring Data JPA\", url: \"https://spring.io/projects/spring-data-jpa\" }\n        ]\n      },\n      {\n        dayNumber: 17,\n        title: \"Spring Security\",\n        content: \"Learn authentication, authorization, JWT tokens, and security in Spring applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Spring Security\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Security Project\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Spring Security Docs\", url: \"https://spring.io/projects/spring-security\" }\n        ]\n      },\n      {\n        dayNumber: 18,\n        title: \"RESTful Web Services\",\n        content: \"Learn REST API design, HTTP methods, JSON handling, and API documentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"REST API Tutorial\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"REST API Project\", url: \"https://spring.io/guides\" },\n          { type: \"practice\", title: \"API Testing\", url: \"https://www.postman.com/\" }\n        ]\n      },\n      {\n        dayNumber: 19,\n        title: \"Database Integration\",\n        content: \"Learn MySQL/PostgreSQL integration, connection pooling, and database optimization.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Database Integration\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Database Project\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Database Best Practices\", url: \"https://docs.oracle.com/javase/tutorial/jdbc/\" }\n        ]\n      },\n      {\n        dayNumber: 20,\n        title: \"Testing with JUnit\",\n        content: \"Learn unit testing, integration testing, mocking, and test-driven development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JUnit Testing\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://junit.org/junit5/\" },\n          { type: \"documentation\", title: \"JUnit Documentation\", url: \"https://junit.org/junit5/docs/current/user-guide/\" }\n        ]\n      },\n      {\n        dayNumber: 21,\n        title: \"Maven & Build Tools\",\n        content: \"Learn Maven, dependency management, build lifecycle, and project structure.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Maven Tutorial\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Maven Project\", url: \"https://maven.apache.org/guides/\" },\n          { type: \"documentation\", title: \"Maven Documentation\", url: \"https://maven.apache.org/guides/\" }\n        ]\n      },\n      // Week 4: Enterprise Development\n      {\n        dayNumber: 22,\n        title: \"Microservices Architecture\",\n        content: \"Learn microservices concepts, service communication, and distributed systems.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Microservices\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Microservices Project\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Spring Cloud\", url: \"https://spring.io/projects/spring-cloud\" }\n        ]\n      },\n      {\n        dayNumber: 23,\n        title: \"Docker & Containerization\",\n        content: \"Learn Docker, containerization, Docker Compose, and deployment strategies.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Docker Tutorial\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Docker Project\", url: \"https://docs.docker.com/get-started/\" },\n          { type: \"documentation\", title: \"Docker Documentation\", url: \"https://docs.docker.com/\" }\n        ]\n      },\n      {\n        dayNumber: 24,\n        title: \"Cloud Deployment\",\n        content: \"Learn AWS/Azure deployment, CI/CD pipelines, and cloud-native applications.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Cloud Deployment\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Cloud Project\", url: \"https://aws.amazon.com/getting-started/\" },\n          { type: \"documentation\", title: \"AWS Java Guide\", url: \"https://docs.aws.amazon.com/sdk-for-java/\" }\n        ]\n      },\n      {\n        dayNumber: 25,\n        title: \"Performance Optimization\",\n        content: \"Learn JVM tuning, memory management, profiling, and performance optimization.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Performance\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Performance Testing\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"JVM Tuning\", url: \"https://docs.oracle.com/javase/8/docs/technotes/guides/vm/\" }\n        ]\n      },\n      {\n        dayNumber: 26,\n        title: \"Design Patterns\",\n        content: \"Learn common design patterns, SOLID principles, and architectural patterns.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Design Patterns\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Pattern Exercises\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java Design Patterns\", url: \"https://docs.oracle.com/javase/tutorial/java/concepts/\" }\n        ]\n      },\n      {\n        dayNumber: 27,\n        title: \"Code Quality & Best Practices\",\n        content: \"Learn code review, refactoring, clean code principles, and best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Clean Code\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Code Review\", url: \"https://www.hackerrank.com/domains/java\" },\n          { type: \"documentation\", title: \"Java Best Practices\", url: \"https://docs.oracle.com/javase/tutorial/java/concepts/\" }\n        ]\n      },\n      {\n        dayNumber: 28,\n        title: \"Advanced Spring Features\",\n        content: \"Learn Spring AOP, caching, scheduling, and advanced Spring framework features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced Spring\", url: \"https://www.youtube.com/watch?v=9SGDpanrc8U\" },\n          { type: \"practice\", title: \"Advanced Spring Project\", url: \"https://spring.io/guides\" },\n          { type: \"documentation\", title: \"Spring Framework\", url: \"https://spring.io/projects/spring-framework\" }\n        ]\n      },\n      {\n        dayNumber: 29,\n        title: \"Final Project Planning\",\n        content: \"Plan and design a comprehensive Java enterprise application using all learned concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Java Project Ideas\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Planning\", url: \"https://spring.io/guides\" },\n          { type: \"practice\", title: \"Architecture Design\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      },\n      {\n        dayNumber: 30,\n        title: \"Final Project Implementation\",\n        content: \"Build and deploy a complete Java enterprise application with all modern features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Project Deployment\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Final Project\", url: \"https://spring.io/guides\" },\n          { type: \"practice\", title: \"Portfolio Development\", url: \"https://www.hackerrank.com/domains/java\" }\n        ]\n      }\n    ];\n\n    for (const taskData of java30DayTasks) {\n      await storage.createTask({\n        challengeId: java30Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create tasks for 30-Day Full-Stack Web Development\n    console.log(\"📝 Creating tasks for 30-Day Full-Stack Web Development...\");\n    const webDev30DayTasks = [\n      // Week 1: Frontend Fundamentals\n      {\n        dayNumber: 1,\n        title: \"HTML5 Fundamentals\",\n        content: \"Learn HTML5 structure, semantic elements, forms, accessibility, and modern HTML features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"HTML5 Tutorial\", url: \"https://www.youtube.com/watch?v=qz0aGYrrlhU\" },\n          { type: \"practice\", title: \"HTML Exercises\", url: \"https://www.freecodecamp.org/learn/responsive-web-design/\" },\n          { type: \"documentation\", title: \"MDN HTML Guide\", url: \"https://developer.mozilla.org/en-US/docs/Web/HTML\" }\n        ]\n      },\n      {\n        dayNumber: 2,\n        title: \"CSS3 & Styling\",\n        content: \"Master CSS3 properties, flexbox, grid, animations, and responsive design principles.\",\n        resourceLinks: [\n          { type: \"video\", title: \"CSS3 Tutorial\", url: \"https://www.youtube.com/watch?v=1Rs2ND1ryYc\" },\n          { type: \"practice\", title: \"CSS Grid Garden\", url: \"https://cssgridgarden.com/\" },\n          { type: \"practice\", title: \"Flexbox Froggy\", url: \"https://flexboxfroggy.com/\" }\n        ]\n      },\n      {\n        dayNumber: 3,\n        title: \"JavaScript ES6+\",\n        content: \"Learn modern JavaScript, ES6+ features, modules, and advanced JavaScript concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"JavaScript ES6\", url: \"https://www.youtube.com/watch?v=hdI2bqOjy3c\" },\n          { type: \"practice\", title: \"JavaScript Exercises\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"LeetCode JavaScript\", url: \"https://leetcode.com/problemset/all/\" }\n        ]\n      },\n      {\n        dayNumber: 4,\n        title: \"DOM Manipulation\",\n        content: \"Master DOM selection, manipulation, event handling, and creating interactive web pages.\",\n        resourceLinks: [\n          { type: \"video\", title: \"DOM Tutorial\", url: \"https://www.youtube.com/watch?v=0ik6X4DJKCc\" },\n          { type: \"practice\", title: \"DOM Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Interactive Web Pages\", url: \"https://www.youtube.com/watch?v=0ik6X4DJKCc\" }\n        ]\n      },\n      {\n        dayNumber: 5,\n        title: \"Responsive Design\",\n        content: \"Learn responsive design principles, media queries, mobile-first approach, and CSS frameworks.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Responsive Design\", url: \"https://www.youtube.com/watch?v=srvUrASLq0\" },\n          { type: \"practice\", title: \"Responsive Projects\", url: \"https://www.freecodecamp.org/learn/responsive-web-design/\" },\n          { type: \"practice\", title: \"Bootstrap Tutorial\", url: \"https://getbootstrap.com/docs/5.0/getting-started/introduction/\" }\n        ]\n      },\n      {\n        dayNumber: 6,\n        title: \"CSS Preprocessors\",\n        content: \"Learn Sass/SCSS, variables, mixins, nesting, and advanced CSS preprocessing.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Sass Tutorial\", url: \"https://www.youtube.com/watch?v=Zz6eOVaaelI\" },\n          { type: \"practice\", title: \"Sass Exercises\", url: \"https://sass-lang.com/guide\" },\n          { type: \"documentation\", title: \"Sass Documentation\", url: \"https://sass-lang.com/documentation\" }\n        ]\n      },\n      {\n        dayNumber: 7,\n        title: \"Build Tools & Bundlers\",\n        content: \"Learn Webpack, Vite, npm scripts, and modern build tools for web development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Webpack Tutorial\", url: \"https://www.youtube.com/watch?v=MpGLUVbqoYQ\" },\n          { type: \"practice\", title: \"Build Tool Setup\", url: \"https://webpack.js.org/guides/getting-started/\" },\n          { type: \"documentation\", title: \"Vite Documentation\", url: \"https://vitejs.dev/guide/\" }\n        ]\n      },\n      // Week 2: Frontend Frameworks\n      {\n        dayNumber: 8,\n        title: \"React Fundamentals\",\n        content: \"Learn React basics, components, JSX, props, state, and React hooks.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"React Exercises\", url: \"https://reactjs.org/tutorial/tutorial.html\" },\n          { type: \"documentation\", title: \"React Documentation\", url: \"https://reactjs.org/docs/getting-started.html\" }\n        ]\n      },\n      {\n        dayNumber: 9,\n        title: \"React Hooks & State\",\n        content: \"Master useState, useEffect, custom hooks, and advanced React state management.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Hooks\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Hooks Projects\", url: \"https://reactjs.org/docs/hooks-intro.html\" },\n          { type: \"practice\", title: \"State Management\", url: \"https://reactjs.org/docs/hooks-state.html\" }\n        ]\n      },\n      {\n        dayNumber: 10,\n        title: \"React Router & Navigation\",\n        content: \"Learn React Router, navigation, routing, and single-page application concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Router\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Router Projects\", url: \"https://reactrouter.com/en/main\" },\n          { type: \"documentation\", title: \"React Router Docs\", url: \"https://reactrouter.com/en/main\" }\n        ]\n      },\n      {\n        dayNumber: 11,\n        title: \"State Management (Redux)\",\n        content: \"Learn Redux, Redux Toolkit, global state management, and predictable state updates.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Redux Tutorial\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Redux Projects\", url: \"https://redux.js.org/tutorials/essentials/part-1-overview-concepts\" },\n          { type: \"documentation\", title: \"Redux Toolkit\", url: \"https://redux-toolkit.js.org/\" }\n        ]\n      },\n      {\n        dayNumber: 12,\n        title: \"API Integration\",\n        content: \"Learn fetch API, axios, REST API integration, and handling asynchronous data.\",\n        resourceLinks: [\n          { type: \"video\", title: \"API Integration\", url: \"https://www.youtube.com/watch?v=Oive66jrwBs\" },\n          { type: \"practice\", title: \"API Projects\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Axios Tutorial\", url: \"https://axios-http.com/docs/intro\" }\n        ]\n      },\n      {\n        dayNumber: 13,\n        title: \"Testing Frontend\",\n        content: \"Learn Jest, React Testing Library, unit testing, and testing best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Testing\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://testing-library.com/docs/react-testing-library/intro/\" },\n          { type: \"documentation\", title: \"Jest Documentation\", url: \"https://jestjs.io/docs/getting-started\" }\n        ]\n      },\n      {\n        dayNumber: 14,\n        title: \"Frontend Project\",\n        content: \"Build a complete React application with routing, state management, and API integration.\",\n        resourceLinks: [\n          { type: \"video\", title: \"React Project\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Portfolio Project\", url: \"https://reactjs.org/tutorial/tutorial.html\" },\n          { type: \"practice\", title: \"Project Ideas\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" }\n        ]\n      },\n      // Week 3: Backend Development\n      {\n        dayNumber: 15,\n        title: \"Node.js Fundamentals\",\n        content: \"Learn Node.js, npm, modules, file system operations, and server-side JavaScript.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Node.js Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Node.js Exercises\", url: \"https://nodejs.org/en/docs/guides/\" },\n          { type: \"documentation\", title: \"Node.js Documentation\", url: \"https://nodejs.org/en/docs/\" }\n        ]\n      },\n      {\n        dayNumber: 16,\n        title: \"Express.js Framework\",\n        content: \"Learn Express.js, routing, middleware, request/response handling, and REST API creation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Express.js Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Express Projects\", url: \"https://expressjs.com/en/starter/installing.html\" },\n          { type: \"documentation\", title: \"Express Documentation\", url: \"https://expressjs.com/en/4x/api.html\" }\n        ]\n      },\n      {\n        dayNumber: 17,\n        title: \"Database Integration\",\n        content: \"Learn MongoDB, Mongoose, database operations, and NoSQL database concepts.\",\n        resourceLinks: [\n          { type: \"video\", title: \"MongoDB Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Database Projects\", url: \"https://mongoosejs.com/docs/\" },\n          { type: \"documentation\", title: \"MongoDB Documentation\", url: \"https://docs.mongodb.com/\" }\n        ]\n      },\n      {\n        dayNumber: 18,\n        title: \"Authentication & Security\",\n        content: \"Learn JWT tokens, bcrypt, authentication, authorization, and security best practices.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Authentication Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Auth Projects\", url: \"https://jwt.io/introduction\" },\n          { type: \"documentation\", title: \"JWT Documentation\", url: \"https://jwt.io/introduction\" }\n        ]\n      },\n      {\n        dayNumber: 19,\n        title: \"RESTful API Design\",\n        content: \"Learn REST API design principles, HTTP methods, status codes, and API documentation.\",\n        resourceLinks: [\n          { type: \"video\", title: \"REST API Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"API Projects\", url: \"https://expressjs.com/en/guide/routing.html\" },\n          { type: \"practice\", title: \"API Testing\", url: \"https://www.postman.com/\" }\n        ]\n      },\n      {\n        dayNumber: 20,\n        title: \"GraphQL Introduction\",\n        content: \"Learn GraphQL, queries, mutations, resolvers, and modern API development.\",\n        resourceLinks: [\n          { type: \"video\", title: \"GraphQL Tutorial\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"GraphQL Projects\", url: \"https://graphql.org/learn/\" },\n          { type: \"documentation\", title: \"GraphQL Documentation\", url: \"https://graphql.org/learn/\" }\n        ]\n      },\n      {\n        dayNumber: 21,\n        title: \"Testing Backend\",\n        content: \"Learn Jest, Supertest, API testing, integration testing, and backend testing strategies.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Backend Testing\", url: \"https://www.youtube.com/watch?v=Oe421EPjeBE\" },\n          { type: \"practice\", title: \"Testing Exercises\", url: \"https://jestjs.io/docs/getting-started\" },\n          { type: \"documentation\", title: \"Supertest Documentation\", url: \"https://github.com/visionmedia/supertest\" }\n        ]\n      },\n      // Week 4: Full-Stack Integration\n      {\n        dayNumber: 22,\n        title: \"Full-Stack Project Setup\",\n        content: \"Set up a complete full-stack project with frontend, backend, and database integration.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Full-Stack Setup\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Setup\", url: \"https://expressjs.com/en/starter/generator.html\" },\n          { type: \"documentation\", title: \"Full-Stack Guide\", url: \"https://developer.mozilla.org/en-US/docs/Learn/Server-side\" }\n        ]\n      },\n      {\n        dayNumber: 23,\n        title: \"Deployment & DevOps\",\n        content: \"Learn deployment strategies, Heroku, Vercel, Docker, and production deployment.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Deployment Tutorial\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Deployment Project\", url: \"https://devcenter.heroku.com/articles/getting-started-with-nodejs\" },\n          { type: \"documentation\", title: \"Docker Documentation\", url: \"https://docs.docker.com/get-started/\" }\n        ]\n      },\n      {\n        dayNumber: 24,\n        title: \"Performance Optimization\",\n        content: \"Learn frontend optimization, backend optimization, caching, and performance monitoring.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Performance Optimization\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Optimization Projects\", url: \"https://web.dev/performance/\" },\n          { type: \"documentation\", title: \"Performance Guide\", url: \"https://web.dev/performance/\" }\n        ]\n      },\n      {\n        dayNumber: 25,\n        title: \"Security Best Practices\",\n        content: \"Learn web security, HTTPS, CORS, input validation, and security vulnerabilities.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Web Security\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Security Projects\", url: \"https://owasp.org/www-project-top-ten/\" },\n          { type: \"documentation\", title: \"OWASP Guide\", url: \"https://owasp.org/www-project-top-ten/\" }\n        ]\n      },\n      {\n        dayNumber: 26,\n        title: \"Modern Development Tools\",\n        content: \"Learn Git, GitHub, CI/CD, code quality tools, and modern development workflows.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Git Tutorial\", url: \"https://www.youtube.com/watch?v=8JJ101D3knE\" },\n          { type: \"practice\", title: \"Git Exercises\", url: \"https://learngitbranching.js.org/\" },\n          { type: \"documentation\", title: \"Git Documentation\", url: \"https://git-scm.com/doc\" }\n        ]\n      },\n      {\n        dayNumber: 27,\n        title: \"Advanced React Patterns\",\n        content: \"Learn advanced React patterns, context API, render props, and higher-order components.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Advanced React\", url: \"https://www.youtube.com/watch?v=w7ejDZ8SWv8\" },\n          { type: \"practice\", title: \"Advanced Patterns\", url: \"https://reactjs.org/docs/context.html\" },\n          { type: \"documentation\", title: \"React Patterns\", url: \"https://reactpatterns.com/\" }\n        ]\n      },\n      {\n        dayNumber: 28,\n        title: \"Microservices & Architecture\",\n        content: \"Learn microservices architecture, service communication, and scalable application design.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Microservices\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Architecture Projects\", url: \"https://microservices.io/\" },\n          { type: \"documentation\", title: \"Microservices Guide\", url: \"https://microservices.io/\" }\n        ]\n      },\n      {\n        dayNumber: 29,\n        title: \"Final Project Planning\",\n        content: \"Plan and design a comprehensive full-stack web application with modern features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Project Planning\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Project Design\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Architecture Planning\", url: \"https://microservices.io/\" }\n        ]\n      },\n      {\n        dayNumber: 30,\n        title: \"Final Project Implementation\",\n        content: \"Build and deploy a complete full-stack web application with all modern features.\",\n        resourceLinks: [\n          { type: \"video\", title: \"Project Implementation\", url: \"https://www.youtube.com/watch?v=8ext9G7xspg\" },\n          { type: \"practice\", title: \"Final Project\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" },\n          { type: \"practice\", title: \"Portfolio Development\", url: \"https://www.freecodecamp.org/learn/javascript-algorithms-and-data-structures/\" }\n        ]\n      }\n    ];\n\n    for (const taskData of webDev30DayTasks) {\n      await storage.createTask({\n        challengeId: webDev30Day.id,\n        dayNumber: taskData.dayNumber,\n        title: taskData.title,\n        content: taskData.content,\n        resourceLinks: taskData.resourceLinks\n      });\n    }\n\n    // Create comprehensive certifications\n    console.log(\"🏆 Creating comprehensive certifications...\");\n    const certifications = [\n      // Programming Certifications\n      {\n        title: \"Python Institute PCAP\",\n        provider: \"Python Institute\",\n        link: \"https://pythoninstitute.org/certification/pcap-certification-associate-python-programmer/\"\n      },\n      {\n        title: \"Oracle Java SE 11 Developer\",\n        provider: \"Oracle\",\n        link: \"https://education.oracle.com/java/java-se/product_267\"\n      },\n      {\n        title: \"Microsoft C# Developer\",\n        provider: \"Microsoft\",\n        link: \"https://docs.microsoft.com/en-us/learn/certifications/\"\n      },\n      // Cloud Certifications\n      {\n        title: \"AWS Cloud Practitioner\",\n        provider: \"Amazon Web Services\",\n        link: \"https://aws.amazon.com/certification/certified-cloud-practitioner/\"\n      },\n      {\n        title: \"AWS Solutions Architect\",\n        provider: \"Amazon Web Services\",\n        link: \"https://aws.amazon.com/certification/certified-solutions-architect-associate/\"\n      },\n      {\n        title: \"Microsoft Azure Fundamentals\",\n        provider: \"Microsoft\",\n        link: \"https://docs.microsoft.com/en-us/learn/certifications/azure-fundamentals/\"\n      },\n      {\n        title: \"Google Cloud Professional\",\n        provider: \"Google Cloud\",\n        link: \"https://cloud.google.com/certification\"\n      },\n      // Data Science Certifications\n      {\n        title: \"Google Data Analytics Certificate\",\n        provider: \"Google\",\n        link: \"https://www.coursera.org/professional-certificates/google-data-analytics\"\n      },\n      {\n        title: \"IBM Data Science Professional\",\n        provider: \"IBM\",\n        link: \"https://www.coursera.org/professional-certificates/ibm-data-science\"\n      },\n      {\n        title: \"Microsoft Data Analyst Associate\",\n        provider: \"Microsoft\",\n        link: \"https://docs.microsoft.com/en-us/learn/certifications/azure-data-fundamentals/\"\n      },\n      // Web Development Certifications\n      {\n        title: \"Meta Front-End Developer\",\n        provider: \"Meta\",\n        link: \"https://www.coursera.org/professional-certificates/meta-front-end-developer\"\n      },\n      {\n        title: \"Google UX Design Certificate\",\n        provider: \"Google\",\n        link: \"https://www.coursera.org/professional-certificates/google-ux-design\"\n      },\n      {\n        title: \"AWS Developer Associate\",\n        provider: \"Amazon Web Services\",\n        link: \"https://aws.amazon.com/certification/certified-developer-associate/\"\n      },\n      // Cybersecurity Certifications\n      {\n        title: \"CompTIA Security+\",\n        provider: \"CompTIA\",\n        link: \"https://www.comptia.org/certifications/security\"\n      },\n      {\n        title: \"CISSP\",\n        provider: \"ISC2\",\n        link: \"https://www.isc2.org/Certifications/CISSP\"\n      },\n      {\n        title: \"CEH (Certified Ethical Hacker)\",\n        provider: \"EC-Council\",\n        link: \"https://www.eccouncil.org/programs/certified-ethical-hacker-ceh/\"\n      },\n      // DevOps Certifications\n      {\n        title: \"Docker Certified Associate\",\n        provider: \"Docker\",\n        link: \"https://training.mirantis.com/certification/dca-certification-exam/\"\n      },\n      {\n        title: \"Kubernetes Administrator\",\n        provider: \"CNCF\",\n        link: \"https://www.cncf.io/certification/cka/\"\n      },\n      {\n        title: \"AWS DevOps Engineer\",\n        provider: \"Amazon Web Services\",\n        link: \"https://aws.amazon.com/certification/certified-devops-engineer-professional/\"\n      }\n    ];\n\n    for (const certData of certifications) {\n      await storage.createCertification(certData);\n    }\n\n    console.log(\"✅ Comprehensive certifications created\");\n\n    console.log(\"🎉 Database seeding completed successfully!\");\n    console.log(\"\\n📊 Summary:\");\n    console.log(`- Admin user: admin@lumoraed.com`);\n    console.log(`- Challenges: 8 created (10-day, 30-day, 60-day programs)`);\n    console.log(`- Tasks: ${python10DayTasks.length + python30DayTasks.length + python60DayTasks.length} created`);\n    console.log(`- Certifications: ${certifications.length} created`);\n    console.log(\"\\n🚀 Features included:\");\n    console.log(\"  ✅ Admin authentication system\");\n    console.log(\"  ✅ Comprehensive programming challenges\");\n    console.log(\"  ✅ Real-world practice resources (HackerRank, LeetCode)\");\n    console.log(\"  ✅ Video tutorials and documentation\");\n    console.log(\"  ✅ Progress tracking and streaks\");\n    console.log(\"  ✅ Certification management\");\n    console.log(\"  ✅ Student enrollment system\");\n    console.log(\"\\n💡 Next steps:\");\n    console.log(\"  1. Set up your database with DATABASE_URL\");\n    console.log(\"  2. Run: npm run db:push\");\n    console.log(\"  3. Run: npm run db:seed\");\n    console.log(\"  4. Start the application: npm run dev\");\n    console.log(\"  5. Login with admin@lumoraed.com / Admin@123\");\n\n  } catch (error) {\n    console.error(\"❌ Error seeding database:\", error);\n    throw error;\n  }\n}\n\n// Run the seeding if this file is executed directly\nif (import.meta.url === `file://${process.argv[1]}`) {\n  seedDatabase()\n    .then(() => {\n      console.log(\"✅ Seeding completed\");\n      process.exit(0);\n    })\n    .catch((error) => {\n      console.error(\"❌ Seeding failed:\", error);\n      process.exit(1);\n    });\n}\n\nexport { seedDatabase };\n","size_bytes":91634},"server/__tests__/routes.test.ts":{"content":"import request from 'supertest';\nimport { Express } from 'express';\nimport { registerRoutes } from '../routes';\nimport { storage } from '../storage';\n\n// Mock the storage module\njest.mock('../storage');\n\ndescribe('API Routes', () => {\n  let app: Express;\n  \n  beforeEach(() => {\n    // Reset all mocks\n    jest.clearAllMocks();\n  });\n  \n  beforeAll(async () => {\n    // Create Express app for testing\n    const express = require('express');\n    app = express();\n    app.use(express.json());\n    \n    // Register routes\n    await registerRoutes(app);\n  });\n  \n  describe('Health Check', () => {\n    it('should return health status', async () => {\n      const response = await request(app)\n        .get('/api/health')\n        .expect(200);\n      \n      expect(response.body).toHaveProperty('status');\n      expect(response.body).toHaveProperty('timestamp');\n    });\n  });\n  \n  describe('Authentication', () => {\n    it('should create admin user', async () => {\n      const mockUser = global.testUtils.createMockUser();\n      (storage.createUser as jest.Mock).mockResolvedValue(mockUser);\n      \n      const response = await request(app)\n        .post('/api/auth/admin-login')\n        .send({\n          email: 'admin@lumoraed.com',\n          password: 'Admin@123'\n        })\n        .expect(200);\n      \n      expect(response.body).toHaveProperty('message');\n      expect(response.body).toHaveProperty('user');\n    });\n    \n    it('should reject invalid admin credentials', async () => {\n      const response = await request(app)\n        .post('/api/auth/admin-login')\n        .send({\n          email: 'wrong@example.com',\n          password: 'wrongpassword'\n        })\n        .expect(401);\n      \n      expect(response.body).toHaveProperty('error');\n    });\n  });\n  \n  describe('Challenges', () => {\n    it('should get all challenges', async () => {\n      const mockChallenges = [global.testUtils.createMockChallenge()];\n      (storage.getAllChallenges as jest.Mock).mockResolvedValue(mockChallenges);\n      \n      const response = await request(app)\n        .get('/api/challenges')\n        .expect(200);\n      \n      expect(Array.isArray(response.body)).toBe(true);\n    });\n    \n    it('should get challenge by ID', async () => {\n      const mockChallenge = global.testUtils.createMockChallenge();\n      (storage.getChallenge as jest.Mock).mockResolvedValue(mockChallenge);\n      \n      const response = await request(app)\n        .get('/api/challenges/test-challenge-id')\n        .expect(200);\n      \n      expect(response.body).toHaveProperty('id');\n    });\n  });\n  \n  describe('Roadmaps', () => {\n    it('should get all roadmaps', async () => {\n      const mockRoadmaps = [global.testUtils.createMockRoadmap()];\n      (storage.getAllRoadmaps as jest.Mock).mockResolvedValue(mockRoadmaps);\n      \n      const response = await request(app)\n        .get('/api/roadmaps')\n        .expect(200);\n      \n      expect(Array.isArray(response.body)).toBe(true);\n    });\n    \n    it('should get roadmap by ID', async () => {\n      const mockRoadmap = global.testUtils.createMockRoadmap();\n      (storage.getRoadmap as jest.Mock).mockResolvedValue(mockRoadmap);\n      (storage.getStepsByRoadmap as jest.Mock).mockResolvedValue([]);\n      \n      const response = await request(app)\n        .get('/api/roadmaps/test-roadmap-id')\n        .expect(200);\n      \n      expect(response.body).toHaveProperty('roadmap');\n      expect(response.body).toHaveProperty('steps');\n    });\n  });\n  \n  describe('Certifications', () => {\n    it('should get all certifications', async () => {\n      const mockCertifications = [\n        {\n          id: 'test-cert-id',\n          title: 'Test Certification',\n          provider: 'Test Provider',\n          link: 'https://example.com',\n          dateAdded: new Date()\n        }\n      ];\n      (storage.getAllCertifications as jest.Mock).mockResolvedValue(mockCertifications);\n      \n      const response = await request(app)\n        .get('/api/certifications')\n        .expect(200);\n      \n      expect(Array.isArray(response.body)).toBe(true);\n    });\n  });\n  \n  describe('Error Handling', () => {\n    it('should handle 404 errors', async () => {\n      const response = await request(app)\n        .get('/api/nonexistent')\n        .expect(404);\n      \n      expect(response.body).toHaveProperty('error');\n    });\n    \n    it('should handle validation errors', async () => {\n      const response = await request(app)\n        .post('/api/auth/admin-login')\n        .send({}) // Empty body\n        .expect(400);\n      \n      expect(response.body).toHaveProperty('error');\n    });\n  });\n});\n","size_bytes":4604},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* Custom animations for smooth landing page */\n@keyframes fade-in {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slide-up {\n  from {\n    opacity: 0;\n    transform: translateY(40px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slide-up-delay {\n  from {\n    opacity: 0;\n    transform: translateY(60px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slide-up-delay-2 {\n  from {\n    opacity: 0;\n    transform: translateY(80px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fade-in-up {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes gradient {\n  0%, 100% {\n    background-position: 0% 50%;\n  }\n  50% {\n    background-position: 100% 50%;\n  }\n}\n\n.animate-fade-in {\n  animation: fade-in 0.8s ease-out;\n}\n\n.animate-fade-in-delay {\n  animation: fade-in 0.8s ease-out 0.2s both;\n}\n\n.animate-slide-up {\n  animation: slide-up 1s ease-out;\n}\n\n.animate-slide-up-delay {\n  animation: slide-up-delay 1s ease-out 0.3s both;\n}\n\n.animate-slide-up-delay-2 {\n  animation: slide-up-delay-2 1s ease-out 0.6s both;\n}\n\n.animate-fade-in-up {\n  animation: fade-in-up 0.8s ease-out;\n}\n\n.animate-gradient {\n  background-size: 200% 200%;\n  animation: gradient 3s ease infinite;\n}\n\n/* Smooth transitions for all interactive elements */\n* {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n/* Enhanced hover effects */\n.hover-elevate {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.hover-elevate:hover {\n  transform: translateY(-4px);\n  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n}\n\n.active-elevate-2 {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 222 47% 11%;\n\n  --border: 214 32% 91%;\n\n  --card: 240 5% 96%;\n\n  --card-foreground: 222 47% 11%;\n\n  --card-border: 214 20% 88%;\n\n  --sidebar: 240 4% 94%;\n\n  --sidebar-foreground: 222 47% 11%;\n\n  --sidebar-border: 214 18% 86%;\n\n  --sidebar-primary: 251 63% 51%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 240 5% 88%;\n\n  --sidebar-accent-foreground: 222 47% 11%;\n\n  --sidebar-ring: 251 63% 51%;\n\n  --popover: 240 6% 92%;\n\n  --popover-foreground: 222 47% 11%;\n\n  --popover-border: 214 16% 84%;\n\n  --primary: 251 63% 51%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 240 5% 86%;\n\n  --secondary-foreground: 222 47% 11%;\n\n  --muted: 240 8% 90%;\n\n  --muted-foreground: 215 14% 34%;\n\n  --accent: 240 6% 88%;\n\n  --accent-foreground: 222 47% 11%;\n\n  --destructive: 0 72% 51%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 214 32% 85%;\n  --ring: 251 63% 51%;\n  --chart-1: 251 63% 45%;\n  --chart-2: 217 91% 54%;\n  --chart-3: 142 71% 40%;\n  --chart-4: 38 92% 45%;\n  --chart-5: 274 70% 50%;\n\n  --font-sans: Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: \"JetBrains Mono\", Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  --shadow-2xs: 0px 1px 2px 0px hsl(222 47% 11% / 0.03);\n  --shadow-xs: 0px 1px 3px 0px hsl(222 47% 11% / 0.05);\n  --shadow-sm: 0px 2px 4px -1px hsl(222 47% 11% / 0.04), 0px 1px 2px -1px hsl(222 47% 11% / 0.03);\n  --shadow: 0px 4px 6px -1px hsl(222 47% 11% / 0.05), 0px 2px 4px -2px hsl(222 47% 11% / 0.04);\n  --shadow-md: 0px 6px 12px -2px hsl(222 47% 11% / 0.08), 0px 3px 6px -3px hsl(222 47% 11% / 0.06);\n  --shadow-lg: 0px 10px 20px -4px hsl(222 47% 11% / 0.10), 0px 4px 8px -4px hsl(222 47% 11% / 0.08);\n  --shadow-xl: 0px 20px 30px -6px hsl(222 47% 11% / 0.12), 0px 8px 16px -6px hsl(222 47% 11% / 0.10);\n  --shadow-2xl: 0px 30px 50px -12px hsl(222 47% 11% / 0.15);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 222 47% 11%;\n\n  --foreground: 0 0% 98%;\n\n  --border: 217 33% 24%;\n\n  --card: 217 33% 17%;\n\n  --card-foreground: 0 0% 98%;\n\n  --card-border: 217 30% 22%;\n\n  --sidebar: 217 35% 19%;\n\n  --sidebar-foreground: 0 0% 98%;\n\n  --sidebar-border: 217 32% 24%;\n\n  --sidebar-primary: 251 70% 65%;\n\n  --sidebar-primary-foreground: 222 47% 11%;\n\n  --sidebar-accent: 217 33% 24%;\n\n  --sidebar-accent-foreground: 0 0% 98%;\n\n  --sidebar-ring: 251 70% 65%;\n\n  --popover: 217 34% 21%;\n\n  --popover-foreground: 0 0% 98%;\n\n  --popover-border: 217 32% 26%;\n\n  --primary: 251 70% 60%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 217 33% 26%;\n\n  --secondary-foreground: 0 0% 98%;\n\n  --muted: 217 30% 23%;\n\n  --muted-foreground: 215 20% 65%;\n\n  --accent: 217 32% 24%;\n\n  --accent-foreground: 0 0% 98%;\n\n  --destructive: 0 72% 55%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 217 33% 28%;\n  --ring: 251 70% 65%;\n  --chart-1: 251 70% 70%;\n  --chart-2: 217 91% 75%;\n  --chart-3: 142 71% 60%;\n  --chart-4: 38 92% 60%;\n  --chart-5: 274 70% 68%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.20);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.30);\n  --shadow-sm: 0px 2px 4px -1px hsl(0 0% 0% / 0.25), 0px 1px 2px -1px hsl(0 0% 0% / 0.20);\n  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.30), 0px 2px 4px -2px hsl(0 0% 0% / 0.25);\n  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.35), 0px 3px 6px -3px hsl(0 0% 0% / 0.30);\n  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.40), 0px 4px 8px -4px hsl(0 0% 0% / 0.35);\n  --shadow-xl: 0px 20px 30px -6px hsl(0 0% 0% / 0.45), 0px 8px 16px -6px hsl(0 0% 0% / 0.40);\n  --shadow-2xl: 0px 30px 50px -12px hsl(0 0% 0% / 0.50);\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* Custom animations for landing page */\n  @keyframes fade-in {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes fade-in-delay {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes slide-up {\n    from { opacity: 0; transform: translateY(50px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes slide-up-delay {\n    from { opacity: 0; transform: translateY(50px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes slide-up-delay-2 {\n    from { opacity: 0; transform: translateY(50px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes fade-in-up {\n    from { opacity: 0; transform: translateY(30px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n  \n  @keyframes gradient {\n    0%, 100% { background-position: 0% 50%; }\n    50% { background-position: 100% 50%; }\n  }\n  \n  .animate-fade-in {\n    animation: fade-in 0.8s ease-out;\n  }\n  \n  .animate-fade-in-delay {\n    animation: fade-in-delay 0.8s ease-out 0.2s both;\n  }\n  \n  .animate-slide-up {\n    animation: slide-up 1s ease-out;\n  }\n  \n  .animate-slide-up-delay {\n    animation: slide-up-delay 1s ease-out 0.3s both;\n  }\n  \n  .animate-slide-up-delay-2 {\n    animation: slide-up-delay-2 1s ease-out 0.6s both;\n  }\n  \n  .animate-fade-in-up {\n    animation: fade-in-up 0.8s ease-out both;\n  }\n  \n  .animate-gradient {\n    background-size: 200% 200%;\n    animation: gradient 3s ease infinite;\n  }\n}","size_bytes":14883}},"version":2}